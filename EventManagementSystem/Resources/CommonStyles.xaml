<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:primitives="clr-namespace:Telerik.Windows.Controls.RibbonView.Primitives;assembly=Telerik.Windows.Controls.RibbonView"
                    xmlns:calendar="clr-namespace:Telerik.Windows.Controls.Calendar;assembly=Telerik.Windows.Controls.Input"
                    xmlns:chromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls">

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type telerik:RadCalendar}">
        <Setter Property="AreWeekNumbersVisible" Value="False" />
    </Style>
    
    <Style TargetType="{x:Type telerik:RadDatePicker}">
        <Setter Property="CalendarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type telerik:RadCalendar}">
                    <Setter Property="AreWeekNumbersVisible" Value="False" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">

        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="4,2" />

        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True"
                               ToolTip="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=controlWithError}">
                        <TextBlock DockPanel.Dock="Right"
                                   Foreground="Red"
                                   FontSize="14pt"
                                   Margin="-15,0,0,0" FontWeight="Bold"
                                   Text="*" />
                        <Border>
                            <AdornedElementPlaceholder x:Name="controlWithError" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Background" Value="Pink" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type telerik:RadButton}">
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="NoChromeButton" TargetType="{x:Type telerik:RadButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadButton}">
                    <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD" />
                            <Setter Property="Opacity" TargetName="Chrome" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="telerik:StyleManager.Theme" Value="Windows8" />
        <Setter Property="FontFamily" Value="Segoe UI" />
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="telerik:StyleManager.Theme" Value="Windows8" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style TargetType="{x:Type telerik:RadComboBox}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="FontFamily" Value="Segoe UI" />
    </Style>
    <Style TargetType="{x:Type telerik:RadDateTimePicker}">
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style TargetType="{x:Type telerik:RadAutoCompleteBox}">

        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="FontStyle" Value="Normal" />

        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True"
                               ToolTip="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=controlWithError}">
                        <TextBlock DockPanel.Dock="Right"
                                   Foreground="Red"
                                   FontSize="14pt"
                                   Margin="-15,0,0,0" FontWeight="Bold"
                                   Text="*" />
                        <Border>
                            <AdornedElementPlaceholder x:Name="controlWithError" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Background" Value="Pink" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type PasswordBox}">

        <Setter Property="Padding" Value="4,2" />
        <Setter Property="Margin" Value="5" />

        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True"
                               ToolTip="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=controlWithError}">
                        <TextBlock DockPanel.Dock="Right"
                                   Foreground="Red"
                                   FontSize="14pt"
                                   Margin="-15,0,0,0" FontWeight="Bold"
                                   Text="*" />
                        <Border>
                            <AdornedElementPlaceholder x:Name="controlWithError" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Background" Value="Pink" />
                <Setter Property="Foreground" Value="DimGray" />
                <Setter Property="Margin" Value="7" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="ApplicationTitleBarStyle" TargetType="{x:Type primitives:WindowTitle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type primitives:WindowTitle}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="Title" Text="{TemplateBinding Title}"
                                   TextTrimming="CharacterEllipsis"
                                   Foreground="White"
                                   FontSize="13" />
                        <TextBlock x:Name="Divider"
                                   Text="{telerik:LocalizableResource Key=RibbonBarWindowTitleDivider}"
                                   Visibility="{TemplateBinding DividerVisibility}"
                                   Foreground="White"
                                   FontSize="13" />
                        <TextBlock x:Name="ApplicationName"
                                   Text="{TemplateBinding ApplicationName}"
                                   TextTrimming="CharacterEllipsis"
                                   Foreground="White"
                                   FontSize="13" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="SevenColumnRadClockStyle" TargetType="telerik:RadClock">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerik:RadUniformGrid>
                        <telerik:RadUniformGrid.Style>
                            <Style TargetType="telerik:RadUniformGrid">
                                <Setter Property="Columns" Value="7"/>
                            </Style>
                        </telerik:RadUniformGrid.Style>
                    </telerik:RadUniformGrid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="GridViewCellTemplate" TargetType="telerik:GridViewCell">
        <Grid>
            <ContentPresenter x:Name="PART_ContentPresenter" 
                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                              Content="{TemplateBinding Content}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              Margin="{TemplateBinding Padding}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
    </ControlTemplate>

    <SolidColorBrush x:Key="GridView_GridLinesItemBorder" Color="#FFCBCBCB"/>

    <Style TargetType="telerik:GridViewCell">
        <Setter Property="Template" Value="{StaticResource GridViewCellTemplate}"/>
        <Setter Property="Padding" Value="5,0,3,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridView_GridLinesItemBorder}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Thickness x:Key="CalendarButtonButtonChromeMargin">1</Thickness>
    <Thickness x:Key="CalendarButtonTodayVisualMargin">1</Thickness>
    <LinearGradientBrush x:Key="ControlOuterBorder_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF282828" />
        <GradientStop Color="#FF5F5F5F" Offset="1" />
    </LinearGradientBrush>
    <CornerRadius x:Key="SplitButton_SpanCornerRadius">1</CornerRadius>

    <!-- CalendarButtonStyle -->
    <Style x:Key="CalendarButtonStyle" TargetType="calendar:CalendarButton">
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="calendar:CalendarButton">
                    <Grid x:Name="LayoutRoot" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                     </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ViewStates">
                                <VisualState x:Name="IsInAnotherView" />
                                <VisualState x:Name="IsNotFromCurrentView">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonType">
                                <VisualState x:Name="Year" />
                                <VisualState x:Name="Decade" />
                                <VisualState x:Name="Date" />
                                <VisualState x:Name="WeekName">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="WeekNumber">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionChrome" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TodayDate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TodayVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Month" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectedDate" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="SelectedDate" Storyboard.TargetProperty="Background.Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="#FF2980B9" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).Color">
                                            <DiscreteColorKeyFrame KeyTime="0" Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />

                        <chromes:ButtonChrome x:Name="SelectionChrome" Margin="{StaticResource CalendarButtonButtonChromeMargin}" CornerRadius="{StaticResource SplitButton_SpanCornerRadius}" RenderNormal="False" RenderFocused="{TemplateBinding IsFocused}" RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" />
                        <Border x:Name="TodayVisual" Margin="{StaticResource CalendarButtonTodayVisualMargin}" Background="LightGray" Visibility="Collapsed" BorderThickness="0" CornerRadius="0" BorderBrush="{StaticResource ControlOuterBorder_Pressed}" />

                        <Border x:Name="SelectedDate" Background="#FF2980B9" Opacity="0" BorderThickness="1" BorderBrush="Transparent" />

                        <ContentPresenter x:Name="Content" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                      
                    </Grid>
                  
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- calendar:CalendarButton -->
    <Style TargetType="calendar:CalendarButton" BasedOn="{StaticResource CalendarButtonStyle}" />
    
</ResourceDictionary>