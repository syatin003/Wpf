//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Activities_ActivityTypes", "ActivityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.ActivityType), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Activity), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Activities_Enquiries", "Enquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Enquiry), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Activity), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Activities_FollowUps", "FollowUp", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.FollowUp), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Activity), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Activities_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Activity), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Campaigns_CampaignTypes", "CampaignType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.CampaignType), "Campaign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Campaign), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Enquiries_Campaigns", "Campaign", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Campaign), "Enquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Enquiry), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_CCContactsCorrespondence_Contacts", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Contact), "CCContactsCorrespondence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.CCContactsCorrespondence), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_CCContactsCorrespondence_Corresponcences", "Corresponcence", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Corresponcence), "CCContactsCorrespondence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.CCContactsCorrespondence), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTabTransactions_Clerks", "Clerk", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Clerk), "TillTabTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTabTransaction), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTransactions_Clerks", "Clerk", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Clerk), "TillTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTransaction), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Contacts_ContactTitles", "ContactTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.ContactTitle), "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Contact), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Corresponcences_Contacts", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Contact), "Corresponcence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Corresponcence), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Enquiries_Contacts", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Contact), "Enquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Enquiry), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventContacts_Contacts", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Contact), "EventContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventContact), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Events_Contacts", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Contact), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Event), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Corresponcences_CorresponcenceTypes", "CorresponcenceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.CorresponcenceType), "Corresponcence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Corresponcence), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Corresponcences_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "Corresponcence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Corresponcence), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_DefaultSettingsForEnquiries_EnquiryStatuses", "EnquiryStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EnquiryStatus), "DefaultSettingsForEnquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.DefaultSettingsForEnquiry), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Users_DefaultSettingsForEnquiries", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "DefaultSettingsForEnquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.DefaultSettingsForEnquiry), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Documents_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Event), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Document), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Enquiries_EnquiryReceiveMethods", "EnquiryReceiveMethod", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EnquiryReceiveMethod), "Enquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Enquiry), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Enquiries_EnquiryStatuses", "EnquiryStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EnquiryStatus), "Enquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Enquiry), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Enquiries_EventStatuses", "EventStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EventStatus), "Enquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Enquiry), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Enquiries_EventTypes", "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EventType), "Enquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Enquiry), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Enquiries_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "Enquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Enquiry), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Enquiries_Users1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "Enquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Enquiry), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EnquiryNotes_Enquiries", "Enquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Enquiry), "EnquiryNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EnquiryNote), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EnquiryUpdates_EnquiryUpdates", "Enquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Enquiry), "EnquiryUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EnquiryUpdate), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Events_Enquiries", "Enquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Enquiry), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Event), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_FollowUps_Enquiries", "Enquiry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Enquiry), "FollowUp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.FollowUp), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EnquiryNotes_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "EnquiryNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EnquiryNote), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EnquiryUpdates_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "EnquiryUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EnquiryUpdate), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventBookedProducts_EventCharges", "EventCharge", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EventCharge), "EventBookedProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.EventBookedProduct), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventBookedProducts_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Event), "EventBookedProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventBookedProduct), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventBookedProducts_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Product), "EventBookedProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventBookedProduct), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventCaterings_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Event), "EventCatering", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventCatering), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventCaterings_Rooms", "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Room), "EventCatering", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventCatering), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventCharges_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Event), "EventCharge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventCharge), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventCharges_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Product), "EventCharge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventCharge), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventContacts_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Event), "EventContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventContact), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventGolfs_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Event), "EventGolf", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventGolf), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventGolfs_GolfHoles", "GolfHole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.GolfHole), "EventGolf", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventGolf), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventGolfs_Golfs", "Golf", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Golf), "EventGolf", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventGolf), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventInvoices_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Event), "EventInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventInvoice), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventNotes_EventNoteTypes", "EventNoteType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EventNoteType), "EventNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventNote), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventNotes_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Event), "EventNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventNote), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventNotes_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "EventNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventNote), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventStatusOptions_EventOptions", "EventOption", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EventOption), "EventStatusOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventStatusOption), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventTypeOptions_EventOptions1", "EventOption", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EventOption), "EventTypeOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventTypeOption), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventPayments_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Event), "EventPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventPayment), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventPayments_PaymentMethods1", "PaymentMethod", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.PaymentMethod), "EventPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventPayment), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventPayments_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "EventPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventPayment), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventRooms_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Event), "EventRoom", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventRoom), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventRooms_Rooms", "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Room), "EventRoom", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventRoom), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Events_EventStatuses", "EventStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EventStatus), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Event), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Events_EventTypes", "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EventType), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Event), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventUpdates_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Event), "EventUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventUpdate), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Invoices_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Event), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Invoice), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Reports_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Event), "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Report), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventStatusOptions_EventStatuses", "EventStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EventStatus), "EventStatusOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventStatusOption), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventTypeOptions_EventTypes1", "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EventType), "EventTypeOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventTypeOption), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventTypes_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.User), "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventType), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_ProductEventTypes_EventTypes", "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EventType), "ProductEventType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.ProductEventType), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventUpdates_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "EventUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventUpdate), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_RoomFacilities_Facilities", "Facility", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Facility), "RoomFacility", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.RoomFacility), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_FinaliseKeys_Tills", "Till", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Till), "FinaliseKey", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.FinaliseKey), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTransactionFinaliseKeys_FinaliseKeys", "FinaliseKey", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.FinaliseKey), "TillTransactionFinaliseKey", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTransactionFinaliseKey), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_FollowUps_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "FollowUp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.FollowUp), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_FollowUps_Users1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "FollowUp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.FollowUp), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MailTemplates_MailTemplateCategories", "MailTemplateCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.MailTemplateCategory), "MailTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MailTemplate), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MailTemplates_MailTemplateTypes", "MailTemplateType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.MailTemplateType), "MailTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MailTemplate), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MailTemplates_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "MailTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MailTemplate), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Permissions_PermissionGroups", "PermissionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.PermissionGroup), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Permission), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_UserGroupPermissions_Permissions", "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Permission), "UserGroupPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.UserGroupPermission), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_UserPermissions_Permissions", "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Permission), "UserPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.UserPermission), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_ProductDepartments_Tills", "Till", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Till), "ProductDepartment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.ProductDepartment), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Products_ProductDepartments", "ProductDepartment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.ProductDepartment), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Product), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillProducts_ProductDepartments", "ProductDepartment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.ProductDepartment), "TillProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillProduct), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTransactionDepartments_ProductDepartments", "ProductDepartment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.ProductDepartment), "TillTransactionDepartment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTransactionDepartment), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_ProductEventTypes_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Product), "ProductEventType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.ProductEventType), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_ProductGroups_Tills", "Till", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Till), "ProductGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.ProductGroup), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Products_ProductGroups", "ProductGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.ProductGroup), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Product), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillProducts_ProductGroups", "ProductGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.ProductGroup), "TillProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillProduct), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTransactionGroups_ProductGroups", "ProductGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.ProductGroup), "TillTransactionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTransactionGroup), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Products_ProductOptions", "ProductOption", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.ProductOption), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Product), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Products_Products1", "ProductType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.ProductType), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Product), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Products_ProductVATRates", "ProductVATRate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.ProductVATRate), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Product), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillProducts_ProductVATRates", "ProductVATRate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.ProductVATRate), "TillProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillProduct), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_RoomFacilities_Rooms", "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Room), "RoomFacility", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.RoomFacility), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillProducts_Tills", "Till", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Till), "TillProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillProduct), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillProductTills_TillProducts", "TillProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.TillProduct), "TillProductTill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillProductTill), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTransactinProducts_TillProducts", "TillProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.TillProduct), "TillTransactionProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTransactionProduct), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillProductTills_Tills", "Till", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Till), "TillProductTill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillProductTill), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTabTransactions_Tills", "Till", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Till), "TillTabTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTabTransaction), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTransactions_Tills", "Till", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Till), "TillTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTransaction), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTransactionDetails_TillTabTransactions", "TillTabTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.TillTabTransaction), "TillTransactionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTransactionDetail), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTransactionDepartments_TillTransactions", "TillTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.TillTransaction), "TillTransactionDepartment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTransactionDepartment), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTransactionDetails_TillTransactions", "TillTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.TillTransaction), "TillTransactionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTransactionDetail), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTransactionFinaliseKeys_TillTransactions", "TillTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.TillTransaction), "TillTransactionFinaliseKey", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTransactionFinaliseKey), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTransactionGroups_TillTransactions", "TillTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.TillTransaction), "TillTransactionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTransactionGroup), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillTransactinProducts_TillTransactions", "TillTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.TillTransaction), "TillTransactionProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillTransactionProduct), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Users_Users", "UserDepartment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.UserDepartment), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.User), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_UserGroupPermissions_UserGroups", "UserGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.UserGroup), "UserGroupPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.UserGroupPermission), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Users_UserGroups", "UserGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.UserGroup), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.User), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Users_UserJobTypes", "UserJobType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.UserJobType), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.User), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_UserPermissions_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "UserPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.UserPermission), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_CorrespondenceDocuments_Corresponcences", "Corresponcence", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Corresponcence), "CorrespondenceDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.CorrespondenceDocument), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_CorrespondenceDocuments_Documents", "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Document), "CorrespondenceDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.CorrespondenceDocument), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_GolfFollowResources_Golfs", "Golf", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Golf), "GolfFollowResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.GolfFollowResource), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_GolfFollowResources_Golfs1", "Golf", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Golf), "GolfFollowResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.GolfFollowResource), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_LinkedEventGolfsID_EventGolfs", "EventGolf", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.EventGolf), "EventGolf1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventGolf), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_TillDivisions_Tills", "Till", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Till), "TillDivision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.TillDivision), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Tills_TillDivisions", "TillDivision", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.TillDivision), "Till", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Till), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK__SystemSet__UserI__41B8C09B", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.User), "SystemSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.SystemSetting), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventTypeTODOs_EventType", "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.EventType), "EventTypeTODO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventTypeTODO), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventTypeTODOs_AddedByUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "EventTypeTODO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventTypeTODO), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventTypeTODOs_AssignedToUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "EventTypeTODO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventTypeTODO), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventReminders_AssignedToUsers", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "EventReminder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventReminder), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventReminders_CreatedByUsers", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "EventReminder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventReminder), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventReminders_Events", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Event), "EventReminder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventReminder), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_EventReminders_EventTypeToDo", "EventTypeTODO", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.EventTypeTODO), "EventReminder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.EventReminder), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipCategories_MembershipGroupAges", "MembershipGroupAge", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.MembershipGroupAge), "MembershipCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipCategory), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipCategories_MembershipGroups", "MembershipGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.MembershipGroup), "MembershipCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipCategory), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipCategories_MembershipGroupStyles", "MembershipGroupStyle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.MembershipGroupStyle), "MembershipCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipCategory), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents1_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipFullPaymentComponent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipFullPaymentComponent), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents2_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipFullPaymentComponent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipFullPaymentComponent), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents3_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipFullPaymentComponent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipFullPaymentComponent), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents4_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipFullPaymentComponent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipFullPaymentComponent), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents5_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipFullPaymentComponent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipFullPaymentComponent), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents6_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipFullPaymentComponent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipFullPaymentComponent), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents7_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipFullPaymentComponent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipFullPaymentComponent), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents8_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipFullPaymentComponent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipFullPaymentComponent), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts1_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipMonthlyPaymentOngoingCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentOngoingCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts2_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipMonthlyPaymentOngoingCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentOngoingCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts3_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipMonthlyPaymentOngoingCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentOngoingCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts4_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipMonthlyPaymentOngoingCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentOngoingCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts1_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipMonthlyPaymentUpFrontCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentUpFrontCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts2_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipMonthlyPaymentUpFrontCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentUpFrontCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts3_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipMonthlyPaymentUpFrontCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentUpFrontCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts4_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipMonthlyPaymentUpFrontCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentUpFrontCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts5_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipMonthlyPaymentUpFrontCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentUpFrontCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts6_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipMonthlyPaymentUpFrontCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentUpFrontCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts7_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipMonthlyPaymentUpFrontCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentUpFrontCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts8_Products", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Product), "MembershipMonthlyPaymentUpFrontCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentUpFrontCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipLinkTypes_MembershipCategories", "MembershipCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.MembershipCategory), "MembershipLinkType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipLinkType), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipLinkTypes_MembershipCategories1", "MembershipCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.MembershipCategory), "MembershipLinkType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipLinkType), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipGroupEPOS_MembershipGroups", "MembershipGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.MembershipGroup), "MembershipGroupEPOS", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.MembershipGroupEPOS), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipOptionBoxReasons_MembershipOptionBoxReasons", "MembershipOptionBox", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.MembershipOptionBox), "MembershipOptionBoxReason", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipOptionBoxReason), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipCategoryGroupDefaults_MembershipCategories", "MembershipCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.MembershipCategory), "MembershipCategoryGroupDefault", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.MembershipCategoryGroupDefault), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents_MembershipCategories", "MembershipCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.MembershipCategory), "MembershipFullPaymentComponent", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.MembershipFullPaymentComponent), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts_MembershipCategories", "MembershipCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.MembershipCategory), "MembershipMonthlyPaymentOngoingCost", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentOngoingCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts_MembershipCategories", "MembershipCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.MembershipCategory), "MembershipMonthlyPaymentUpFrontCost", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.MembershipMonthlyPaymentUpFrontCost), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipCategoryGroupDefaultEPOS_MembershipCategoryGroupDefaults", "MembershipCategoryGroupDefault", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.MembershipCategoryGroupDefault), "MembershipCategoryGroupDefaultEPOS", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.MembershipCategoryGroupDefaultEPOS), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Members_Contacts", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Contact), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.Member), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Members_MembershipCategories", "MembershipCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.MembershipCategory), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Member), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MemberNotes_Members", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Member), "MemberNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MemberNote), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MemberNotes_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "MemberNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MemberNote), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MemberNotes_Users1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.User), "MemberNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MemberNote), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipUpdates_Members", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.Member), "MembershipUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipUpdate), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MembershipUpdates_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EventManagementSystem.Data.Model.User), "MembershipUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MembershipUpdate), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_MailTemplates_EmailHeaders", "EmailHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.EmailHeader), "MailTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.MailTemplate), true)]
[assembly: EdmRelationshipAttribute("EventManagementSystemModel", "FK_Corresponcences_EmailHeaders", "EmailHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EventManagementSystem.Data.Model.EmailHeader), "Corresponcence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EventManagementSystem.Data.Model.Corresponcence), true)]

#endregion

namespace EventManagementSystem.Data.Model
{
    #region Contexts

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EmsEntities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initializes a new EmsEntities object using the connection string found in the 'EmsEntities' section of the application configuration file.
        /// </summary>
        public EmsEntities()
            : base("name=EmsEntities", "EmsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new EmsEntities object.
        /// </summary>
        public EmsEntities(string connectionString)
            : base(connectionString, "EmsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Activity> Activities
        {
            get
            {
                if ((_Activities == null))
                {
                    _Activities = base.CreateObjectSet<Activity>("Activities");
                }
                return _Activities;
            }
        }
        private ObjectSet<Activity> _Activities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityType> ActivityTypes
        {
            get
            {
                if ((_ActivityTypes == null))
                {
                    _ActivityTypes = base.CreateObjectSet<ActivityType>("ActivityTypes");
                }
                return _ActivityTypes;
            }
        }
        private ObjectSet<ActivityType> _ActivityTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CalendarNote> CalendarNotes
        {
            get
            {
                if ((_CalendarNotes == null))
                {
                    _CalendarNotes = base.CreateObjectSet<CalendarNote>("CalendarNotes");
                }
                return _CalendarNotes;
            }
        }
        private ObjectSet<CalendarNote> _CalendarNotes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Campaign> Campaigns
        {
            get
            {
                if ((_Campaigns == null))
                {
                    _Campaigns = base.CreateObjectSet<Campaign>("Campaigns");
                }
                return _Campaigns;
            }
        }
        private ObjectSet<Campaign> _Campaigns;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CampaignType> CampaignTypes
        {
            get
            {
                if ((_CampaignTypes == null))
                {
                    _CampaignTypes = base.CreateObjectSet<CampaignType>("CampaignTypes");
                }
                return _CampaignTypes;
            }
        }
        private ObjectSet<CampaignType> _CampaignTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CCContactsCorrespondence> CCContactsCorrespondences
        {
            get
            {
                if ((_CCContactsCorrespondences == null))
                {
                    _CCContactsCorrespondences = base.CreateObjectSet<CCContactsCorrespondence>("CCContactsCorrespondences");
                }
                return _CCContactsCorrespondences;
            }
        }
        private ObjectSet<CCContactsCorrespondence> _CCContactsCorrespondences;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Clerk> Clerks
        {
            get
            {
                if ((_Clerks == null))
                {
                    _Clerks = base.CreateObjectSet<Clerk>("Clerks");
                }
                return _Clerks;
            }
        }
        private ObjectSet<Clerk> _Clerks;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactTitle> ContactTitles
        {
            get
            {
                if ((_ContactTitles == null))
                {
                    _ContactTitles = base.CreateObjectSet<ContactTitle>("ContactTitles");
                }
                return _ContactTitles;
            }
        }
        private ObjectSet<ContactTitle> _ContactTitles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Corresponcence> Corresponcences
        {
            get
            {
                if ((_Corresponcences == null))
                {
                    _Corresponcences = base.CreateObjectSet<Corresponcence>("Corresponcences");
                }
                return _Corresponcences;
            }
        }
        private ObjectSet<Corresponcence> _Corresponcences;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CorresponcenceType> CorresponcenceTypes
        {
            get
            {
                if ((_CorresponcenceTypes == null))
                {
                    _CorresponcenceTypes = base.CreateObjectSet<CorresponcenceType>("CorresponcenceTypes");
                }
                return _CorresponcenceTypes;
            }
        }
        private ObjectSet<CorresponcenceType> _CorresponcenceTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DefaultSettingsForEnquiry> DefaultSettingsForEnquiries
        {
            get
            {
                if ((_DefaultSettingsForEnquiries == null))
                {
                    _DefaultSettingsForEnquiries = base.CreateObjectSet<DefaultSettingsForEnquiry>("DefaultSettingsForEnquiries");
                }
                return _DefaultSettingsForEnquiries;
            }
        }
        private ObjectSet<DefaultSettingsForEnquiry> _DefaultSettingsForEnquiries;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailSetting> EmailSettings
        {
            get
            {
                if ((_EmailSettings == null))
                {
                    _EmailSettings = base.CreateObjectSet<EmailSetting>("EmailSettings");
                }
                return _EmailSettings;
            }
        }
        private ObjectSet<EmailSetting> _EmailSettings;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Enquiry> Enquiries
        {
            get
            {
                if ((_Enquiries == null))
                {
                    _Enquiries = base.CreateObjectSet<Enquiry>("Enquiries");
                }
                return _Enquiries;
            }
        }
        private ObjectSet<Enquiry> _Enquiries;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EnquiryNote> EnquiryNotes
        {
            get
            {
                if ((_EnquiryNotes == null))
                {
                    _EnquiryNotes = base.CreateObjectSet<EnquiryNote>("EnquiryNotes");
                }
                return _EnquiryNotes;
            }
        }
        private ObjectSet<EnquiryNote> _EnquiryNotes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EnquiryReceiveMethod> EnquiryReceiveMethods
        {
            get
            {
                if ((_EnquiryReceiveMethods == null))
                {
                    _EnquiryReceiveMethods = base.CreateObjectSet<EnquiryReceiveMethod>("EnquiryReceiveMethods");
                }
                return _EnquiryReceiveMethods;
            }
        }
        private ObjectSet<EnquiryReceiveMethod> _EnquiryReceiveMethods;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EnquiryStatus> EnquiryStatuses
        {
            get
            {
                if ((_EnquiryStatuses == null))
                {
                    _EnquiryStatuses = base.CreateObjectSet<EnquiryStatus>("EnquiryStatuses");
                }
                return _EnquiryStatuses;
            }
        }
        private ObjectSet<EnquiryStatus> _EnquiryStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EnquiryUpdate> EnquiryUpdates
        {
            get
            {
                if ((_EnquiryUpdates == null))
                {
                    _EnquiryUpdates = base.CreateObjectSet<EnquiryUpdate>("EnquiryUpdates");
                }
                return _EnquiryUpdates;
            }
        }
        private ObjectSet<EnquiryUpdate> _EnquiryUpdates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventBookedProduct> EventBookedProducts
        {
            get
            {
                if ((_EventBookedProducts == null))
                {
                    _EventBookedProducts = base.CreateObjectSet<EventBookedProduct>("EventBookedProducts");
                }
                return _EventBookedProducts;
            }
        }
        private ObjectSet<EventBookedProduct> _EventBookedProducts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventCatering> EventCaterings
        {
            get
            {
                if ((_EventCaterings == null))
                {
                    _EventCaterings = base.CreateObjectSet<EventCatering>("EventCaterings");
                }
                return _EventCaterings;
            }
        }
        private ObjectSet<EventCatering> _EventCaterings;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventCharge> EventCharges
        {
            get
            {
                if ((_EventCharges == null))
                {
                    _EventCharges = base.CreateObjectSet<EventCharge>("EventCharges");
                }
                return _EventCharges;
            }
        }
        private ObjectSet<EventCharge> _EventCharges;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventContact> EventContacts
        {
            get
            {
                if ((_EventContacts == null))
                {
                    _EventContacts = base.CreateObjectSet<EventContact>("EventContacts");
                }
                return _EventContacts;
            }
        }
        private ObjectSet<EventContact> _EventContacts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventGolf> EventGolfs
        {
            get
            {
                if ((_EventGolfs == null))
                {
                    _EventGolfs = base.CreateObjectSet<EventGolf>("EventGolfs");
                }
                return _EventGolfs;
            }
        }
        private ObjectSet<EventGolf> _EventGolfs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventInvoice> EventInvoices
        {
            get
            {
                if ((_EventInvoices == null))
                {
                    _EventInvoices = base.CreateObjectSet<EventInvoice>("EventInvoices");
                }
                return _EventInvoices;
            }
        }
        private ObjectSet<EventInvoice> _EventInvoices;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventNote> EventNotes
        {
            get
            {
                if ((_EventNotes == null))
                {
                    _EventNotes = base.CreateObjectSet<EventNote>("EventNotes");
                }
                return _EventNotes;
            }
        }
        private ObjectSet<EventNote> _EventNotes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventNoteType> EventNoteTypes
        {
            get
            {
                if ((_EventNoteTypes == null))
                {
                    _EventNoteTypes = base.CreateObjectSet<EventNoteType>("EventNoteTypes");
                }
                return _EventNoteTypes;
            }
        }
        private ObjectSet<EventNoteType> _EventNoteTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventOption> EventOptions
        {
            get
            {
                if ((_EventOptions == null))
                {
                    _EventOptions = base.CreateObjectSet<EventOption>("EventOptions");
                }
                return _EventOptions;
            }
        }
        private ObjectSet<EventOption> _EventOptions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventPayment> EventPayments
        {
            get
            {
                if ((_EventPayments == null))
                {
                    _EventPayments = base.CreateObjectSet<EventPayment>("EventPayments");
                }
                return _EventPayments;
            }
        }
        private ObjectSet<EventPayment> _EventPayments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventRoom> EventRooms
        {
            get
            {
                if ((_EventRooms == null))
                {
                    _EventRooms = base.CreateObjectSet<EventRoom>("EventRooms");
                }
                return _EventRooms;
            }
        }
        private ObjectSet<EventRoom> _EventRooms;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventStatus> EventStatuses
        {
            get
            {
                if ((_EventStatuses == null))
                {
                    _EventStatuses = base.CreateObjectSet<EventStatus>("EventStatuses");
                }
                return _EventStatuses;
            }
        }
        private ObjectSet<EventStatus> _EventStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventStatusOption> EventStatusOptions
        {
            get
            {
                if ((_EventStatusOptions == null))
                {
                    _EventStatusOptions = base.CreateObjectSet<EventStatusOption>("EventStatusOptions");
                }
                return _EventStatusOptions;
            }
        }
        private ObjectSet<EventStatusOption> _EventStatusOptions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventTypeOption> EventTypeOptions
        {
            get
            {
                if ((_EventTypeOptions == null))
                {
                    _EventTypeOptions = base.CreateObjectSet<EventTypeOption>("EventTypeOptions");
                }
                return _EventTypeOptions;
            }
        }
        private ObjectSet<EventTypeOption> _EventTypeOptions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventType> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventType>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventType> _EventTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventUpdate> EventUpdates
        {
            get
            {
                if ((_EventUpdates == null))
                {
                    _EventUpdates = base.CreateObjectSet<EventUpdate>("EventUpdates");
                }
                return _EventUpdates;
            }
        }
        private ObjectSet<EventUpdate> _EventUpdates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Facility> Facilities
        {
            get
            {
                if ((_Facilities == null))
                {
                    _Facilities = base.CreateObjectSet<Facility>("Facilities");
                }
                return _Facilities;
            }
        }
        private ObjectSet<Facility> _Facilities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FinaliseKey> FinaliseKeys
        {
            get
            {
                if ((_FinaliseKeys == null))
                {
                    _FinaliseKeys = base.CreateObjectSet<FinaliseKey>("FinaliseKeys");
                }
                return _FinaliseKeys;
            }
        }
        private ObjectSet<FinaliseKey> _FinaliseKeys;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FixedTotal> FixedTotals
        {
            get
            {
                if ((_FixedTotals == null))
                {
                    _FixedTotals = base.CreateObjectSet<FixedTotal>("FixedTotals");
                }
                return _FixedTotals;
            }
        }
        private ObjectSet<FixedTotal> _FixedTotals;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FollowUp> FollowUps
        {
            get
            {
                if ((_FollowUps == null))
                {
                    _FollowUps = base.CreateObjectSet<FollowUp>("FollowUps");
                }
                return _FollowUps;
            }
        }
        private ObjectSet<FollowUp> _FollowUps;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FollowUpStatus> FollowUpStatuses
        {
            get
            {
                if ((_FollowUpStatuses == null))
                {
                    _FollowUpStatuses = base.CreateObjectSet<FollowUpStatus>("FollowUpStatuses");
                }
                return _FollowUpStatuses;
            }
        }
        private ObjectSet<FollowUpStatus> _FollowUpStatuses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GolfHole> GolfHoles
        {
            get
            {
                if ((_GolfHoles == null))
                {
                    _GolfHoles = base.CreateObjectSet<GolfHole>("GolfHoles");
                }
                return _GolfHoles;
            }
        }
        private ObjectSet<GolfHole> _GolfHoles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Golf> Golfs
        {
            get
            {
                if ((_Golfs == null))
                {
                    _Golfs = base.CreateObjectSet<Golf>("Golfs");
                }
                return _Golfs;
            }
        }
        private ObjectSet<Golf> _Golfs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invoice> Invoices
        {
            get
            {
                if ((_Invoices == null))
                {
                    _Invoices = base.CreateObjectSet<Invoice>("Invoices");
                }
                return _Invoices;
            }
        }
        private ObjectSet<Invoice> _Invoices;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MailTemplateCategory> MailTemplateCategories
        {
            get
            {
                if ((_MailTemplateCategories == null))
                {
                    _MailTemplateCategories = base.CreateObjectSet<MailTemplateCategory>("MailTemplateCategories");
                }
                return _MailTemplateCategories;
            }
        }
        private ObjectSet<MailTemplateCategory> _MailTemplateCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MailTemplate> MailTemplates
        {
            get
            {
                if ((_MailTemplates == null))
                {
                    _MailTemplates = base.CreateObjectSet<MailTemplate>("MailTemplates");
                }
                return _MailTemplates;
            }
        }
        private ObjectSet<MailTemplate> _MailTemplates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MailTemplateType> MailTemplateTypes
        {
            get
            {
                if ((_MailTemplateTypes == null))
                {
                    _MailTemplateTypes = base.CreateObjectSet<MailTemplateType>("MailTemplateTypes");
                }
                return _MailTemplateTypes;
            }
        }
        private ObjectSet<MailTemplateType> _MailTemplateTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PaymentMethod> PaymentMethods
        {
            get
            {
                if ((_PaymentMethods == null))
                {
                    _PaymentMethods = base.CreateObjectSet<PaymentMethod>("PaymentMethods");
                }
                return _PaymentMethods;
            }
        }
        private ObjectSet<PaymentMethod> _PaymentMethods;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PermissionGroup> PermissionGroups
        {
            get
            {
                if ((_PermissionGroups == null))
                {
                    _PermissionGroups = base.CreateObjectSet<PermissionGroup>("PermissionGroups");
                }
                return _PermissionGroups;
            }
        }
        private ObjectSet<PermissionGroup> _PermissionGroups;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductDepartment> ProductDepartments
        {
            get
            {
                if ((_ProductDepartments == null))
                {
                    _ProductDepartments = base.CreateObjectSet<ProductDepartment>("ProductDepartments");
                }
                return _ProductDepartments;
            }
        }
        private ObjectSet<ProductDepartment> _ProductDepartments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductEventType> ProductEventTypes
        {
            get
            {
                if ((_ProductEventTypes == null))
                {
                    _ProductEventTypes = base.CreateObjectSet<ProductEventType>("ProductEventTypes");
                }
                return _ProductEventTypes;
            }
        }
        private ObjectSet<ProductEventType> _ProductEventTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductGroup> ProductGroups
        {
            get
            {
                if ((_ProductGroups == null))
                {
                    _ProductGroups = base.CreateObjectSet<ProductGroup>("ProductGroups");
                }
                return _ProductGroups;
            }
        }
        private ObjectSet<ProductGroup> _ProductGroups;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductOption> ProductOptions
        {
            get
            {
                if ((_ProductOptions == null))
                {
                    _ProductOptions = base.CreateObjectSet<ProductOption>("ProductOptions");
                }
                return _ProductOptions;
            }
        }
        private ObjectSet<ProductOption> _ProductOptions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductType> ProductTypes
        {
            get
            {
                if ((_ProductTypes == null))
                {
                    _ProductTypes = base.CreateObjectSet<ProductType>("ProductTypes");
                }
                return _ProductTypes;
            }
        }
        private ObjectSet<ProductType> _ProductTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductVATRate> ProductVATRates
        {
            get
            {
                if ((_ProductVATRates == null))
                {
                    _ProductVATRates = base.CreateObjectSet<ProductVATRate>("ProductVATRates");
                }
                return _ProductVATRates;
            }
        }
        private ObjectSet<ProductVATRate> _ProductVATRates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Report> Reports
        {
            get
            {
                if ((_Reports == null))
                {
                    _Reports = base.CreateObjectSet<Report>("Reports");
                }
                return _Reports;
            }
        }
        private ObjectSet<Report> _Reports;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoomFacility> RoomFacilities
        {
            get
            {
                if ((_RoomFacilities == null))
                {
                    _RoomFacilities = base.CreateObjectSet<RoomFacility>("RoomFacilities");
                }
                return _RoomFacilities;
            }
        }
        private ObjectSet<RoomFacility> _RoomFacilities;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Room> Rooms
        {
            get
            {
                if ((_Rooms == null))
                {
                    _Rooms = base.CreateObjectSet<Room>("Rooms");
                }
                return _Rooms;
            }
        }
        private ObjectSet<Room> _Rooms;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TillProduct> TillProducts
        {
            get
            {
                if ((_TillProducts == null))
                {
                    _TillProducts = base.CreateObjectSet<TillProduct>("TillProducts");
                }
                return _TillProducts;
            }
        }
        private ObjectSet<TillProduct> _TillProducts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TillProductTill> TillProductTills
        {
            get
            {
                if ((_TillProductTills == null))
                {
                    _TillProductTills = base.CreateObjectSet<TillProductTill>("TillProductTills");
                }
                return _TillProductTills;
            }
        }
        private ObjectSet<TillProductTill> _TillProductTills;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Till> Tills
        {
            get
            {
                if ((_Tills == null))
                {
                    _Tills = base.CreateObjectSet<Till>("Tills");
                }
                return _Tills;
            }
        }
        private ObjectSet<Till> _Tills;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TillTabTransaction> TillTabTransactions
        {
            get
            {
                if ((_TillTabTransactions == null))
                {
                    _TillTabTransactions = base.CreateObjectSet<TillTabTransaction>("TillTabTransactions");
                }
                return _TillTabTransactions;
            }
        }
        private ObjectSet<TillTabTransaction> _TillTabTransactions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TillTransactionDepartment> TillTransactionDepartments
        {
            get
            {
                if ((_TillTransactionDepartments == null))
                {
                    _TillTransactionDepartments = base.CreateObjectSet<TillTransactionDepartment>("TillTransactionDepartments");
                }
                return _TillTransactionDepartments;
            }
        }
        private ObjectSet<TillTransactionDepartment> _TillTransactionDepartments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TillTransactionDetail> TillTransactionDetails
        {
            get
            {
                if ((_TillTransactionDetails == null))
                {
                    _TillTransactionDetails = base.CreateObjectSet<TillTransactionDetail>("TillTransactionDetails");
                }
                return _TillTransactionDetails;
            }
        }
        private ObjectSet<TillTransactionDetail> _TillTransactionDetails;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TillTransactionFinaliseKey> TillTransactionFinaliseKeys
        {
            get
            {
                if ((_TillTransactionFinaliseKeys == null))
                {
                    _TillTransactionFinaliseKeys = base.CreateObjectSet<TillTransactionFinaliseKey>("TillTransactionFinaliseKeys");
                }
                return _TillTransactionFinaliseKeys;
            }
        }
        private ObjectSet<TillTransactionFinaliseKey> _TillTransactionFinaliseKeys;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TillTransactionGroup> TillTransactionGroups
        {
            get
            {
                if ((_TillTransactionGroups == null))
                {
                    _TillTransactionGroups = base.CreateObjectSet<TillTransactionGroup>("TillTransactionGroups");
                }
                return _TillTransactionGroups;
            }
        }
        private ObjectSet<TillTransactionGroup> _TillTransactionGroups;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TillTransactionProduct> TillTransactionProducts
        {
            get
            {
                if ((_TillTransactionProducts == null))
                {
                    _TillTransactionProducts = base.CreateObjectSet<TillTransactionProduct>("TillTransactionProducts");
                }
                return _TillTransactionProducts;
            }
        }
        private ObjectSet<TillTransactionProduct> _TillTransactionProducts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TillTransaction> TillTransactions
        {
            get
            {
                if ((_TillTransactions == null))
                {
                    _TillTransactions = base.CreateObjectSet<TillTransaction>("TillTransactions");
                }
                return _TillTransactions;
            }
        }
        private ObjectSet<TillTransaction> _TillTransactions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionKey> TransactionKeys
        {
            get
            {
                if ((_TransactionKeys == null))
                {
                    _TransactionKeys = base.CreateObjectSet<TransactionKey>("TransactionKeys");
                }
                return _TransactionKeys;
            }
        }
        private ObjectSet<TransactionKey> _TransactionKeys;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserDepartment> UserDepartments
        {
            get
            {
                if ((_UserDepartments == null))
                {
                    _UserDepartments = base.CreateObjectSet<UserDepartment>("UserDepartments");
                }
                return _UserDepartments;
            }
        }
        private ObjectSet<UserDepartment> _UserDepartments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserGroupPermission> UserGroupPermissions
        {
            get
            {
                if ((_UserGroupPermissions == null))
                {
                    _UserGroupPermissions = base.CreateObjectSet<UserGroupPermission>("UserGroupPermissions");
                }
                return _UserGroupPermissions;
            }
        }
        private ObjectSet<UserGroupPermission> _UserGroupPermissions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserGroup> UserGroups
        {
            get
            {
                if ((_UserGroups == null))
                {
                    _UserGroups = base.CreateObjectSet<UserGroup>("UserGroups");
                }
                return _UserGroups;
            }
        }
        private ObjectSet<UserGroup> _UserGroups;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserJobType> UserJobTypes
        {
            get
            {
                if ((_UserJobTypes == null))
                {
                    _UserJobTypes = base.CreateObjectSet<UserJobType>("UserJobTypes");
                }
                return _UserJobTypes;
            }
        }
        private ObjectSet<UserJobType> _UserJobTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserPermission> UserPermissions
        {
            get
            {
                if ((_UserPermissions == null))
                {
                    _UserPermissions = base.CreateObjectSet<UserPermission>("UserPermissions");
                }
                return _UserPermissions;
            }
        }
        private ObjectSet<UserPermission> _UserPermissions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CorrespondenceDocument> CorrespondenceDocuments
        {
            get
            {
                if ((_CorrespondenceDocuments == null))
                {
                    _CorrespondenceDocuments = base.CreateObjectSet<CorrespondenceDocument>("CorrespondenceDocuments");
                }
                return _CorrespondenceDocuments;
            }
        }
        private ObjectSet<CorrespondenceDocument> _CorrespondenceDocuments;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GolfFollowResource> GolfFollowResources
        {
            get
            {
                if ((_GolfFollowResources == null))
                {
                    _GolfFollowResources = base.CreateObjectSet<GolfFollowResource>("GolfFollowResources");
                }
                return _GolfFollowResources;
            }
        }
        private ObjectSet<GolfFollowResource> _GolfFollowResources;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TillDivision> TillDivisions
        {
            get
            {
                if ((_TillDivisions == null))
                {
                    _TillDivisions = base.CreateObjectSet<TillDivision>("TillDivisions");
                }
                return _TillDivisions;
            }
        }
        private ObjectSet<TillDivision> _TillDivisions;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SystemSetting> SystemSettings
        {
            get
            {
                if ((_SystemSettings == null))
                {
                    _SystemSettings = base.CreateObjectSet<SystemSetting>("SystemSettings");
                }
                return _SystemSettings;
            }
        }
        private ObjectSet<SystemSetting> _SystemSettings;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventTypeTODO> EventTypeTODOs
        {
            get
            {
                if ((_EventTypeTODOs == null))
                {
                    _EventTypeTODOs = base.CreateObjectSet<EventTypeTODO>("EventTypeTODOs");
                }
                return _EventTypeTODOs;
            }
        }
        private ObjectSet<EventTypeTODO> _EventTypeTODOs;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventReminder> EventReminders
        {
            get
            {
                if ((_EventReminders == null))
                {
                    _EventReminders = base.CreateObjectSet<EventReminder>("EventReminders");
                }
                return _EventReminders;
            }
        }
        private ObjectSet<EventReminder> _EventReminders;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipCategory> MembershipCategories
        {
            get
            {
                if ((_MembershipCategories == null))
                {
                    _MembershipCategories = base.CreateObjectSet<MembershipCategory>("MembershipCategories");
                }
                return _MembershipCategories;
            }
        }
        private ObjectSet<MembershipCategory> _MembershipCategories;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipCategoryGroupDefault> MembershipCategoryGroupDefaults
        {
            get
            {
                if ((_MembershipCategoryGroupDefaults == null))
                {
                    _MembershipCategoryGroupDefaults = base.CreateObjectSet<MembershipCategoryGroupDefault>("MembershipCategoryGroupDefaults");
                }
                return _MembershipCategoryGroupDefaults;
            }
        }
        private ObjectSet<MembershipCategoryGroupDefault> _MembershipCategoryGroupDefaults;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipFullPaymentComponent> MembershipFullPaymentComponents
        {
            get
            {
                if ((_MembershipFullPaymentComponents == null))
                {
                    _MembershipFullPaymentComponents = base.CreateObjectSet<MembershipFullPaymentComponent>("MembershipFullPaymentComponents");
                }
                return _MembershipFullPaymentComponents;
            }
        }
        private ObjectSet<MembershipFullPaymentComponent> _MembershipFullPaymentComponents;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipGroupAge> MembershipGroupAges
        {
            get
            {
                if ((_MembershipGroupAges == null))
                {
                    _MembershipGroupAges = base.CreateObjectSet<MembershipGroupAge>("MembershipGroupAges");
                }
                return _MembershipGroupAges;
            }
        }
        private ObjectSet<MembershipGroupAge> _MembershipGroupAges;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipGroup> MembershipGroups
        {
            get
            {
                if ((_MembershipGroups == null))
                {
                    _MembershipGroups = base.CreateObjectSet<MembershipGroup>("MembershipGroups");
                }
                return _MembershipGroups;
            }
        }
        private ObjectSet<MembershipGroup> _MembershipGroups;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipGroupStyle> MembershipGroupStyles
        {
            get
            {
                if ((_MembershipGroupStyles == null))
                {
                    _MembershipGroupStyles = base.CreateObjectSet<MembershipGroupStyle>("MembershipGroupStyles");
                }
                return _MembershipGroupStyles;
            }
        }
        private ObjectSet<MembershipGroupStyle> _MembershipGroupStyles;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipLinkType> MembershipLinkTypes
        {
            get
            {
                if ((_MembershipLinkTypes == null))
                {
                    _MembershipLinkTypes = base.CreateObjectSet<MembershipLinkType>("MembershipLinkTypes");
                }
                return _MembershipLinkTypes;
            }
        }
        private ObjectSet<MembershipLinkType> _MembershipLinkTypes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipMonthlyPaymentOngoingCost> MembershipMonthlyPaymentOngoingCosts
        {
            get
            {
                if ((_MembershipMonthlyPaymentOngoingCosts == null))
                {
                    _MembershipMonthlyPaymentOngoingCosts = base.CreateObjectSet<MembershipMonthlyPaymentOngoingCost>("MembershipMonthlyPaymentOngoingCosts");
                }
                return _MembershipMonthlyPaymentOngoingCosts;
            }
        }
        private ObjectSet<MembershipMonthlyPaymentOngoingCost> _MembershipMonthlyPaymentOngoingCosts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipMonthlyPaymentUpFrontCost> MembershipMonthlyPaymentUpFrontCosts
        {
            get
            {
                if ((_MembershipMonthlyPaymentUpFrontCosts == null))
                {
                    _MembershipMonthlyPaymentUpFrontCosts = base.CreateObjectSet<MembershipMonthlyPaymentUpFrontCost>("MembershipMonthlyPaymentUpFrontCosts");
                }
                return _MembershipMonthlyPaymentUpFrontCosts;
            }
        }
        private ObjectSet<MembershipMonthlyPaymentUpFrontCost> _MembershipMonthlyPaymentUpFrontCosts;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipToken> MembershipTokens
        {
            get
            {
                if ((_MembershipTokens == null))
                {
                    _MembershipTokens = base.CreateObjectSet<MembershipToken>("MembershipTokens");
                }
                return _MembershipTokens;
            }
        }
        private ObjectSet<MembershipToken> _MembershipTokens;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipCategoryGroupDefaultEPOS> MembershipCategoryGroupDefaultEPOS
        {
            get
            {
                if ((_MembershipCategoryGroupDefaultEPOS == null))
                {
                    _MembershipCategoryGroupDefaultEPOS = base.CreateObjectSet<MembershipCategoryGroupDefaultEPOS>("MembershipCategoryGroupDefaultEPOS");
                }
                return _MembershipCategoryGroupDefaultEPOS;
            }
        }
        private ObjectSet<MembershipCategoryGroupDefaultEPOS> _MembershipCategoryGroupDefaultEPOS;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipGroupEPOS> MembershipGroupEPOS
        {
            get
            {
                if ((_MembershipGroupEPOS == null))
                {
                    _MembershipGroupEPOS = base.CreateObjectSet<MembershipGroupEPOS>("MembershipGroupEPOS");
                }
                return _MembershipGroupEPOS;
            }
        }
        private ObjectSet<MembershipGroupEPOS> _MembershipGroupEPOS;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipOptionBox> MembershipOptionBoxes
        {
            get
            {
                if ((_MembershipOptionBoxes == null))
                {
                    _MembershipOptionBoxes = base.CreateObjectSet<MembershipOptionBox>("MembershipOptionBoxes");
                }
                return _MembershipOptionBoxes;
            }
        }
        private ObjectSet<MembershipOptionBox> _MembershipOptionBoxes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipOptionBoxReason> MembershipOptionBoxReasons
        {
            get
            {
                if ((_MembershipOptionBoxReasons == null))
                {
                    _MembershipOptionBoxReasons = base.CreateObjectSet<MembershipOptionBoxReason>("MembershipOptionBoxReasons");
                }
                return _MembershipOptionBoxReasons;
            }
        }
        private ObjectSet<MembershipOptionBoxReason> _MembershipOptionBoxReasons;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Member> Members
        {
            get
            {
                if ((_Members == null))
                {
                    _Members = base.CreateObjectSet<Member>("Members");
                }
                return _Members;
            }
        }
        private ObjectSet<Member> _Members;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MemberNote> MemberNotes
        {
            get
            {
                if ((_MemberNotes == null))
                {
                    _MemberNotes = base.CreateObjectSet<MemberNote>("MemberNotes");
                }
                return _MemberNotes;
            }
        }
        private ObjectSet<MemberNote> _MemberNotes;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembershipUpdate> MembershipUpdates
        {
            get
            {
                if ((_MembershipUpdates == null))
                {
                    _MembershipUpdates = base.CreateObjectSet<MembershipUpdate>("MembershipUpdates");
                }
                return _MembershipUpdates;
            }
        }
        private ObjectSet<MembershipUpdate> _MembershipUpdates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailHeader> EmailHeaders
        {
            get
            {
                if ((_EmailHeaders == null))
                {
                    _EmailHeaders = base.CreateObjectSet<EmailHeader>("EmailHeaders");
                }
                return _EmailHeaders;
            }
        }
        private ObjectSet<EmailHeader> _EmailHeaders;

        #endregion

        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Activities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivities(Activity activity)
        {
            base.AddObject("Activities", activity);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityTypes(ActivityType activityType)
        {
            base.AddObject("ActivityTypes", activityType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CalendarNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalendarNotes(CalendarNote calendarNote)
        {
            base.AddObject("CalendarNotes", calendarNote);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Campaigns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCampaigns(Campaign campaign)
        {
            base.AddObject("Campaigns", campaign);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CampaignTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCampaignTypes(CampaignType campaignType)
        {
            base.AddObject("CampaignTypes", campaignType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CCContactsCorrespondences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCCContactsCorrespondences(CCContactsCorrespondence cCContactsCorrespondence)
        {
            base.AddObject("CCContactsCorrespondences", cCContactsCorrespondence);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Clerks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClerks(Clerk clerk)
        {
            base.AddObject("Clerks", clerk);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ContactTitles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactTitles(ContactTitle contactTitle)
        {
            base.AddObject("ContactTitles", contactTitle);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Corresponcences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCorresponcences(Corresponcence corresponcence)
        {
            base.AddObject("Corresponcences", corresponcence);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CorresponcenceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCorresponcenceTypes(CorresponcenceType corresponcenceType)
        {
            base.AddObject("CorresponcenceTypes", corresponcenceType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the DefaultSettingsForEnquiries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDefaultSettingsForEnquiries(DefaultSettingsForEnquiry defaultSettingsForEnquiry)
        {
            base.AddObject("DefaultSettingsForEnquiries", defaultSettingsForEnquiry);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EmailSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailSettings(EmailSetting emailSetting)
        {
            base.AddObject("EmailSettings", emailSetting);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Enquiries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnquiries(Enquiry enquiry)
        {
            base.AddObject("Enquiries", enquiry);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EnquiryNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnquiryNotes(EnquiryNote enquiryNote)
        {
            base.AddObject("EnquiryNotes", enquiryNote);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EnquiryReceiveMethods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnquiryReceiveMethods(EnquiryReceiveMethod enquiryReceiveMethod)
        {
            base.AddObject("EnquiryReceiveMethods", enquiryReceiveMethod);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EnquiryStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnquiryStatuses(EnquiryStatus enquiryStatus)
        {
            base.AddObject("EnquiryStatuses", enquiryStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EnquiryUpdates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnquiryUpdates(EnquiryUpdate enquiryUpdate)
        {
            base.AddObject("EnquiryUpdates", enquiryUpdate);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventBookedProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventBookedProducts(EventBookedProduct eventBookedProduct)
        {
            base.AddObject("EventBookedProducts", eventBookedProduct);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventCaterings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventCaterings(EventCatering eventCatering)
        {
            base.AddObject("EventCaterings", eventCatering);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventCharges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventCharges(EventCharge eventCharge)
        {
            base.AddObject("EventCharges", eventCharge);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventContacts(EventContact eventContact)
        {
            base.AddObject("EventContacts", eventContact);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventGolfs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventGolfs(EventGolf eventGolf)
        {
            base.AddObject("EventGolfs", eventGolf);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventInvoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventInvoices(EventInvoice eventInvoice)
        {
            base.AddObject("EventInvoices", eventInvoice);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventNotes(EventNote eventNote)
        {
            base.AddObject("EventNotes", eventNote);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventNoteTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventNoteTypes(EventNoteType eventNoteType)
        {
            base.AddObject("EventNoteTypes", eventNoteType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventOptions(EventOption eventOption)
        {
            base.AddObject("EventOptions", eventOption);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventPayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventPayments(EventPayment eventPayment)
        {
            base.AddObject("EventPayments", eventPayment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventRooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventRooms(EventRoom eventRoom)
        {
            base.AddObject("EventRooms", eventRoom);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventStatuses(EventStatus eventStatus)
        {
            base.AddObject("EventStatuses", eventStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventStatusOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventStatusOptions(EventStatusOption eventStatusOption)
        {
            base.AddObject("EventStatusOptions", eventStatusOption);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypeOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypeOptions(EventTypeOption eventTypeOption)
        {
            base.AddObject("EventTypeOptions", eventTypeOption);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventType eventType)
        {
            base.AddObject("EventTypes", eventType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventUpdates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventUpdates(EventUpdate eventUpdate)
        {
            base.AddObject("EventUpdates", eventUpdate);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Facilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFacilities(Facility facility)
        {
            base.AddObject("Facilities", facility);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the FinaliseKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinaliseKeys(FinaliseKey finaliseKey)
        {
            base.AddObject("FinaliseKeys", finaliseKey);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the FixedTotals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFixedTotals(FixedTotal fixedTotal)
        {
            base.AddObject("FixedTotals", fixedTotal);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the FollowUps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFollowUps(FollowUp followUp)
        {
            base.AddObject("FollowUps", followUp);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the FollowUpStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFollowUpStatuses(FollowUpStatus followUpStatus)
        {
            base.AddObject("FollowUpStatuses", followUpStatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the GolfHoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGolfHoles(GolfHole golfHole)
        {
            base.AddObject("GolfHoles", golfHole);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Golfs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGolfs(Golf golf)
        {
            base.AddObject("Golfs", golf);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Invoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoices(Invoice invoice)
        {
            base.AddObject("Invoices", invoice);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MailTemplateCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMailTemplateCategories(MailTemplateCategory mailTemplateCategory)
        {
            base.AddObject("MailTemplateCategories", mailTemplateCategory);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MailTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMailTemplates(MailTemplate mailTemplate)
        {
            base.AddObject("MailTemplates", mailTemplate);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MailTemplateTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMailTemplateTypes(MailTemplateType mailTemplateType)
        {
            base.AddObject("MailTemplateTypes", mailTemplateType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PaymentMethods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaymentMethods(PaymentMethod paymentMethod)
        {
            base.AddObject("PaymentMethods", paymentMethod);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the PermissionGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissionGroups(PermissionGroup permissionGroup)
        {
            base.AddObject("PermissionGroups", permissionGroup);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductDepartments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductDepartments(ProductDepartment productDepartment)
        {
            base.AddObject("ProductDepartments", productDepartment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductEventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductEventTypes(ProductEventType productEventType)
        {
            base.AddObject("ProductEventTypes", productEventType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductGroups(ProductGroup productGroup)
        {
            base.AddObject("ProductGroups", productGroup);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductOptions(ProductOption productOption)
        {
            base.AddObject("ProductOptions", productOption);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductTypes(ProductType productType)
        {
            base.AddObject("ProductTypes", productType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ProductVATRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductVATRates(ProductVATRate productVATRate)
        {
            base.AddObject("ProductVATRates", productVATRate);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Reports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReports(Report report)
        {
            base.AddObject("Reports", report);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the RoomFacilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoomFacilities(RoomFacility roomFacility)
        {
            base.AddObject("RoomFacilities", roomFacility);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Rooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRooms(Room room)
        {
            base.AddObject("Rooms", room);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TillProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTillProducts(TillProduct tillProduct)
        {
            base.AddObject("TillProducts", tillProduct);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TillProductTills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTillProductTills(TillProductTill tillProductTill)
        {
            base.AddObject("TillProductTills", tillProductTill);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Tills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTills(Till till)
        {
            base.AddObject("Tills", till);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TillTabTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTillTabTransactions(TillTabTransaction tillTabTransaction)
        {
            base.AddObject("TillTabTransactions", tillTabTransaction);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TillTransactionDepartments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTillTransactionDepartments(TillTransactionDepartment tillTransactionDepartment)
        {
            base.AddObject("TillTransactionDepartments", tillTransactionDepartment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TillTransactionDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTillTransactionDetails(TillTransactionDetail tillTransactionDetail)
        {
            base.AddObject("TillTransactionDetails", tillTransactionDetail);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TillTransactionFinaliseKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTillTransactionFinaliseKeys(TillTransactionFinaliseKey tillTransactionFinaliseKey)
        {
            base.AddObject("TillTransactionFinaliseKeys", tillTransactionFinaliseKey);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TillTransactionGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTillTransactionGroups(TillTransactionGroup tillTransactionGroup)
        {
            base.AddObject("TillTransactionGroups", tillTransactionGroup);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TillTransactionProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTillTransactionProducts(TillTransactionProduct tillTransactionProduct)
        {
            base.AddObject("TillTransactionProducts", tillTransactionProduct);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TillTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTillTransactions(TillTransaction tillTransaction)
        {
            base.AddObject("TillTransactions", tillTransaction);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionKeys(TransactionKey transactionKey)
        {
            base.AddObject("TransactionKeys", transactionKey);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserDepartments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserDepartments(UserDepartment userDepartment)
        {
            base.AddObject("UserDepartments", userDepartment);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserGroupPermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserGroupPermissions(UserGroupPermission userGroupPermission)
        {
            base.AddObject("UserGroupPermissions", userGroupPermission);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserGroups(UserGroup userGroup)
        {
            base.AddObject("UserGroups", userGroup);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserJobTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserJobTypes(UserJobType userJobType)
        {
            base.AddObject("UserJobTypes", userJobType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the UserPermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserPermissions(UserPermission userPermission)
        {
            base.AddObject("UserPermissions", userPermission);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the CorrespondenceDocuments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCorrespondenceDocuments(CorrespondenceDocument correspondenceDocument)
        {
            base.AddObject("CorrespondenceDocuments", correspondenceDocument);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the GolfFollowResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGolfFollowResources(GolfFollowResource golfFollowResource)
        {
            base.AddObject("GolfFollowResources", golfFollowResource);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the TillDivisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTillDivisions(TillDivision tillDivision)
        {
            base.AddObject("TillDivisions", tillDivision);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the SystemSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSystemSettings(SystemSetting systemSetting)
        {
            base.AddObject("SystemSettings", systemSetting);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypeTODOs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypeTODOs(EventTypeTODO eventTypeTODO)
        {
            base.AddObject("EventTypeTODOs", eventTypeTODO);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EventReminders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventReminders(EventReminder eventReminder)
        {
            base.AddObject("EventReminders", eventReminder);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipCategories(MembershipCategory membershipCategory)
        {
            base.AddObject("MembershipCategories", membershipCategory);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipCategoryGroupDefaults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipCategoryGroupDefaults(MembershipCategoryGroupDefault membershipCategoryGroupDefault)
        {
            base.AddObject("MembershipCategoryGroupDefaults", membershipCategoryGroupDefault);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipFullPaymentComponents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipFullPaymentComponents(MembershipFullPaymentComponent membershipFullPaymentComponent)
        {
            base.AddObject("MembershipFullPaymentComponents", membershipFullPaymentComponent);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipGroupAges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipGroupAges(MembershipGroupAge membershipGroupAge)
        {
            base.AddObject("MembershipGroupAges", membershipGroupAge);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipGroups(MembershipGroup membershipGroup)
        {
            base.AddObject("MembershipGroups", membershipGroup);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipGroupStyles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipGroupStyles(MembershipGroupStyle membershipGroupStyle)
        {
            base.AddObject("MembershipGroupStyles", membershipGroupStyle);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipLinkTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipLinkTypes(MembershipLinkType membershipLinkType)
        {
            base.AddObject("MembershipLinkTypes", membershipLinkType);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipMonthlyPaymentOngoingCosts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipMonthlyPaymentOngoingCosts(MembershipMonthlyPaymentOngoingCost membershipMonthlyPaymentOngoingCost)
        {
            base.AddObject("MembershipMonthlyPaymentOngoingCosts", membershipMonthlyPaymentOngoingCost);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipMonthlyPaymentUpFrontCosts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipMonthlyPaymentUpFrontCosts(MembershipMonthlyPaymentUpFrontCost membershipMonthlyPaymentUpFrontCost)
        {
            base.AddObject("MembershipMonthlyPaymentUpFrontCosts", membershipMonthlyPaymentUpFrontCost);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipTokens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipTokens(MembershipToken membershipToken)
        {
            base.AddObject("MembershipTokens", membershipToken);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipCategoryGroupDefaultEPOS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipCategoryGroupDefaultEPOS(MembershipCategoryGroupDefaultEPOS membershipCategoryGroupDefaultEPOS)
        {
            base.AddObject("MembershipCategoryGroupDefaultEPOS", membershipCategoryGroupDefaultEPOS);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipGroupEPOS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipGroupEPOS(MembershipGroupEPOS membershipGroupEPOS)
        {
            base.AddObject("MembershipGroupEPOS", membershipGroupEPOS);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipOptionBoxes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipOptionBoxes(MembershipOptionBox membershipOptionBox)
        {
            base.AddObject("MembershipOptionBoxes", membershipOptionBox);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipOptionBoxReasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipOptionBoxReasons(MembershipOptionBoxReason membershipOptionBoxReason)
        {
            base.AddObject("MembershipOptionBoxReasons", membershipOptionBoxReason);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembers(Member member)
        {
            base.AddObject("Members", member);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MemberNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMemberNotes(MemberNote memberNote)
        {
            base.AddObject("MemberNotes", memberNote);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the MembershipUpdates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembershipUpdates(MembershipUpdate membershipUpdate)
        {
            base.AddObject("MembershipUpdates", membershipUpdate);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the EmailHeaders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailHeaders(EmailHeader emailHeader)
        {
            base.AddObject("EmailHeaders", emailHeader);
        }

        #endregion

    }

    #endregion

    #region Entities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Activity : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Activity object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="enquiryID">Initial value of the EnquiryID property.</param>
        /// <param name="activityTypeID">Initial value of the ActivityTypeID property.</param>
        /// <param name="direction">Initial value of the Direction property.</param>
        /// <param name="details">Initial value of the Details property.</param>
        /// <param name="length">Initial value of the Length property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="assigneeID">Initial value of the AssigneeID property.</param>
        public static Activity CreateActivity(global::System.Guid id, global::System.Guid enquiryID, global::System.Guid activityTypeID, global::System.String direction, global::System.String details, global::System.String length, global::System.DateTime date, global::System.Guid assigneeID)
        {
            Activity activity = new Activity();
            activity.ID = id;
            activity.EnquiryID = enquiryID;
            activity.ActivityTypeID = activityTypeID;
            activity.Direction = direction;
            activity.Details = details;
            activity.Length = length;
            activity.Date = date;
            activity.AssigneeID = assigneeID;
            return activity;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EnquiryID
        {
            get
            {
                return _EnquiryID;
            }
            set
            {
                OnEnquiryIDChanging(value);
                ReportPropertyChanging("EnquiryID");
                _EnquiryID = StructuralObject.SetValidValue(value, "EnquiryID");
                ReportPropertyChanged("EnquiryID");
                OnEnquiryIDChanged();
            }
        }
        private global::System.Guid _EnquiryID;
        partial void OnEnquiryIDChanging(global::System.Guid value);
        partial void OnEnquiryIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ActivityTypeID
        {
            get
            {
                return _ActivityTypeID;
            }
            set
            {
                OnActivityTypeIDChanging(value);
                ReportPropertyChanging("ActivityTypeID");
                _ActivityTypeID = StructuralObject.SetValidValue(value, "ActivityTypeID");
                ReportPropertyChanged("ActivityTypeID");
                OnActivityTypeIDChanged();
            }
        }
        private global::System.Guid _ActivityTypeID;
        partial void OnActivityTypeIDChanging(global::System.Guid value);
        partial void OnActivityTypeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Direction
        {
            get
            {
                return _Direction;
            }
            set
            {
                OnDirectionChanging(value);
                ReportPropertyChanging("Direction");
                _Direction = StructuralObject.SetValidValue(value, false, "Direction");
                ReportPropertyChanged("Direction");
                OnDirectionChanged();
            }
        }
        private global::System.String _Direction;
        partial void OnDirectionChanging(global::System.String value);
        partial void OnDirectionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, false, "Details");
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value, false, "Length");
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private global::System.String _Length;
        partial void OnLengthChanging(global::System.String value);
        partial void OnLengthChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> FollowUpID
        {
            get
            {
                return _FollowUpID;
            }
            set
            {
                OnFollowUpIDChanging(value);
                ReportPropertyChanging("FollowUpID");
                _FollowUpID = StructuralObject.SetValidValue(value, "FollowUpID");
                ReportPropertyChanged("FollowUpID");
                OnFollowUpIDChanged();
            }
        }
        private Nullable<global::System.Guid> _FollowUpID;
        partial void OnFollowUpIDChanging(Nullable<global::System.Guid> value);
        partial void OnFollowUpIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid AssigneeID
        {
            get
            {
                return _AssigneeID;
            }
            set
            {
                OnAssigneeIDChanging(value);
                ReportPropertyChanging("AssigneeID");
                _AssigneeID = StructuralObject.SetValidValue(value, "AssigneeID");
                ReportPropertyChanged("AssigneeID");
                OnAssigneeIDChanged();
            }
        }
        private global::System.Guid _AssigneeID;
        partial void OnAssigneeIDChanging(global::System.Guid value);
        partial void OnAssigneeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastEditDate
        {
            get
            {
                return _LastEditDate;
            }
            set
            {
                OnLastEditDateChanging(value);
                ReportPropertyChanging("LastEditDate");
                _LastEditDate = StructuralObject.SetValidValue(value, "LastEditDate");
                ReportPropertyChanged("LastEditDate");
                OnLastEditDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastEditDate;
        partial void OnLastEditDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastEditDateChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Activities_ActivityTypes", "ActivityType")]
        public ActivityType ActivityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityType>("EventManagementSystemModel.FK_Activities_ActivityTypes", "ActivityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityType>("EventManagementSystemModel.FK_Activities_ActivityTypes", "ActivityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActivityType> ActivityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityType>("EventManagementSystemModel.FK_Activities_ActivityTypes", "ActivityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActivityType>("EventManagementSystemModel.FK_Activities_ActivityTypes", "ActivityType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Activities_Enquiries", "Enquiry")]
        public Enquiry Enquiry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_Activities_Enquiries", "Enquiry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_Activities_Enquiries", "Enquiry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Enquiry> EnquiryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_Activities_Enquiries", "Enquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Enquiry>("EventManagementSystemModel.FK_Activities_Enquiries", "Enquiry", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Activities_FollowUps", "FollowUp")]
        public FollowUp FollowUp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FollowUp>("EventManagementSystemModel.FK_Activities_FollowUps", "FollowUp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FollowUp>("EventManagementSystemModel.FK_Activities_FollowUps", "FollowUp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FollowUp> FollowUpReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FollowUp>("EventManagementSystemModel.FK_Activities_FollowUps", "FollowUp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FollowUp>("EventManagementSystemModel.FK_Activities_FollowUps", "FollowUp", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Activities_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Activities_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Activities_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Activities_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_Activities_Users", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "ActivityType")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class ActivityType : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new ActivityType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ActivityType CreateActivityType(global::System.Guid id, global::System.String name)
        {
            ActivityType activityType = new ActivityType();
            activityType.ID = id;
            activityType.Name = name;
            return activityType;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Activities_ActivityTypes", "Activity")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("EventManagementSystemModel.FK_Activities_ActivityTypes", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("EventManagementSystemModel.FK_Activities_ActivityTypes", "Activity", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "CalendarNote")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class CalendarNote : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new CalendarNote object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        public static CalendarNote CreateCalendarNote(global::System.Guid id, global::System.String description, global::System.DateTime startTime, global::System.DateTime endTime, global::System.String color)
        {
            CalendarNote calendarNote = new CalendarNote();
            calendarNote.ID = id;
            calendarNote.Description = description;
            calendarNote.StartTime = startTime;
            calendarNote.EndTime = endTime;
            calendarNote.Color = color;
            return calendarNote;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, "StartTime");
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value, "EndTime");
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, false, "Color");
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Campaign")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Campaign : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Campaign object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="campaignTypeID">Initial value of the CampaignTypeID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Campaign CreateCampaign(global::System.Guid id, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Guid campaignTypeID, global::System.Boolean isActive, global::System.String name)
        {
            Campaign campaign = new Campaign();
            campaign.ID = id;
            campaign.StartDate = startDate;
            campaign.EndDate = endDate;
            campaign.CampaignTypeID = campaignTypeID;
            campaign.IsActive = isActive;
            campaign.Name = name;
            return campaign;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid CampaignTypeID
        {
            get
            {
                return _CampaignTypeID;
            }
            set
            {
                OnCampaignTypeIDChanging(value);
                ReportPropertyChanging("CampaignTypeID");
                _CampaignTypeID = StructuralObject.SetValidValue(value, "CampaignTypeID");
                ReportPropertyChanged("CampaignTypeID");
                OnCampaignTypeIDChanged();
            }
        }
        private global::System.Guid _CampaignTypeID;
        partial void OnCampaignTypeIDChanging(global::System.Guid value);
        partial void OnCampaignTypeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastEditDate
        {
            get
            {
                return _LastEditDate;
            }
            set
            {
                OnLastEditDateChanging(value);
                ReportPropertyChanging("LastEditDate");
                _LastEditDate = StructuralObject.SetValidValue(value, "LastEditDate");
                ReportPropertyChanged("LastEditDate");
                OnLastEditDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastEditDate;
        partial void OnLastEditDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastEditDateChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Campaigns_CampaignTypes", "CampaignType")]
        public CampaignType CampaignType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CampaignType>("EventManagementSystemModel.FK_Campaigns_CampaignTypes", "CampaignType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CampaignType>("EventManagementSystemModel.FK_Campaigns_CampaignTypes", "CampaignType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CampaignType> CampaignTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CampaignType>("EventManagementSystemModel.FK_Campaigns_CampaignTypes", "CampaignType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CampaignType>("EventManagementSystemModel.FK_Campaigns_CampaignTypes", "CampaignType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_Campaigns", "Enquiry")]
        public EntityCollection<Enquiry> Enquiries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_Campaigns", "Enquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_Campaigns", "Enquiry", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "CampaignType")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class CampaignType : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new CampaignType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CampaignType CreateCampaignType(global::System.Guid id, global::System.String name)
        {
            CampaignType campaignType = new CampaignType();
            campaignType.ID = id;
            campaignType.Name = name;
            return campaignType;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Campaigns_CampaignTypes", "Campaign")]
        public EntityCollection<Campaign> Campaigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Campaign>("EventManagementSystemModel.FK_Campaigns_CampaignTypes", "Campaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Campaign>("EventManagementSystemModel.FK_Campaigns_CampaignTypes", "Campaign", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "CCContactsCorrespondence")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class CCContactsCorrespondence : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new CCContactsCorrespondence object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="correspondenceID">Initial value of the CorrespondenceID property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        public static CCContactsCorrespondence CreateCCContactsCorrespondence(global::System.Guid id, global::System.Guid correspondenceID, global::System.Guid contactID)
        {
            CCContactsCorrespondence cCContactsCorrespondence = new CCContactsCorrespondence();
            cCContactsCorrespondence.ID = id;
            cCContactsCorrespondence.CorrespondenceID = correspondenceID;
            cCContactsCorrespondence.ContactID = contactID;
            return cCContactsCorrespondence;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid CorrespondenceID
        {
            get
            {
                return _CorrespondenceID;
            }
            set
            {
                OnCorrespondenceIDChanging(value);
                ReportPropertyChanging("CorrespondenceID");
                _CorrespondenceID = StructuralObject.SetValidValue(value, "CorrespondenceID");
                ReportPropertyChanged("CorrespondenceID");
                OnCorrespondenceIDChanged();
            }
        }
        private global::System.Guid _CorrespondenceID;
        partial void OnCorrespondenceIDChanging(global::System.Guid value);
        partial void OnCorrespondenceIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private global::System.Guid _ContactID;
        partial void OnContactIDChanging(global::System.Guid value);
        partial void OnContactIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_CCContactsCorrespondence_Contacts", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_CCContactsCorrespondence_Contacts", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_CCContactsCorrespondence_Contacts", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_CCContactsCorrespondence_Contacts", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("EventManagementSystemModel.FK_CCContactsCorrespondence_Contacts", "Contact", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_CCContactsCorrespondence_Corresponcences", "Corresponcence")]
        public Corresponcence Corresponcence
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corresponcence>("EventManagementSystemModel.FK_CCContactsCorrespondence_Corresponcences", "Corresponcence").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corresponcence>("EventManagementSystemModel.FK_CCContactsCorrespondence_Corresponcences", "Corresponcence").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Corresponcence> CorresponcenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corresponcence>("EventManagementSystemModel.FK_CCContactsCorrespondence_Corresponcences", "Corresponcence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Corresponcence>("EventManagementSystemModel.FK_CCContactsCorrespondence_Corresponcences", "Corresponcence", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Clerk")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Clerk : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Clerk object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="record">Initial value of the Record property.</param>
        /// <param name="tillID">Initial value of the TillID property.</param>
        public static Clerk CreateClerk(global::System.Guid id, global::System.Int32 record, global::System.Guid tillID)
        {
            Clerk clerk = new Clerk();
            clerk.ID = id;
            clerk.Record = record;
            clerk.TillID = tillID;
            return clerk;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Record
        {
            get
            {
                return _Record;
            }
            set
            {
                OnRecordChanging(value);
                ReportPropertyChanging("Record");
                _Record = StructuralObject.SetValidValue(value, "Record");
                ReportPropertyChanged("Record");
                OnRecordChanged();
            }
        }
        private global::System.Int32 _Record;
        partial void OnRecordChanging(global::System.Int32 value);
        partial void OnRecordChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TillID
        {
            get
            {
                return _TillID;
            }
            set
            {
                OnTillIDChanging(value);
                ReportPropertyChanging("TillID");
                _TillID = StructuralObject.SetValidValue(value, "TillID");
                ReportPropertyChanged("TillID");
                OnTillIDChanged();
            }
        }
        private global::System.Guid _TillID;
        partial void OnTillIDChanging(global::System.Guid value);
        partial void OnTillIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTabTransactions_Clerks", "TillTabTransaction")]
        public EntityCollection<TillTabTransaction> TillTabTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTabTransaction>("EventManagementSystemModel.FK_TillTabTransactions_Clerks", "TillTabTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTabTransaction>("EventManagementSystemModel.FK_TillTabTransactions_Clerks", "TillTabTransaction", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactions_Clerks", "TillTransaction")]
        public EntityCollection<TillTransaction> TillTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTransaction>("EventManagementSystemModel.FK_TillTransactions_Clerks", "TillTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTransaction>("EventManagementSystemModel.FK_TillTransactions_Clerks", "TillTransaction", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        public static Contact CreateContact(global::System.Guid id, global::System.String firstName, global::System.String lastName, global::System.Int32 gender)
        {
            Contact contact = new Contact();
            contact.ID = id;
            contact.FirstName = firstName;
            contact.LastName = lastName;
            contact.Gender = gender;
            return contact;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private Nullable<global::System.Guid> _Title;
        partial void OnTitleChanging(Nullable<global::System.Guid> value);
        partial void OnTitleChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true, "Address1");
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true, "Address2");
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Address3
        {
            get
            {
                return _Address3;
            }
            set
            {
                OnAddress3Changing(value);
                ReportPropertyChanging("Address3");
                _Address3 = StructuralObject.SetValidValue(value, true, "Address3");
                ReportPropertyChanged("Address3");
                OnAddress3Changed();
            }
        }
        private global::System.String _Address3;
        partial void OnAddress3Changing(global::System.String value);
        partial void OnAddress3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true, "Country");
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String PostCode
        {
            get
            {
                return _PostCode;
            }
            set
            {
                OnPostCodeChanging(value);
                ReportPropertyChanging("PostCode");
                _PostCode = StructuralObject.SetValidValue(value, true, "PostCode");
                ReportPropertyChanged("PostCode");
                OnPostCodeChanged();
            }
        }
        private global::System.String _PostCode;
        partial void OnPostCodeChanging(global::System.String value);
        partial void OnPostCodeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Phone1
        {
            get
            {
                return _Phone1;
            }
            set
            {
                OnPhone1Changing(value);
                ReportPropertyChanging("Phone1");
                _Phone1 = StructuralObject.SetValidValue(value, true, "Phone1");
                ReportPropertyChanged("Phone1");
                OnPhone1Changed();
            }
        }
        private global::System.String _Phone1;
        partial void OnPhone1Changing(global::System.String value);
        partial void OnPhone1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Phone2
        {
            get
            {
                return _Phone2;
            }
            set
            {
                OnPhone2Changing(value);
                ReportPropertyChanging("Phone2");
                _Phone2 = StructuralObject.SetValidValue(value, true, "Phone2");
                ReportPropertyChanged("Phone2");
                OnPhone2Changed();
            }
        }
        private global::System.String _Phone2;
        partial void OnPhone2Changing(global::System.String value);
        partial void OnPhone2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, "Gender");
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.Int32 _Gender;
        partial void OnGenderChanging(global::System.Int32 value);
        partial void OnGenderChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_CCContactsCorrespondence_Contacts", "CCContactsCorrespondence")]
        public EntityCollection<CCContactsCorrespondence> CCContactsCorrespondences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CCContactsCorrespondence>("EventManagementSystemModel.FK_CCContactsCorrespondence_Contacts", "CCContactsCorrespondence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CCContactsCorrespondence>("EventManagementSystemModel.FK_CCContactsCorrespondence_Contacts", "CCContactsCorrespondence", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Contacts_ContactTitles", "ContactTitle")]
        public ContactTitle ContactTitle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactTitle>("EventManagementSystemModel.FK_Contacts_ContactTitles", "ContactTitle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactTitle>("EventManagementSystemModel.FK_Contacts_ContactTitles", "ContactTitle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactTitle> ContactTitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactTitle>("EventManagementSystemModel.FK_Contacts_ContactTitles", "ContactTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactTitle>("EventManagementSystemModel.FK_Contacts_ContactTitles", "ContactTitle", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Corresponcences_Contacts", "Corresponcence")]
        public EntityCollection<Corresponcence> Corresponcences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Corresponcence>("EventManagementSystemModel.FK_Corresponcences_Contacts", "Corresponcence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Corresponcence>("EventManagementSystemModel.FK_Corresponcences_Contacts", "Corresponcence", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_Contacts", "Enquiry")]
        public EntityCollection<Enquiry> Enquiries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_Contacts", "Enquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_Contacts", "Enquiry", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventContacts_Contacts", "EventContact")]
        public EntityCollection<EventContact> EventContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventContact>("EventManagementSystemModel.FK_EventContacts_Contacts", "EventContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventContact>("EventManagementSystemModel.FK_EventContacts_Contacts", "EventContact", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Events_Contacts", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("EventManagementSystemModel.FK_Events_Contacts", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("EventManagementSystemModel.FK_Events_Contacts", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Members_Contacts", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("EventManagementSystemModel.FK_Members_Contacts", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("EventManagementSystemModel.FK_Members_Contacts", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("EventManagementSystemModel.FK_Members_Contacts", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("EventManagementSystemModel.FK_Members_Contacts", "Member", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "ContactTitle")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class ContactTitle : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new ContactTitle object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static ContactTitle CreateContactTitle(global::System.Guid id, global::System.String title)
        {
            ContactTitle contactTitle = new ContactTitle();
            contactTitle.ID = id;
            contactTitle.Title = title;
            return contactTitle;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Contacts_ContactTitles", "Contact")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("EventManagementSystemModel.FK_Contacts_ContactTitles", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("EventManagementSystemModel.FK_Contacts_ContactTitles", "Contact", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Corresponcence")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Corresponcence : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Corresponcence object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        /// <param name="ownerType">Initial value of the OwnerType property.</param>
        /// <param name="corresponcenceTypeID">Initial value of the CorresponcenceTypeID property.</param>
        /// <param name="emailType">Initial value of the EmailType property.</param>
        /// <param name="fromAddress">Initial value of the FromAddress property.</param>
        /// <param name="toAddress">Initial value of the ToAddress property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Corresponcence CreateCorresponcence(global::System.Guid id, global::System.Guid ownerID, global::System.String ownerType, global::System.Guid corresponcenceTypeID, global::System.String emailType, global::System.String fromAddress, global::System.String toAddress, global::System.String message, global::System.String subject, global::System.DateTime date, global::System.Guid userID)
        {
            Corresponcence corresponcence = new Corresponcence();
            corresponcence.ID = id;
            corresponcence.OwnerID = ownerID;
            corresponcence.OwnerType = ownerType;
            corresponcence.CorresponcenceTypeID = corresponcenceTypeID;
            corresponcence.EmailType = emailType;
            corresponcence.FromAddress = fromAddress;
            corresponcence.ToAddress = toAddress;
            corresponcence.Message = message;
            corresponcence.Subject = subject;
            corresponcence.Date = date;
            corresponcence.UserID = userID;
            return corresponcence;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                OnOwnerIDChanging(value);
                ReportPropertyChanging("OwnerID");
                _OwnerID = StructuralObject.SetValidValue(value, "OwnerID");
                ReportPropertyChanged("OwnerID");
                OnOwnerIDChanged();
            }
        }
        private global::System.Guid _OwnerID;
        partial void OnOwnerIDChanging(global::System.Guid value);
        partial void OnOwnerIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String OwnerType
        {
            get
            {
                return _OwnerType;
            }
            set
            {
                OnOwnerTypeChanging(value);
                ReportPropertyChanging("OwnerType");
                _OwnerType = StructuralObject.SetValidValue(value, false, "OwnerType");
                ReportPropertyChanged("OwnerType");
                OnOwnerTypeChanged();
            }
        }
        private global::System.String _OwnerType;
        partial void OnOwnerTypeChanging(global::System.String value);
        partial void OnOwnerTypeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid CorresponcenceTypeID
        {
            get
            {
                return _CorresponcenceTypeID;
            }
            set
            {
                OnCorresponcenceTypeIDChanging(value);
                ReportPropertyChanging("CorresponcenceTypeID");
                _CorresponcenceTypeID = StructuralObject.SetValidValue(value, "CorresponcenceTypeID");
                ReportPropertyChanged("CorresponcenceTypeID");
                OnCorresponcenceTypeIDChanged();
            }
        }
        private global::System.Guid _CorresponcenceTypeID;
        partial void OnCorresponcenceTypeIDChanging(global::System.Guid value);
        partial void OnCorresponcenceTypeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String EmailType
        {
            get
            {
                return _EmailType;
            }
            set
            {
                OnEmailTypeChanging(value);
                ReportPropertyChanging("EmailType");
                _EmailType = StructuralObject.SetValidValue(value, false, "EmailType");
                ReportPropertyChanged("EmailType");
                OnEmailTypeChanged();
            }
        }
        private global::System.String _EmailType;
        partial void OnEmailTypeChanging(global::System.String value);
        partial void OnEmailTypeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String FromAddress
        {
            get
            {
                return _FromAddress;
            }
            set
            {
                OnFromAddressChanging(value);
                ReportPropertyChanging("FromAddress");
                _FromAddress = StructuralObject.SetValidValue(value, false, "FromAddress");
                ReportPropertyChanged("FromAddress");
                OnFromAddressChanged();
            }
        }
        private global::System.String _FromAddress;
        partial void OnFromAddressChanging(global::System.String value);
        partial void OnFromAddressChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String ToAddress
        {
            get
            {
                return _ToAddress;
            }
            set
            {
                OnToAddressChanging(value);
                ReportPropertyChanging("ToAddress");
                _ToAddress = StructuralObject.SetValidValue(value, false, "ToAddress");
                ReportPropertyChanged("ToAddress");
                OnToAddressChanged();
            }
        }
        private global::System.String _ToAddress;
        partial void OnToAddressChanging(global::System.String value);
        partial void OnToAddressChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String CCAddress
        {
            get
            {
                return _CCAddress;
            }
            set
            {
                OnCCAddressChanging(value);
                ReportPropertyChanging("CCAddress");
                _CCAddress = StructuralObject.SetValidValue(value, true, "CCAddress");
                ReportPropertyChanged("CCAddress");
                OnCCAddressChanged();
            }
        }
        private global::System.String _CCAddress;
        partial void OnCCAddressChanging(global::System.String value);
        partial void OnCCAddressChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false, "Message");
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false, "Subject");
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ContactToID
        {
            get
            {
                return _ContactToID;
            }
            set
            {
                OnContactToIDChanging(value);
                ReportPropertyChanging("ContactToID");
                _ContactToID = StructuralObject.SetValidValue(value, "ContactToID");
                ReportPropertyChanged("ContactToID");
                OnContactToIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ContactToID;
        partial void OnContactToIDChanging(Nullable<global::System.Guid> value);
        partial void OnContactToIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EmailHeaderID
        {
            get
            {
                return _EmailHeaderID;
            }
            set
            {
                OnEmailHeaderIDChanging(value);
                ReportPropertyChanging("EmailHeaderID");
                _EmailHeaderID = StructuralObject.SetValidValue(value, "EmailHeaderID");
                ReportPropertyChanged("EmailHeaderID");
                OnEmailHeaderIDChanged();
            }
        }
        private Nullable<global::System.Guid> _EmailHeaderID;
        partial void OnEmailHeaderIDChanging(Nullable<global::System.Guid> value);
        partial void OnEmailHeaderIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_CCContactsCorrespondence_Corresponcences", "CCContactsCorrespondence")]
        public EntityCollection<CCContactsCorrespondence> CCContactsCorrespondences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CCContactsCorrespondence>("EventManagementSystemModel.FK_CCContactsCorrespondence_Corresponcences", "CCContactsCorrespondence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CCContactsCorrespondence>("EventManagementSystemModel.FK_CCContactsCorrespondence_Corresponcences", "CCContactsCorrespondence", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Corresponcences_Contacts", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_Corresponcences_Contacts", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_Corresponcences_Contacts", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_Corresponcences_Contacts", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("EventManagementSystemModel.FK_Corresponcences_Contacts", "Contact", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Corresponcences_CorresponcenceTypes", "CorresponcenceType")]
        public CorresponcenceType CorresponcenceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CorresponcenceType>("EventManagementSystemModel.FK_Corresponcences_CorresponcenceTypes", "CorresponcenceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CorresponcenceType>("EventManagementSystemModel.FK_Corresponcences_CorresponcenceTypes", "CorresponcenceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CorresponcenceType> CorresponcenceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CorresponcenceType>("EventManagementSystemModel.FK_Corresponcences_CorresponcenceTypes", "CorresponcenceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CorresponcenceType>("EventManagementSystemModel.FK_Corresponcences_CorresponcenceTypes", "CorresponcenceType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Corresponcences_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Corresponcences_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Corresponcences_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Corresponcences_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_Corresponcences_Users", "User", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_CorrespondenceDocuments_Corresponcences", "CorrespondenceDocument")]
        public EntityCollection<CorrespondenceDocument> CorrespondenceDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CorrespondenceDocument>("EventManagementSystemModel.FK_CorrespondenceDocuments_Corresponcences", "CorrespondenceDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CorrespondenceDocument>("EventManagementSystemModel.FK_CorrespondenceDocuments_Corresponcences", "CorrespondenceDocument", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Corresponcences_EmailHeaders", "EmailHeader")]
        public EmailHeader EmailHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailHeader>("EventManagementSystemModel.FK_Corresponcences_EmailHeaders", "EmailHeader").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailHeader>("EventManagementSystemModel.FK_Corresponcences_EmailHeaders", "EmailHeader").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmailHeader> EmailHeaderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailHeader>("EventManagementSystemModel.FK_Corresponcences_EmailHeaders", "EmailHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmailHeader>("EventManagementSystemModel.FK_Corresponcences_EmailHeaders", "EmailHeader", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "CorresponcenceType")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class CorresponcenceType : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new CorresponcenceType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static CorresponcenceType CreateCorresponcenceType(global::System.Guid id, global::System.String type)
        {
            CorresponcenceType corresponcenceType = new CorresponcenceType();
            corresponcenceType.ID = id;
            corresponcenceType.Type = type;
            return corresponcenceType;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Corresponcences_CorresponcenceTypes", "Corresponcence")]
        public EntityCollection<Corresponcence> Corresponcences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Corresponcence>("EventManagementSystemModel.FK_Corresponcences_CorresponcenceTypes", "Corresponcence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Corresponcence>("EventManagementSystemModel.FK_Corresponcences_CorresponcenceTypes", "Corresponcence", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "CorrespondenceDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class CorrespondenceDocument : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new CorrespondenceDocument object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="correspondenceID">Initial value of the CorrespondenceID property.</param>
        /// <param name="documentID">Initial value of the DocumentID property.</param>
        public static CorrespondenceDocument CreateCorrespondenceDocument(global::System.Guid id, global::System.Guid correspondenceID, global::System.Guid documentID)
        {
            CorrespondenceDocument correspondenceDocument = new CorrespondenceDocument();
            correspondenceDocument.ID = id;
            correspondenceDocument.CorrespondenceID = correspondenceID;
            correspondenceDocument.DocumentID = documentID;
            return correspondenceDocument;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid CorrespondenceID
        {
            get
            {
                return _CorrespondenceID;
            }
            set
            {
                OnCorrespondenceIDChanging(value);
                ReportPropertyChanging("CorrespondenceID");
                _CorrespondenceID = StructuralObject.SetValidValue(value, "CorrespondenceID");
                ReportPropertyChanged("CorrespondenceID");
                OnCorrespondenceIDChanged();
            }
        }
        private global::System.Guid _CorrespondenceID;
        partial void OnCorrespondenceIDChanging(global::System.Guid value);
        partial void OnCorrespondenceIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid DocumentID
        {
            get
            {
                return _DocumentID;
            }
            set
            {
                OnDocumentIDChanging(value);
                ReportPropertyChanging("DocumentID");
                _DocumentID = StructuralObject.SetValidValue(value, "DocumentID");
                ReportPropertyChanged("DocumentID");
                OnDocumentIDChanged();
            }
        }
        private global::System.Guid _DocumentID;
        partial void OnDocumentIDChanging(global::System.Guid value);
        partial void OnDocumentIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_CorrespondenceDocuments_Corresponcences", "Corresponcence")]
        public Corresponcence Corresponcence
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corresponcence>("EventManagementSystemModel.FK_CorrespondenceDocuments_Corresponcences", "Corresponcence").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corresponcence>("EventManagementSystemModel.FK_CorrespondenceDocuments_Corresponcences", "Corresponcence").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Corresponcence> CorresponcenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corresponcence>("EventManagementSystemModel.FK_CorrespondenceDocuments_Corresponcences", "Corresponcence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Corresponcence>("EventManagementSystemModel.FK_CorrespondenceDocuments_Corresponcences", "Corresponcence", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_CorrespondenceDocuments_Documents", "Document")]
        public Document Document
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EventManagementSystemModel.FK_CorrespondenceDocuments_Documents", "Document").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EventManagementSystemModel.FK_CorrespondenceDocuments_Documents", "Document").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document> DocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("EventManagementSystemModel.FK_CorrespondenceDocuments_Documents", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document>("EventManagementSystemModel.FK_CorrespondenceDocuments_Documents", "Document", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "DefaultSettingsForEnquiry")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class DefaultSettingsForEnquiry : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new DefaultSettingsForEnquiry object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="enquiryStatusID">Initial value of the EnquiryStatusID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static DefaultSettingsForEnquiry CreateDefaultSettingsForEnquiry(global::System.Guid id, global::System.Guid enquiryStatusID, global::System.Guid userID)
        {
            DefaultSettingsForEnquiry defaultSettingsForEnquiry = new DefaultSettingsForEnquiry();
            defaultSettingsForEnquiry.ID = id;
            defaultSettingsForEnquiry.EnquiryStatusID = enquiryStatusID;
            defaultSettingsForEnquiry.UserID = userID;
            return defaultSettingsForEnquiry;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EnquiryStatusID
        {
            get
            {
                return _EnquiryStatusID;
            }
            set
            {
                OnEnquiryStatusIDChanging(value);
                ReportPropertyChanging("EnquiryStatusID");
                _EnquiryStatusID = StructuralObject.SetValidValue(value, "EnquiryStatusID");
                ReportPropertyChanged("EnquiryStatusID");
                OnEnquiryStatusIDChanged();
            }
        }
        private global::System.Guid _EnquiryStatusID;
        partial void OnEnquiryStatusIDChanging(global::System.Guid value);
        partial void OnEnquiryStatusIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String FromAddress
        {
            get
            {
                return _FromAddress;
            }
            set
            {
                OnFromAddressChanging(value);
                ReportPropertyChanging("FromAddress");
                _FromAddress = StructuralObject.SetValidValue(value, true, "FromAddress");
                ReportPropertyChanged("FromAddress");
                OnFromAddressChanged();
            }
        }
        private global::System.String _FromAddress;
        partial void OnFromAddressChanging(global::System.String value);
        partial void OnFromAddressChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_DefaultSettingsForEnquiries_EnquiryStatuses", "EnquiryStatus")]
        public EnquiryStatus EnquiryStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EnquiryStatus>("EventManagementSystemModel.FK_DefaultSettingsForEnquiries_EnquiryStatuses", "EnquiryStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EnquiryStatus>("EventManagementSystemModel.FK_DefaultSettingsForEnquiries_EnquiryStatuses", "EnquiryStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EnquiryStatus> EnquiryStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EnquiryStatus>("EventManagementSystemModel.FK_DefaultSettingsForEnquiries_EnquiryStatuses", "EnquiryStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EnquiryStatus>("EventManagementSystemModel.FK_DefaultSettingsForEnquiries_EnquiryStatuses", "EnquiryStatus", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Users_DefaultSettingsForEnquiries", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Users_DefaultSettingsForEnquiries", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Users_DefaultSettingsForEnquiries", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Users_DefaultSettingsForEnquiries", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_Users_DefaultSettingsForEnquiries", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Document")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Document : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        /// <param name="isCommon">Initial value of the IsCommon property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        public static Document CreateDocument(global::System.Guid id, global::System.Boolean isEnabled, global::System.Boolean isCommon, global::System.String path)
        {
            Document document = new Document();
            document.ID = id;
            document.IsEnabled = isEnabled;
            document.IsCommon = isCommon;
            document.Path = path;
            return document;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value, "IsEnabled");
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private global::System.Boolean _IsEnabled;
        partial void OnIsEnabledChanging(global::System.Boolean value);
        partial void OnIsEnabledChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCommon
        {
            get
            {
                return _IsCommon;
            }
            set
            {
                OnIsCommonChanging(value);
                ReportPropertyChanging("IsCommon");
                _IsCommon = StructuralObject.SetValidValue(value, "IsCommon");
                ReportPropertyChanged("IsCommon");
                OnIsCommonChanged();
            }
        }
        private global::System.Boolean _IsCommon;
        partial void OnIsCommonChanging(global::System.Boolean value);
        partial void OnIsCommonChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false, "Path");
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private Nullable<global::System.Guid> _EventID;
        partial void OnEventIDChanging(Nullable<global::System.Guid> value);
        partial void OnEventIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Documents_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_Documents_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_Documents_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_Documents_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_Documents_Events", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_CorrespondenceDocuments_Documents", "CorrespondenceDocument")]
        public EntityCollection<CorrespondenceDocument> CorrespondenceDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CorrespondenceDocument>("EventManagementSystemModel.FK_CorrespondenceDocuments_Documents", "CorrespondenceDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CorrespondenceDocument>("EventManagementSystemModel.FK_CorrespondenceDocuments_Documents", "CorrespondenceDocument", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EmailHeader")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EmailHeader : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EmailHeader object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        /// <param name="imageName">Initial value of the ImageName property.</param>
        public static EmailHeader CreateEmailHeader(global::System.Guid id, global::System.String name, global::System.Boolean isEnabled, global::System.String imageName)
        {
            EmailHeader emailHeader = new EmailHeader();
            emailHeader.ID = id;
            emailHeader.Name = name;
            emailHeader.IsEnabled = isEnabled;
            emailHeader.ImageName = imageName;
            return emailHeader;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value, "IsEnabled");
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private global::System.Boolean _IsEnabled;
        partial void OnIsEnabledChanging(global::System.Boolean value);
        partial void OnIsEnabledChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true, "Content");
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String ImageName
        {
            get
            {
                return _ImageName;
            }
            set
            {
                OnImageNameChanging(value);
                ReportPropertyChanging("ImageName");
                _ImageName = StructuralObject.SetValidValue(value, false, "ImageName");
                ReportPropertyChanged("ImageName");
                OnImageNameChanged();
            }
        }
        private global::System.String _ImageName;
        partial void OnImageNameChanging(global::System.String value);
        partial void OnImageNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MailTemplates_EmailHeaders", "MailTemplate")]
        public EntityCollection<MailTemplate> MailTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MailTemplate>("EventManagementSystemModel.FK_MailTemplates_EmailHeaders", "MailTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MailTemplate>("EventManagementSystemModel.FK_MailTemplates_EmailHeaders", "MailTemplate", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Corresponcences_EmailHeaders", "Corresponcence")]
        public EntityCollection<Corresponcence> Corresponcences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Corresponcence>("EventManagementSystemModel.FK_Corresponcences_EmailHeaders", "Corresponcence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Corresponcence>("EventManagementSystemModel.FK_Corresponcences_EmailHeaders", "Corresponcence", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EmailSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EmailSetting : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EmailSetting object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="server">Initial value of the Server property.</param>
        /// <param name="enableSSL">Initial value of the EnableSSL property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="port">Initial value of the Port property.</param>
        public static EmailSetting CreateEmailSetting(global::System.Guid id, global::System.String server, global::System.Boolean enableSSL, global::System.String username, global::System.String password, global::System.Int32 port)
        {
            EmailSetting emailSetting = new EmailSetting();
            emailSetting.ID = id;
            emailSetting.Server = server;
            emailSetting.EnableSSL = enableSSL;
            emailSetting.Username = username;
            emailSetting.Password = password;
            emailSetting.Port = port;
            return emailSetting;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Server
        {
            get
            {
                return _Server;
            }
            set
            {
                OnServerChanging(value);
                ReportPropertyChanging("Server");
                _Server = StructuralObject.SetValidValue(value, false, "Server");
                ReportPropertyChanged("Server");
                OnServerChanged();
            }
        }
        private global::System.String _Server;
        partial void OnServerChanging(global::System.String value);
        partial void OnServerChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean EnableSSL
        {
            get
            {
                return _EnableSSL;
            }
            set
            {
                OnEnableSSLChanging(value);
                ReportPropertyChanging("EnableSSL");
                _EnableSSL = StructuralObject.SetValidValue(value, "EnableSSL");
                ReportPropertyChanged("EnableSSL");
                OnEnableSSLChanged();
            }
        }
        private global::System.Boolean _EnableSSL;
        partial void OnEnableSSLChanging(global::System.Boolean value);
        partial void OnEnableSSLChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Port
        {
            get
            {
                return _Port;
            }
            set
            {
                OnPortChanging(value);
                ReportPropertyChanging("Port");
                _Port = StructuralObject.SetValidValue(value, "Port");
                ReportPropertyChanged("Port");
                OnPortChanged();
            }
        }
        private global::System.Int32 _Port;
        partial void OnPortChanging(global::System.Int32 value);
        partial void OnPortChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Enquiry")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Enquiry : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Enquiry object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventTypeID">Initial value of the EventTypeID property.</param>
        /// <param name="eventStatusID">Initial value of the EventStatusID property.</param>
        /// <param name="takenByID">Initial value of the TakenByID property.</param>
        /// <param name="assignedToID">Initial value of the AssignedToID property.</param>
        /// <param name="receivedMethodID">Initial value of the ReceivedMethodID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="enquiryStatusID">Initial value of the EnquiryStatusID property.</param>
        /// <param name="likelihood">Initial value of the Likelihood property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        public static Enquiry CreateEnquiry(global::System.Guid id, global::System.Guid eventTypeID, global::System.Guid eventStatusID, global::System.Guid takenByID, global::System.Guid assignedToID, global::System.Guid receivedMethodID, global::System.Double value, global::System.Guid enquiryStatusID, global::System.Int32 likelihood, global::System.DateTime creationDate)
        {
            Enquiry enquiry = new Enquiry();
            enquiry.ID = id;
            enquiry.EventTypeID = eventTypeID;
            enquiry.EventStatusID = eventStatusID;
            enquiry.TakenByID = takenByID;
            enquiry.AssignedToID = assignedToID;
            enquiry.ReceivedMethodID = receivedMethodID;
            enquiry.Value = value;
            enquiry.EnquiryStatusID = enquiryStatusID;
            enquiry.Likelihood = likelihood;
            enquiry.CreationDate = creationDate;
            return enquiry;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Places
        {
            get
            {
                return _Places;
            }
            set
            {
                OnPlacesChanging(value);
                ReportPropertyChanging("Places");
                _Places = StructuralObject.SetValidValue(value, "Places");
                ReportPropertyChanged("Places");
                OnPlacesChanged();
            }
        }
        private Nullable<global::System.Int32> _Places;
        partial void OnPlacesChanging(Nullable<global::System.Int32> value);
        partial void OnPlacesChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ContactID;
        partial void OnContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnContactIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventTypeID
        {
            get
            {
                return _EventTypeID;
            }
            set
            {
                OnEventTypeIDChanging(value);
                ReportPropertyChanging("EventTypeID");
                _EventTypeID = StructuralObject.SetValidValue(value, "EventTypeID");
                ReportPropertyChanged("EventTypeID");
                OnEventTypeIDChanged();
            }
        }
        private global::System.Guid _EventTypeID;
        partial void OnEventTypeIDChanging(global::System.Guid value);
        partial void OnEventTypeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventStatusID
        {
            get
            {
                return _EventStatusID;
            }
            set
            {
                OnEventStatusIDChanging(value);
                ReportPropertyChanging("EventStatusID");
                _EventStatusID = StructuralObject.SetValidValue(value, "EventStatusID");
                ReportPropertyChanged("EventStatusID");
                OnEventStatusIDChanged();
            }
        }
        private global::System.Guid _EventStatusID;
        partial void OnEventStatusIDChanging(global::System.Guid value);
        partial void OnEventStatusIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TakenByID
        {
            get
            {
                return _TakenByID;
            }
            set
            {
                OnTakenByIDChanging(value);
                ReportPropertyChanging("TakenByID");
                _TakenByID = StructuralObject.SetValidValue(value, "TakenByID");
                ReportPropertyChanged("TakenByID");
                OnTakenByIDChanged();
            }
        }
        private global::System.Guid _TakenByID;
        partial void OnTakenByIDChanging(global::System.Guid value);
        partial void OnTakenByIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid AssignedToID
        {
            get
            {
                return _AssignedToID;
            }
            set
            {
                OnAssignedToIDChanging(value);
                ReportPropertyChanging("AssignedToID");
                _AssignedToID = StructuralObject.SetValidValue(value, "AssignedToID");
                ReportPropertyChanged("AssignedToID");
                OnAssignedToIDChanged();
            }
        }
        private global::System.Guid _AssignedToID;
        partial void OnAssignedToIDChanging(global::System.Guid value);
        partial void OnAssignedToIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ReceivedMethodID
        {
            get
            {
                return _ReceivedMethodID;
            }
            set
            {
                OnReceivedMethodIDChanging(value);
                ReportPropertyChanging("ReceivedMethodID");
                _ReceivedMethodID = StructuralObject.SetValidValue(value, "ReceivedMethodID");
                ReportPropertyChanged("ReceivedMethodID");
                OnReceivedMethodIDChanged();
            }
        }
        private global::System.Guid _ReceivedMethodID;
        partial void OnReceivedMethodIDChanging(global::System.Guid value);
        partial void OnReceivedMethodIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Double Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Double _Value;
        partial void OnValueChanging(global::System.Double value);
        partial void OnValueChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EnquiryStatusID
        {
            get
            {
                return _EnquiryStatusID;
            }
            set
            {
                OnEnquiryStatusIDChanging(value);
                ReportPropertyChanging("EnquiryStatusID");
                _EnquiryStatusID = StructuralObject.SetValidValue(value, "EnquiryStatusID");
                ReportPropertyChanged("EnquiryStatusID");
                OnEnquiryStatusIDChanged();
            }
        }
        private global::System.Guid _EnquiryStatusID;
        partial void OnEnquiryStatusIDChanging(global::System.Guid value);
        partial void OnEnquiryStatusIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Likelihood
        {
            get
            {
                return _Likelihood;
            }
            set
            {
                OnLikelihoodChanging(value);
                ReportPropertyChanging("Likelihood");
                _Likelihood = StructuralObject.SetValidValue(value, "Likelihood");
                ReportPropertyChanged("Likelihood");
                OnLikelihoodChanged();
            }
        }
        private global::System.Int32 _Likelihood;
        partial void OnLikelihoodChanging(global::System.Int32 value);
        partial void OnLikelihoodChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CampaignID
        {
            get
            {
                return _CampaignID;
            }
            set
            {
                OnCampaignIDChanging(value);
                ReportPropertyChanging("CampaignID");
                _CampaignID = StructuralObject.SetValidValue(value, "CampaignID");
                ReportPropertyChanged("CampaignID");
                OnCampaignIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CampaignID;
        partial void OnCampaignIDChanging(Nullable<global::System.Guid> value);
        partial void OnCampaignIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastEditDate
        {
            get
            {
                return _LastEditDate;
            }
            set
            {
                OnLastEditDateChanging(value);
                ReportPropertyChanging("LastEditDate");
                _LastEditDate = StructuralObject.SetValidValue(value, "LastEditDate");
                ReportPropertyChanged("LastEditDate");
                OnLastEditDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastEditDate;
        partial void OnLastEditDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastEditDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LockedUserID
        {
            get
            {
                return _LockedUserID;
            }
            set
            {
                OnLockedUserIDChanging(value);
                ReportPropertyChanging("LockedUserID");
                _LockedUserID = StructuralObject.SetValidValue(value, "LockedUserID");
                ReportPropertyChanged("LockedUserID");
                OnLockedUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _LockedUserID;
        partial void OnLockedUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnLockedUserIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Activities_Enquiries", "Activity")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("EventManagementSystemModel.FK_Activities_Enquiries", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("EventManagementSystemModel.FK_Activities_Enquiries", "Activity", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_Campaigns", "Campaign")]
        public Campaign Campaign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("EventManagementSystemModel.FK_Enquiries_Campaigns", "Campaign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("EventManagementSystemModel.FK_Enquiries_Campaigns", "Campaign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Campaign> CampaignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("EventManagementSystemModel.FK_Enquiries_Campaigns", "Campaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Campaign>("EventManagementSystemModel.FK_Enquiries_Campaigns", "Campaign", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_Contacts", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_Enquiries_Contacts", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_Enquiries_Contacts", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_Enquiries_Contacts", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("EventManagementSystemModel.FK_Enquiries_Contacts", "Contact", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_EnquiryReceiveMethods", "EnquiryReceiveMethod")]
        public EnquiryReceiveMethod EnquiryReceiveMethod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EnquiryReceiveMethod>("EventManagementSystemModel.FK_Enquiries_EnquiryReceiveMethods", "EnquiryReceiveMethod").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EnquiryReceiveMethod>("EventManagementSystemModel.FK_Enquiries_EnquiryReceiveMethods", "EnquiryReceiveMethod").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EnquiryReceiveMethod> EnquiryReceiveMethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EnquiryReceiveMethod>("EventManagementSystemModel.FK_Enquiries_EnquiryReceiveMethods", "EnquiryReceiveMethod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EnquiryReceiveMethod>("EventManagementSystemModel.FK_Enquiries_EnquiryReceiveMethods", "EnquiryReceiveMethod", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_EnquiryStatuses", "EnquiryStatus")]
        public EnquiryStatus EnquiryStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EnquiryStatus>("EventManagementSystemModel.FK_Enquiries_EnquiryStatuses", "EnquiryStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EnquiryStatus>("EventManagementSystemModel.FK_Enquiries_EnquiryStatuses", "EnquiryStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EnquiryStatus> EnquiryStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EnquiryStatus>("EventManagementSystemModel.FK_Enquiries_EnquiryStatuses", "EnquiryStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EnquiryStatus>("EventManagementSystemModel.FK_Enquiries_EnquiryStatuses", "EnquiryStatus", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_EventStatuses", "EventStatus")]
        public EventStatus EventStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventStatus>("EventManagementSystemModel.FK_Enquiries_EventStatuses", "EventStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventStatus>("EventManagementSystemModel.FK_Enquiries_EventStatuses", "EventStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventStatus> EventStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventStatus>("EventManagementSystemModel.FK_Enquiries_EventStatuses", "EventStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventStatus>("EventManagementSystemModel.FK_Enquiries_EventStatuses", "EventStatus", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_EventTypes", "EventType")]
        public EventType EventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_Enquiries_EventTypes", "EventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_Enquiries_EventTypes", "EventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventType> EventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_Enquiries_EventTypes", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventType>("EventManagementSystemModel.FK_Enquiries_EventTypes", "EventType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Enquiries_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Enquiries_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Enquiries_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_Enquiries_Users", "User", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_Users1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Enquiries_Users1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Enquiries_Users1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_Enquiries_Users1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_Enquiries_Users1", "User", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EnquiryNotes_Enquiries", "EnquiryNote")]
        public EntityCollection<EnquiryNote> EnquiryNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EnquiryNote>("EventManagementSystemModel.FK_EnquiryNotes_Enquiries", "EnquiryNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EnquiryNote>("EventManagementSystemModel.FK_EnquiryNotes_Enquiries", "EnquiryNote", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EnquiryUpdates_EnquiryUpdates", "EnquiryUpdate")]
        public EntityCollection<EnquiryUpdate> EnquiryUpdates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EnquiryUpdate>("EventManagementSystemModel.FK_EnquiryUpdates_EnquiryUpdates", "EnquiryUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EnquiryUpdate>("EventManagementSystemModel.FK_EnquiryUpdates_EnquiryUpdates", "EnquiryUpdate", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Events_Enquiries", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("EventManagementSystemModel.FK_Events_Enquiries", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("EventManagementSystemModel.FK_Events_Enquiries", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_FollowUps_Enquiries", "FollowUp")]
        public EntityCollection<FollowUp> FollowUps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FollowUp>("EventManagementSystemModel.FK_FollowUps_Enquiries", "FollowUp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FollowUp>("EventManagementSystemModel.FK_FollowUps_Enquiries", "FollowUp", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EnquiryNote")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EnquiryNote : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EnquiryNote object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="enquiryID">Initial value of the EnquiryID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static EnquiryNote CreateEnquiryNote(global::System.Guid id, global::System.Guid enquiryID, global::System.DateTime date, global::System.String note, global::System.Guid userID)
        {
            EnquiryNote enquiryNote = new EnquiryNote();
            enquiryNote.ID = id;
            enquiryNote.EnquiryID = enquiryID;
            enquiryNote.Date = date;
            enquiryNote.Note = note;
            enquiryNote.UserID = userID;
            return enquiryNote;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EnquiryID
        {
            get
            {
                return _EnquiryID;
            }
            set
            {
                OnEnquiryIDChanging(value);
                ReportPropertyChanging("EnquiryID");
                _EnquiryID = StructuralObject.SetValidValue(value, "EnquiryID");
                ReportPropertyChanged("EnquiryID");
                OnEnquiryIDChanged();
            }
        }
        private global::System.Guid _EnquiryID;
        partial void OnEnquiryIDChanging(global::System.Guid value);
        partial void OnEnquiryIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EnquiryNotes_Enquiries", "Enquiry")]
        public Enquiry Enquiry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_EnquiryNotes_Enquiries", "Enquiry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_EnquiryNotes_Enquiries", "Enquiry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Enquiry> EnquiryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_EnquiryNotes_Enquiries", "Enquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Enquiry>("EventManagementSystemModel.FK_EnquiryNotes_Enquiries", "Enquiry", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EnquiryNotes_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EnquiryNotes_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EnquiryNotes_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EnquiryNotes_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_EnquiryNotes_Users", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EnquiryReceiveMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EnquiryReceiveMethod : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EnquiryReceiveMethod object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="receiveMethod">Initial value of the ReceiveMethod property.</param>
        public static EnquiryReceiveMethod CreateEnquiryReceiveMethod(global::System.Guid id, global::System.String receiveMethod)
        {
            EnquiryReceiveMethod enquiryReceiveMethod = new EnquiryReceiveMethod();
            enquiryReceiveMethod.ID = id;
            enquiryReceiveMethod.ReceiveMethod = receiveMethod;
            return enquiryReceiveMethod;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String ReceiveMethod
        {
            get
            {
                return _ReceiveMethod;
            }
            set
            {
                OnReceiveMethodChanging(value);
                ReportPropertyChanging("ReceiveMethod");
                _ReceiveMethod = StructuralObject.SetValidValue(value, false, "ReceiveMethod");
                ReportPropertyChanged("ReceiveMethod");
                OnReceiveMethodChanged();
            }
        }
        private global::System.String _ReceiveMethod;
        partial void OnReceiveMethodChanging(global::System.String value);
        partial void OnReceiveMethodChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_EnquiryReceiveMethods", "Enquiry")]
        public EntityCollection<Enquiry> Enquiries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_EnquiryReceiveMethods", "Enquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_EnquiryReceiveMethods", "Enquiry", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EnquiryStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EnquiryStatus : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EnquiryStatus object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        /// <param name="definedAsActive">Initial value of the DefinedAsActive property.</param>
        public static EnquiryStatus CreateEnquiryStatus(global::System.Guid id, global::System.String status, global::System.Boolean isEnabled, global::System.Boolean definedAsActive)
        {
            EnquiryStatus enquiryStatus = new EnquiryStatus();
            enquiryStatus.ID = id;
            enquiryStatus.Status = status;
            enquiryStatus.IsEnabled = isEnabled;
            enquiryStatus.DefinedAsActive = definedAsActive;
            return enquiryStatus;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value, "IsEnabled");
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private global::System.Boolean _IsEnabled;
        partial void OnIsEnabledChanging(global::System.Boolean value);
        partial void OnIsEnabledChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean DefinedAsActive
        {
            get
            {
                return _DefinedAsActive;
            }
            set
            {
                OnDefinedAsActiveChanging(value);
                ReportPropertyChanging("DefinedAsActive");
                _DefinedAsActive = StructuralObject.SetValidValue(value, "DefinedAsActive");
                ReportPropertyChanged("DefinedAsActive");
                OnDefinedAsActiveChanged();
            }
        }
        private global::System.Boolean _DefinedAsActive;
        partial void OnDefinedAsActiveChanging(global::System.Boolean value);
        partial void OnDefinedAsActiveChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_DefaultSettingsForEnquiries_EnquiryStatuses", "DefaultSettingsForEnquiry")]
        public EntityCollection<DefaultSettingsForEnquiry> DefaultSettingsForEnquiries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DefaultSettingsForEnquiry>("EventManagementSystemModel.FK_DefaultSettingsForEnquiries_EnquiryStatuses", "DefaultSettingsForEnquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DefaultSettingsForEnquiry>("EventManagementSystemModel.FK_DefaultSettingsForEnquiries_EnquiryStatuses", "DefaultSettingsForEnquiry", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_EnquiryStatuses", "Enquiry")]
        public EntityCollection<Enquiry> Enquiries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_EnquiryStatuses", "Enquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_EnquiryStatuses", "Enquiry", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EnquiryUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EnquiryUpdate : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EnquiryUpdate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="enquiryID">Initial value of the EnquiryID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static EnquiryUpdate CreateEnquiryUpdate(global::System.Guid id, global::System.Guid enquiryID, global::System.Guid userID, global::System.String message, global::System.DateTime date)
        {
            EnquiryUpdate enquiryUpdate = new EnquiryUpdate();
            enquiryUpdate.ID = id;
            enquiryUpdate.EnquiryID = enquiryID;
            enquiryUpdate.UserID = userID;
            enquiryUpdate.Message = message;
            enquiryUpdate.Date = date;
            return enquiryUpdate;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EnquiryID
        {
            get
            {
                return _EnquiryID;
            }
            set
            {
                OnEnquiryIDChanging(value);
                ReportPropertyChanging("EnquiryID");
                _EnquiryID = StructuralObject.SetValidValue(value, "EnquiryID");
                ReportPropertyChanged("EnquiryID");
                OnEnquiryIDChanged();
            }
        }
        private global::System.Guid _EnquiryID;
        partial void OnEnquiryIDChanging(global::System.Guid value);
        partial void OnEnquiryIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false, "Message");
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EnquiryUpdates_EnquiryUpdates", "Enquiry")]
        public Enquiry Enquiry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_EnquiryUpdates_EnquiryUpdates", "Enquiry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_EnquiryUpdates_EnquiryUpdates", "Enquiry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Enquiry> EnquiryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_EnquiryUpdates_EnquiryUpdates", "Enquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Enquiry>("EventManagementSystemModel.FK_EnquiryUpdates_EnquiryUpdates", "Enquiry", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EnquiryUpdates_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EnquiryUpdates_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EnquiryUpdates_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EnquiryUpdates_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_EnquiryUpdates_Users", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Event")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Event : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="places">Initial value of the Places property.</param>
        /// <param name="eventTypeID">Initial value of the EventTypeID property.</param>
        /// <param name="eventStatusID">Initial value of the EventStatusID property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="membersOnly">Initial value of the MembersOnly property.</param>
        /// <param name="showInForwardBook">Initial value of the ShowInForwardBook property.</param>
        /// <param name="showOnCalendar">Initial value of the ShowOnCalendar property.</param>
        /// <param name="usedAsTemplate">Initial value of the UsedAsTemplate property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Event CreateEvent(global::System.Guid id, global::System.String name, global::System.DateTime date, global::System.Int32 places, global::System.Guid eventTypeID, global::System.Guid eventStatusID, global::System.DateTime creationDate, global::System.Boolean membersOnly, global::System.Boolean showInForwardBook, global::System.Boolean showOnCalendar, global::System.Boolean usedAsTemplate, global::System.Boolean isDeleted)
        {
            Event @event = new Event();
            @event.ID = id;
            @event.Name = name;
            @event.Date = date;
            @event.Places = places;
            @event.EventTypeID = eventTypeID;
            @event.EventStatusID = eventStatusID;
            @event.CreationDate = creationDate;
            @event.MembersOnly = membersOnly;
            @event.ShowInForwardBook = showInForwardBook;
            @event.ShowOnCalendar = showOnCalendar;
            @event.UsedAsTemplate = usedAsTemplate;
            @event.IsDeleted = isDeleted;
            return @event;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Places
        {
            get
            {
                return _Places;
            }
            set
            {
                OnPlacesChanging(value);
                ReportPropertyChanging("Places");
                _Places = StructuralObject.SetValidValue(value, "Places");
                ReportPropertyChanged("Places");
                OnPlacesChanged();
            }
        }
        private global::System.Int32 _Places;
        partial void OnPlacesChanging(global::System.Int32 value);
        partial void OnPlacesChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ContactID;
        partial void OnContactIDChanging(Nullable<global::System.Guid> value);
        partial void OnContactIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventTypeID
        {
            get
            {
                return _EventTypeID;
            }
            set
            {
                OnEventTypeIDChanging(value);
                ReportPropertyChanging("EventTypeID");
                _EventTypeID = StructuralObject.SetValidValue(value, "EventTypeID");
                ReportPropertyChanged("EventTypeID");
                OnEventTypeIDChanged();
            }
        }
        private global::System.Guid _EventTypeID;
        partial void OnEventTypeIDChanging(global::System.Guid value);
        partial void OnEventTypeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventStatusID
        {
            get
            {
                return _EventStatusID;
            }
            set
            {
                OnEventStatusIDChanging(value);
                ReportPropertyChanging("EventStatusID");
                _EventStatusID = StructuralObject.SetValidValue(value, "EventStatusID");
                ReportPropertyChanged("EventStatusID");
                OnEventStatusIDChanged();
            }
        }
        private global::System.Guid _EventStatusID;
        partial void OnEventStatusIDChanging(global::System.Guid value);
        partial void OnEventStatusIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastEditDate
        {
            get
            {
                return _LastEditDate;
            }
            set
            {
                OnLastEditDateChanging(value);
                ReportPropertyChanging("LastEditDate");
                _LastEditDate = StructuralObject.SetValidValue(value, "LastEditDate");
                ReportPropertyChanged("LastEditDate");
                OnLastEditDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastEditDate;
        partial void OnLastEditDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastEditDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean MembersOnly
        {
            get
            {
                return _MembersOnly;
            }
            set
            {
                OnMembersOnlyChanging(value);
                ReportPropertyChanging("MembersOnly");
                _MembersOnly = StructuralObject.SetValidValue(value, "MembersOnly");
                ReportPropertyChanged("MembersOnly");
                OnMembersOnlyChanged();
            }
        }
        private global::System.Boolean _MembersOnly;
        partial void OnMembersOnlyChanging(global::System.Boolean value);
        partial void OnMembersOnlyChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowInForwardBook
        {
            get
            {
                return _ShowInForwardBook;
            }
            set
            {
                OnShowInForwardBookChanging(value);
                ReportPropertyChanging("ShowInForwardBook");
                _ShowInForwardBook = StructuralObject.SetValidValue(value, "ShowInForwardBook");
                ReportPropertyChanged("ShowInForwardBook");
                OnShowInForwardBookChanged();
            }
        }
        private global::System.Boolean _ShowInForwardBook;
        partial void OnShowInForwardBookChanging(global::System.Boolean value);
        partial void OnShowInForwardBookChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowOnCalendar
        {
            get
            {
                return _ShowOnCalendar;
            }
            set
            {
                OnShowOnCalendarChanging(value);
                ReportPropertyChanging("ShowOnCalendar");
                _ShowOnCalendar = StructuralObject.SetValidValue(value, "ShowOnCalendar");
                ReportPropertyChanged("ShowOnCalendar");
                OnShowOnCalendarChanged();
            }
        }
        private global::System.Boolean _ShowOnCalendar;
        partial void OnShowOnCalendarChanging(global::System.Boolean value);
        partial void OnShowOnCalendarChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean UsedAsTemplate
        {
            get
            {
                return _UsedAsTemplate;
            }
            set
            {
                OnUsedAsTemplateChanging(value);
                ReportPropertyChanging("UsedAsTemplate");
                _UsedAsTemplate = StructuralObject.SetValidValue(value, "UsedAsTemplate");
                ReportPropertyChanged("UsedAsTemplate");
                OnUsedAsTemplateChanged();
            }
        }
        private global::System.Boolean _UsedAsTemplate;
        partial void OnUsedAsTemplateChanging(global::System.Boolean value);
        partial void OnUsedAsTemplateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String InvoiceAddress
        {
            get
            {
                return _InvoiceAddress;
            }
            set
            {
                OnInvoiceAddressChanging(value);
                ReportPropertyChanging("InvoiceAddress");
                _InvoiceAddress = StructuralObject.SetValidValue(value, true, "InvoiceAddress");
                ReportPropertyChanged("InvoiceAddress");
                OnInvoiceAddressChanged();
            }
        }
        private global::System.String _InvoiceAddress;
        partial void OnInvoiceAddressChanging(global::System.String value);
        partial void OnInvoiceAddressChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceNumber
        {
            get
            {
                return _InvoiceNumber;
            }
            set
            {
                OnInvoiceNumberChanging(value);
                ReportPropertyChanging("InvoiceNumber");
                _InvoiceNumber = StructuralObject.SetValidValue(value, "InvoiceNumber");
                ReportPropertyChanged("InvoiceNumber");
                OnInvoiceNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceNumber;
        partial void OnInvoiceNumberChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceNumberChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastFunctionSheetPrint
        {
            get
            {
                return _LastFunctionSheetPrint;
            }
            set
            {
                OnLastFunctionSheetPrintChanging(value);
                ReportPropertyChanging("LastFunctionSheetPrint");
                _LastFunctionSheetPrint = StructuralObject.SetValidValue(value, "LastFunctionSheetPrint");
                ReportPropertyChanged("LastFunctionSheetPrint");
                OnLastFunctionSheetPrintChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastFunctionSheetPrint;
        partial void OnLastFunctionSheetPrintChanging(Nullable<global::System.DateTime> value);
        partial void OnLastFunctionSheetPrintChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EnquiryID
        {
            get
            {
                return _EnquiryID;
            }
            set
            {
                OnEnquiryIDChanging(value);
                ReportPropertyChanging("EnquiryID");
                _EnquiryID = StructuralObject.SetValidValue(value, "EnquiryID");
                ReportPropertyChanged("EnquiryID");
                OnEnquiryIDChanged();
            }
        }
        private Nullable<global::System.Guid> _EnquiryID;
        partial void OnEnquiryIDChanging(Nullable<global::System.Guid> value);
        partial void OnEnquiryIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, "StartTime");
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value, "EndTime");
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LockedUserID
        {
            get
            {
                return _LockedUserID;
            }
            set
            {
                OnLockedUserIDChanging(value);
                ReportPropertyChanging("LockedUserID");
                _LockedUserID = StructuralObject.SetValidValue(value, "LockedUserID");
                ReportPropertyChanged("LockedUserID");
                OnLockedUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _LockedUserID;
        partial void OnLockedUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnLockedUserIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Events_Contacts", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_Events_Contacts", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_Events_Contacts", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_Events_Contacts", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("EventManagementSystemModel.FK_Events_Contacts", "Contact", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Documents_Events", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("EventManagementSystemModel.FK_Documents_Events", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("EventManagementSystemModel.FK_Documents_Events", "Document", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Events_Enquiries", "Enquiry")]
        public Enquiry Enquiry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_Events_Enquiries", "Enquiry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_Events_Enquiries", "Enquiry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Enquiry> EnquiryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_Events_Enquiries", "Enquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Enquiry>("EventManagementSystemModel.FK_Events_Enquiries", "Enquiry", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventBookedProducts_Events", "EventBookedProduct")]
        public EntityCollection<EventBookedProduct> EventBookedProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventBookedProduct>("EventManagementSystemModel.FK_EventBookedProducts_Events", "EventBookedProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventBookedProduct>("EventManagementSystemModel.FK_EventBookedProducts_Events", "EventBookedProduct", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventCaterings_Events", "EventCatering")]
        public EntityCollection<EventCatering> EventCaterings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventCatering>("EventManagementSystemModel.FK_EventCaterings_Events", "EventCatering");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventCatering>("EventManagementSystemModel.FK_EventCaterings_Events", "EventCatering", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventCharges_Events", "EventCharge")]
        public EntityCollection<EventCharge> EventCharges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventCharge>("EventManagementSystemModel.FK_EventCharges_Events", "EventCharge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventCharge>("EventManagementSystemModel.FK_EventCharges_Events", "EventCharge", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventContacts_Events", "EventContact")]
        public EntityCollection<EventContact> EventContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventContact>("EventManagementSystemModel.FK_EventContacts_Events", "EventContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventContact>("EventManagementSystemModel.FK_EventContacts_Events", "EventContact", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventGolfs_Events", "EventGolf")]
        public EntityCollection<EventGolf> EventGolfs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventGolf>("EventManagementSystemModel.FK_EventGolfs_Events", "EventGolf");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventGolf>("EventManagementSystemModel.FK_EventGolfs_Events", "EventGolf", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventInvoices_Events", "EventInvoice")]
        public EntityCollection<EventInvoice> EventInvoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventInvoice>("EventManagementSystemModel.FK_EventInvoices_Events", "EventInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventInvoice>("EventManagementSystemModel.FK_EventInvoices_Events", "EventInvoice", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventNotes_Events", "EventNote")]
        public EntityCollection<EventNote> EventNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventNote>("EventManagementSystemModel.FK_EventNotes_Events", "EventNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventNote>("EventManagementSystemModel.FK_EventNotes_Events", "EventNote", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventPayments_Events", "EventPayment")]
        public EntityCollection<EventPayment> EventPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventPayment>("EventManagementSystemModel.FK_EventPayments_Events", "EventPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventPayment>("EventManagementSystemModel.FK_EventPayments_Events", "EventPayment", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventRooms_Events", "EventRoom")]
        public EntityCollection<EventRoom> EventRooms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventRoom>("EventManagementSystemModel.FK_EventRooms_Events", "EventRoom");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventRoom>("EventManagementSystemModel.FK_EventRooms_Events", "EventRoom", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Events_EventStatuses", "EventStatus")]
        public EventStatus EventStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventStatus>("EventManagementSystemModel.FK_Events_EventStatuses", "EventStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventStatus>("EventManagementSystemModel.FK_Events_EventStatuses", "EventStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventStatus> EventStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventStatus>("EventManagementSystemModel.FK_Events_EventStatuses", "EventStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventStatus>("EventManagementSystemModel.FK_Events_EventStatuses", "EventStatus", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Events_EventTypes", "EventType")]
        public EventType EventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_Events_EventTypes", "EventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_Events_EventTypes", "EventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventType> EventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_Events_EventTypes", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventType>("EventManagementSystemModel.FK_Events_EventTypes", "EventType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventUpdates_Events", "EventUpdate")]
        public EntityCollection<EventUpdate> EventUpdates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventUpdate>("EventManagementSystemModel.FK_EventUpdates_Events", "EventUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventUpdate>("EventManagementSystemModel.FK_EventUpdates_Events", "EventUpdate", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Invoices_Events", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("EventManagementSystemModel.FK_Invoices_Events", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("EventManagementSystemModel.FK_Invoices_Events", "Invoice", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Reports_Events", "Report")]
        public EntityCollection<Report> Reports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Report>("EventManagementSystemModel.FK_Reports_Events", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Report>("EventManagementSystemModel.FK_Reports_Events", "Report", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventReminders_Events", "EventReminder")]
        public EntityCollection<EventReminder> EventReminders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventReminder>("EventManagementSystemModel.FK_EventReminders_Events", "EventReminder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventReminder>("EventManagementSystemModel.FK_EventReminders_Events", "EventReminder", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventBookedProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventBookedProduct : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventBookedProduct object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="eventBookingItemID">Initial value of the EventBookingItemID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static EventBookedProduct CreateEventBookedProduct(global::System.Guid id, global::System.Guid eventID, global::System.Guid productID, global::System.Guid eventBookingItemID, global::System.Int32 quantity, global::System.Double price)
        {
            EventBookedProduct eventBookedProduct = new EventBookedProduct();
            eventBookedProduct.ID = id;
            eventBookedProduct.EventID = eventID;
            eventBookedProduct.ProductID = productID;
            eventBookedProduct.EventBookingItemID = eventBookingItemID;
            eventBookedProduct.Quantity = quantity;
            eventBookedProduct.Price = price;
            return eventBookedProduct;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Guid _EventID;
        partial void OnEventIDChanging(global::System.Guid value);
        partial void OnEventIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Guid _ProductID;
        partial void OnProductIDChanging(global::System.Guid value);
        partial void OnProductIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventBookingItemID
        {
            get
            {
                return _EventBookingItemID;
            }
            set
            {
                OnEventBookingItemIDChanging(value);
                ReportPropertyChanging("EventBookingItemID");
                _EventBookingItemID = StructuralObject.SetValidValue(value, "EventBookingItemID");
                ReportPropertyChanged("EventBookingItemID");
                OnEventBookingItemIDChanged();
            }
        }
        private global::System.Guid _EventBookingItemID;
        partial void OnEventBookingItemIDChanging(global::System.Guid value);
        partial void OnEventBookingItemIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventBookedProducts_EventCharges", "EventCharge")]
        public EventCharge EventCharge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventCharge>("EventManagementSystemModel.FK_EventBookedProducts_EventCharges", "EventCharge").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventCharge>("EventManagementSystemModel.FK_EventBookedProducts_EventCharges", "EventCharge").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventCharge> EventChargeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventCharge>("EventManagementSystemModel.FK_EventBookedProducts_EventCharges", "EventCharge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventCharge>("EventManagementSystemModel.FK_EventBookedProducts_EventCharges", "EventCharge", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventBookedProducts_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventBookedProducts_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventBookedProducts_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventBookedProducts_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_EventBookedProducts_Events", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventBookedProducts_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_EventBookedProducts_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_EventBookedProducts_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_EventBookedProducts_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_EventBookedProducts_Products", "Product", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventCatering")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventCatering : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventCatering object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="roomID">Initial value of the RoomID property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="showInInvoice">Initial value of the ShowInInvoice property.</param>
        /// <param name="includeInForwardBook">Initial value of the IncludeInForwardBook property.</param>
        /// <param name="includeInCorrespondence">Initial value of the IncludeInCorrespondence property.</param>
        /// <param name="isSpecial">Initial value of the IsSpecial property.</param>
        public static EventCatering CreateEventCatering(global::System.Guid id, global::System.Guid eventID, global::System.DateTime time, global::System.Guid roomID, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Boolean showInInvoice, global::System.Boolean includeInForwardBook, global::System.Boolean includeInCorrespondence, global::System.Boolean isSpecial)
        {
            EventCatering eventCatering = new EventCatering();
            eventCatering.ID = id;
            eventCatering.EventID = eventID;
            eventCatering.Time = time;
            eventCatering.RoomID = roomID;
            eventCatering.StartTime = startTime;
            eventCatering.EndTime = endTime;
            eventCatering.ShowInInvoice = showInInvoice;
            eventCatering.IncludeInForwardBook = includeInForwardBook;
            eventCatering.IncludeInCorrespondence = includeInCorrespondence;
            eventCatering.IsSpecial = isSpecial;
            return eventCatering;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Guid _EventID;
        partial void OnEventIDChanging(global::System.Guid value);
        partial void OnEventIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, "Time");
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value, "RoomID");
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private global::System.Guid _RoomID;
        partial void OnRoomIDChanging(global::System.Guid value);
        partial void OnRoomIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, "StartTime");
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value, "EndTime");
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowInInvoice
        {
            get
            {
                return _ShowInInvoice;
            }
            set
            {
                OnShowInInvoiceChanging(value);
                ReportPropertyChanging("ShowInInvoice");
                _ShowInInvoice = StructuralObject.SetValidValue(value, "ShowInInvoice");
                ReportPropertyChanged("ShowInInvoice");
                OnShowInInvoiceChanged();
            }
        }
        private global::System.Boolean _ShowInInvoice;
        partial void OnShowInInvoiceChanging(global::System.Boolean value);
        partial void OnShowInInvoiceChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncludeInForwardBook
        {
            get
            {
                return _IncludeInForwardBook;
            }
            set
            {
                OnIncludeInForwardBookChanging(value);
                ReportPropertyChanging("IncludeInForwardBook");
                _IncludeInForwardBook = StructuralObject.SetValidValue(value, "IncludeInForwardBook");
                ReportPropertyChanged("IncludeInForwardBook");
                OnIncludeInForwardBookChanged();
            }
        }
        private global::System.Boolean _IncludeInForwardBook;
        partial void OnIncludeInForwardBookChanging(global::System.Boolean value);
        partial void OnIncludeInForwardBookChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncludeInCorrespondence
        {
            get
            {
                return _IncludeInCorrespondence;
            }
            set
            {
                OnIncludeInCorrespondenceChanging(value);
                ReportPropertyChanging("IncludeInCorrespondence");
                _IncludeInCorrespondence = StructuralObject.SetValidValue(value, "IncludeInCorrespondence");
                ReportPropertyChanged("IncludeInCorrespondence");
                OnIncludeInCorrespondenceChanged();
            }
        }
        private global::System.Boolean _IncludeInCorrespondence;
        partial void OnIncludeInCorrespondenceChanging(global::System.Boolean value);
        partial void OnIncludeInCorrespondenceChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSpecial
        {
            get
            {
                return _IsSpecial;
            }
            set
            {
                OnIsSpecialChanging(value);
                ReportPropertyChanging("IsSpecial");
                _IsSpecial = StructuralObject.SetValidValue(value, "IsSpecial");
                ReportPropertyChanged("IsSpecial");
                OnIsSpecialChanged();
            }
        }
        private global::System.Boolean _IsSpecial;
        partial void OnIsSpecialChanging(global::System.Boolean value);
        partial void OnIsSpecialChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventCaterings_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventCaterings_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventCaterings_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventCaterings_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_EventCaterings_Events", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventCaterings_Rooms", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("EventManagementSystemModel.FK_EventCaterings_Rooms", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("EventManagementSystemModel.FK_EventCaterings_Rooms", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("EventManagementSystemModel.FK_EventCaterings_Rooms", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("EventManagementSystemModel.FK_EventCaterings_Rooms", "Room", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventCharge")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventCharge : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventCharge object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="isCommited">Initial value of the IsCommited property.</param>
        /// <param name="showInInvoice">Initial value of the ShowInInvoice property.</param>
        public static EventCharge CreateEventCharge(global::System.Guid id, global::System.Guid eventID, global::System.Guid productID, global::System.Int32 quantity, global::System.Double price, global::System.Boolean isCommited, global::System.Boolean showInInvoice)
        {
            EventCharge eventCharge = new EventCharge();
            eventCharge.ID = id;
            eventCharge.EventID = eventID;
            eventCharge.ProductID = productID;
            eventCharge.Quantity = quantity;
            eventCharge.Price = price;
            eventCharge.IsCommited = isCommited;
            eventCharge.ShowInInvoice = showInInvoice;
            return eventCharge;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Guid _EventID;
        partial void OnEventIDChanging(global::System.Guid value);
        partial void OnEventIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Guid _ProductID;
        partial void OnProductIDChanging(global::System.Guid value);
        partial void OnProductIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCommited
        {
            get
            {
                return _IsCommited;
            }
            set
            {
                OnIsCommitedChanging(value);
                ReportPropertyChanging("IsCommited");
                _IsCommited = StructuralObject.SetValidValue(value, "IsCommited");
                ReportPropertyChanged("IsCommited");
                OnIsCommitedChanged();
            }
        }
        private global::System.Boolean _IsCommited;
        partial void OnIsCommitedChanging(global::System.Boolean value);
        partial void OnIsCommitedChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowInInvoice
        {
            get
            {
                return _ShowInInvoice;
            }
            set
            {
                OnShowInInvoiceChanging(value);
                ReportPropertyChanging("ShowInInvoice");
                _ShowInInvoice = StructuralObject.SetValidValue(value, "ShowInInvoice");
                ReportPropertyChanged("ShowInInvoice");
                OnShowInInvoiceChanged();
            }
        }
        private global::System.Boolean _ShowInInvoice;
        partial void OnShowInInvoiceChanging(global::System.Boolean value);
        partial void OnShowInInvoiceChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventBookedProducts_EventCharges", "EventBookedProduct")]
        public EventBookedProduct EventBookedProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventBookedProduct>("EventManagementSystemModel.FK_EventBookedProducts_EventCharges", "EventBookedProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventBookedProduct>("EventManagementSystemModel.FK_EventBookedProducts_EventCharges", "EventBookedProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventBookedProduct> EventBookedProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventBookedProduct>("EventManagementSystemModel.FK_EventBookedProducts_EventCharges", "EventBookedProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventBookedProduct>("EventManagementSystemModel.FK_EventBookedProducts_EventCharges", "EventBookedProduct", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventCharges_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventCharges_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventCharges_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventCharges_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_EventCharges_Events", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventCharges_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_EventCharges_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_EventCharges_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_EventCharges_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_EventCharges_Products", "Product", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventContact")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventContact : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventContact object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        public static EventContact CreateEventContact(global::System.Guid id, global::System.Guid eventID, global::System.Guid contactID)
        {
            EventContact eventContact = new EventContact();
            eventContact.ID = id;
            eventContact.EventID = eventID;
            eventContact.ContactID = contactID;
            return eventContact;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Guid _EventID;
        partial void OnEventIDChanging(global::System.Guid value);
        partial void OnEventIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private global::System.Guid _ContactID;
        partial void OnContactIDChanging(global::System.Guid value);
        partial void OnContactIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventContacts_Contacts", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_EventContacts_Contacts", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_EventContacts_Contacts", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_EventContacts_Contacts", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("EventManagementSystemModel.FK_EventContacts_Contacts", "Contact", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventContacts_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventContacts_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventContacts_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventContacts_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_EventContacts_Events", "Event", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventGolf")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventGolf : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventGolf object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="teeID">Initial value of the TeeID property.</param>
        /// <param name="holeID">Initial value of the HoleID property.</param>
        /// <param name="slots">Initial value of the Slots property.</param>
        /// <param name="showInInvoice">Initial value of the ShowInInvoice property.</param>
        /// <param name="includeInForwardBook">Initial value of the IncludeInForwardBook property.</param>
        /// <param name="includeInCorrespondence">Initial value of the IncludeInCorrespondence property.</param>
        /// <param name="isLinked">Initial value of the IsLinked property.</param>
        public static EventGolf CreateEventGolf(global::System.Guid id, global::System.Guid eventID, global::System.DateTime time, global::System.Guid teeID, global::System.Guid holeID, global::System.Int32 slots, global::System.Boolean showInInvoice, global::System.Boolean includeInForwardBook, global::System.Boolean includeInCorrespondence, global::System.Boolean isLinked)
        {
            EventGolf eventGolf = new EventGolf();
            eventGolf.ID = id;
            eventGolf.EventID = eventID;
            eventGolf.Time = time;
            eventGolf.TeeID = teeID;
            eventGolf.HoleID = holeID;
            eventGolf.Slots = slots;
            eventGolf.ShowInInvoice = showInInvoice;
            eventGolf.IncludeInForwardBook = includeInForwardBook;
            eventGolf.IncludeInCorrespondence = includeInCorrespondence;
            eventGolf.IsLinked = isLinked;
            return eventGolf;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Guid _EventID;
        partial void OnEventIDChanging(global::System.Guid value);
        partial void OnEventIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, "Time");
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TeeID
        {
            get
            {
                return _TeeID;
            }
            set
            {
                OnTeeIDChanging(value);
                ReportPropertyChanging("TeeID");
                _TeeID = StructuralObject.SetValidValue(value, "TeeID");
                ReportPropertyChanged("TeeID");
                OnTeeIDChanged();
            }
        }
        private global::System.Guid _TeeID;
        partial void OnTeeIDChanging(global::System.Guid value);
        partial void OnTeeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid HoleID
        {
            get
            {
                return _HoleID;
            }
            set
            {
                OnHoleIDChanging(value);
                ReportPropertyChanging("HoleID");
                _HoleID = StructuralObject.SetValidValue(value, "HoleID");
                ReportPropertyChanged("HoleID");
                OnHoleIDChanged();
            }
        }
        private global::System.Guid _HoleID;
        partial void OnHoleIDChanging(global::System.Guid value);
        partial void OnHoleIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Slots
        {
            get
            {
                return _Slots;
            }
            set
            {
                OnSlotsChanging(value);
                ReportPropertyChanging("Slots");
                _Slots = StructuralObject.SetValidValue(value, "Slots");
                ReportPropertyChanged("Slots");
                OnSlotsChanged();
            }
        }
        private global::System.Int32 _Slots;
        partial void OnSlotsChanging(global::System.Int32 value);
        partial void OnSlotsChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowInInvoice
        {
            get
            {
                return _ShowInInvoice;
            }
            set
            {
                OnShowInInvoiceChanging(value);
                ReportPropertyChanging("ShowInInvoice");
                _ShowInInvoice = StructuralObject.SetValidValue(value, "ShowInInvoice");
                ReportPropertyChanged("ShowInInvoice");
                OnShowInInvoiceChanged();
            }
        }
        private global::System.Boolean _ShowInInvoice;
        partial void OnShowInInvoiceChanging(global::System.Boolean value);
        partial void OnShowInInvoiceChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncludeInForwardBook
        {
            get
            {
                return _IncludeInForwardBook;
            }
            set
            {
                OnIncludeInForwardBookChanging(value);
                ReportPropertyChanging("IncludeInForwardBook");
                _IncludeInForwardBook = StructuralObject.SetValidValue(value, "IncludeInForwardBook");
                ReportPropertyChanged("IncludeInForwardBook");
                OnIncludeInForwardBookChanged();
            }
        }
        private global::System.Boolean _IncludeInForwardBook;
        partial void OnIncludeInForwardBookChanging(global::System.Boolean value);
        partial void OnIncludeInForwardBookChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncludeInCorrespondence
        {
            get
            {
                return _IncludeInCorrespondence;
            }
            set
            {
                OnIncludeInCorrespondenceChanging(value);
                ReportPropertyChanging("IncludeInCorrespondence");
                _IncludeInCorrespondence = StructuralObject.SetValidValue(value, "IncludeInCorrespondence");
                ReportPropertyChanged("IncludeInCorrespondence");
                OnIncludeInCorrespondenceChanged();
            }
        }
        private global::System.Boolean _IncludeInCorrespondence;
        partial void OnIncludeInCorrespondenceChanging(global::System.Boolean value);
        partial void OnIncludeInCorrespondenceChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LinkedEventGolfId
        {
            get
            {
                return _LinkedEventGolfId;
            }
            set
            {
                OnLinkedEventGolfIdChanging(value);
                ReportPropertyChanging("LinkedEventGolfId");
                _LinkedEventGolfId = StructuralObject.SetValidValue(value, "LinkedEventGolfId");
                ReportPropertyChanged("LinkedEventGolfId");
                OnLinkedEventGolfIdChanged();
            }
        }
        private Nullable<global::System.Guid> _LinkedEventGolfId;
        partial void OnLinkedEventGolfIdChanging(Nullable<global::System.Guid> value);
        partial void OnLinkedEventGolfIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLinked
        {
            get
            {
                return _IsLinked;
            }
            set
            {
                OnIsLinkedChanging(value);
                ReportPropertyChanging("IsLinked");
                _IsLinked = StructuralObject.SetValidValue(value, "IsLinked");
                ReportPropertyChanged("IsLinked");
                OnIsLinkedChanged();
            }
        }
        private global::System.Boolean _IsLinked;
        partial void OnIsLinkedChanging(global::System.Boolean value);
        partial void OnIsLinkedChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventGolfs_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventGolfs_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventGolfs_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventGolfs_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_EventGolfs_Events", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventGolfs_GolfHoles", "GolfHole")]
        public GolfHole GolfHole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GolfHole>("EventManagementSystemModel.FK_EventGolfs_GolfHoles", "GolfHole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GolfHole>("EventManagementSystemModel.FK_EventGolfs_GolfHoles", "GolfHole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GolfHole> GolfHoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GolfHole>("EventManagementSystemModel.FK_EventGolfs_GolfHoles", "GolfHole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GolfHole>("EventManagementSystemModel.FK_EventGolfs_GolfHoles", "GolfHole", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventGolfs_Golfs", "Golf")]
        public Golf Golf
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Golf>("EventManagementSystemModel.FK_EventGolfs_Golfs", "Golf").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Golf>("EventManagementSystemModel.FK_EventGolfs_Golfs", "Golf").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Golf> GolfReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Golf>("EventManagementSystemModel.FK_EventGolfs_Golfs", "Golf");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Golf>("EventManagementSystemModel.FK_EventGolfs_Golfs", "Golf", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_LinkedEventGolfsID_EventGolfs", "EventGolf1")]
        public EntityCollection<EventGolf> EventGolfs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventGolf>("EventManagementSystemModel.FK_LinkedEventGolfsID_EventGolfs", "EventGolf1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventGolf>("EventManagementSystemModel.FK_LinkedEventGolfsID_EventGolfs", "EventGolf1", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_LinkedEventGolfsID_EventGolfs", "EventGolf")]
        public EventGolf EventGolf1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventGolf>("EventManagementSystemModel.FK_LinkedEventGolfsID_EventGolfs", "EventGolf").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventGolf>("EventManagementSystemModel.FK_LinkedEventGolfsID_EventGolfs", "EventGolf").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventGolf> EventGolf1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventGolf>("EventManagementSystemModel.FK_LinkedEventGolfsID_EventGolfs", "EventGolf");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventGolf>("EventManagementSystemModel.FK_LinkedEventGolfsID_EventGolfs", "EventGolf", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventInvoice")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventInvoice : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventInvoice object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="showInInvoice">Initial value of the ShowInInvoice property.</param>
        /// <param name="includeInForwardBook">Initial value of the IncludeInForwardBook property.</param>
        /// <param name="includeInCorrespondence">Initial value of the IncludeInCorrespondence property.</param>
        public static EventInvoice CreateEventInvoice(global::System.Guid id, global::System.Guid eventID, global::System.Boolean showInInvoice, global::System.Boolean includeInForwardBook, global::System.Boolean includeInCorrespondence)
        {
            EventInvoice eventInvoice = new EventInvoice();
            eventInvoice.ID = id;
            eventInvoice.EventID = eventID;
            eventInvoice.ShowInInvoice = showInInvoice;
            eventInvoice.IncludeInForwardBook = includeInForwardBook;
            eventInvoice.IncludeInCorrespondence = includeInCorrespondence;
            return eventInvoice;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Guid _EventID;
        partial void OnEventIDChanging(global::System.Guid value);
        partial void OnEventIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowInInvoice
        {
            get
            {
                return _ShowInInvoice;
            }
            set
            {
                OnShowInInvoiceChanging(value);
                ReportPropertyChanging("ShowInInvoice");
                _ShowInInvoice = StructuralObject.SetValidValue(value, "ShowInInvoice");
                ReportPropertyChanged("ShowInInvoice");
                OnShowInInvoiceChanged();
            }
        }
        private global::System.Boolean _ShowInInvoice;
        partial void OnShowInInvoiceChanging(global::System.Boolean value);
        partial void OnShowInInvoiceChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncludeInForwardBook
        {
            get
            {
                return _IncludeInForwardBook;
            }
            set
            {
                OnIncludeInForwardBookChanging(value);
                ReportPropertyChanging("IncludeInForwardBook");
                _IncludeInForwardBook = StructuralObject.SetValidValue(value, "IncludeInForwardBook");
                ReportPropertyChanged("IncludeInForwardBook");
                OnIncludeInForwardBookChanged();
            }
        }
        private global::System.Boolean _IncludeInForwardBook;
        partial void OnIncludeInForwardBookChanging(global::System.Boolean value);
        partial void OnIncludeInForwardBookChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncludeInCorrespondence
        {
            get
            {
                return _IncludeInCorrespondence;
            }
            set
            {
                OnIncludeInCorrespondenceChanging(value);
                ReportPropertyChanging("IncludeInCorrespondence");
                _IncludeInCorrespondence = StructuralObject.SetValidValue(value, "IncludeInCorrespondence");
                ReportPropertyChanged("IncludeInCorrespondence");
                OnIncludeInCorrespondenceChanged();
            }
        }
        private global::System.Boolean _IncludeInCorrespondence;
        partial void OnIncludeInCorrespondenceChanging(global::System.Boolean value);
        partial void OnIncludeInCorrespondenceChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventInvoices_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventInvoices_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventInvoices_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventInvoices_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_EventInvoices_Events", "Event", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventNote")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventNote : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventNote object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="eventNoteTypeID">Initial value of the EventNoteTypeID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static EventNote CreateEventNote(global::System.Guid id, global::System.Guid eventID, global::System.Guid eventNoteTypeID, global::System.DateTime date, global::System.String note, global::System.Guid userID)
        {
            EventNote eventNote = new EventNote();
            eventNote.ID = id;
            eventNote.EventID = eventID;
            eventNote.EventNoteTypeID = eventNoteTypeID;
            eventNote.Date = date;
            eventNote.Note = note;
            eventNote.UserID = userID;
            return eventNote;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Guid _EventID;
        partial void OnEventIDChanging(global::System.Guid value);
        partial void OnEventIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventNoteTypeID
        {
            get
            {
                return _EventNoteTypeID;
            }
            set
            {
                OnEventNoteTypeIDChanging(value);
                ReportPropertyChanging("EventNoteTypeID");
                _EventNoteTypeID = StructuralObject.SetValidValue(value, "EventNoteTypeID");
                ReportPropertyChanged("EventNoteTypeID");
                OnEventNoteTypeIDChanged();
            }
        }
        private global::System.Guid _EventNoteTypeID;
        partial void OnEventNoteTypeIDChanging(global::System.Guid value);
        partial void OnEventNoteTypeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventNotes_EventNoteTypes", "EventNoteType")]
        public EventNoteType EventNoteType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventNoteType>("EventManagementSystemModel.FK_EventNotes_EventNoteTypes", "EventNoteType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventNoteType>("EventManagementSystemModel.FK_EventNotes_EventNoteTypes", "EventNoteType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventNoteType> EventNoteTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventNoteType>("EventManagementSystemModel.FK_EventNotes_EventNoteTypes", "EventNoteType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventNoteType>("EventManagementSystemModel.FK_EventNotes_EventNoteTypes", "EventNoteType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventNotes_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventNotes_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventNotes_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventNotes_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_EventNotes_Events", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventNotes_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventNotes_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventNotes_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventNotes_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_EventNotes_Users", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventNoteType")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventNoteType : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventNoteType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static EventNoteType CreateEventNoteType(global::System.Guid id, global::System.String type)
        {
            EventNoteType eventNoteType = new EventNoteType();
            eventNoteType.ID = id;
            eventNoteType.Type = type;
            return eventNoteType;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventNotes_EventNoteTypes", "EventNote")]
        public EntityCollection<EventNote> EventNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventNote>("EventManagementSystemModel.FK_EventNotes_EventNoteTypes", "EventNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventNote>("EventManagementSystemModel.FK_EventNotes_EventNoteTypes", "EventNote", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventOption")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventOption : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventOption object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static EventOption CreateEventOption(global::System.Guid id, global::System.String name, global::System.String description)
        {
            EventOption eventOption = new EventOption();
            eventOption.ID = id;
            eventOption.Name = name;
            eventOption.Description = description;
            return eventOption;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventStatusOptions_EventOptions", "EventStatusOption")]
        public EntityCollection<EventStatusOption> EventStatusOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventStatusOption>("EventManagementSystemModel.FK_EventStatusOptions_EventOptions", "EventStatusOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventStatusOption>("EventManagementSystemModel.FK_EventStatusOptions_EventOptions", "EventStatusOption", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventTypeOptions_EventOptions1", "EventTypeOption")]
        public EntityCollection<EventTypeOption> EventTypeOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventTypeOption>("EventManagementSystemModel.FK_EventTypeOptions_EventOptions1", "EventTypeOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventTypeOption>("EventManagementSystemModel.FK_EventTypeOptions_EventOptions1", "EventTypeOption", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventPayment : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventPayment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="takenByID">Initial value of the TakenByID property.</param>
        /// <param name="methodID">Initial value of the MethodID property.</param>
        /// <param name="cameFrom">Initial value of the CameFrom property.</param>
        /// <param name="isDeposit">Initial value of the IsDeposit property.</param>
        public static EventPayment CreateEventPayment(global::System.Guid id, global::System.Guid eventID, global::System.DateTime date, global::System.Double amount, global::System.Guid takenByID, global::System.Guid methodID, global::System.String cameFrom, global::System.Boolean isDeposit)
        {
            EventPayment eventPayment = new EventPayment();
            eventPayment.ID = id;
            eventPayment.EventID = eventID;
            eventPayment.Date = date;
            eventPayment.Amount = amount;
            eventPayment.TakenByID = takenByID;
            eventPayment.MethodID = methodID;
            eventPayment.CameFrom = cameFrom;
            eventPayment.IsDeposit = isDeposit;
            return eventPayment;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Guid _EventID;
        partial void OnEventIDChanging(global::System.Guid value);
        partial void OnEventIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TakenByID
        {
            get
            {
                return _TakenByID;
            }
            set
            {
                OnTakenByIDChanging(value);
                ReportPropertyChanging("TakenByID");
                _TakenByID = StructuralObject.SetValidValue(value, "TakenByID");
                ReportPropertyChanged("TakenByID");
                OnTakenByIDChanged();
            }
        }
        private global::System.Guid _TakenByID;
        partial void OnTakenByIDChanging(global::System.Guid value);
        partial void OnTakenByIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid MethodID
        {
            get
            {
                return _MethodID;
            }
            set
            {
                OnMethodIDChanging(value);
                ReportPropertyChanging("MethodID");
                _MethodID = StructuralObject.SetValidValue(value, "MethodID");
                ReportPropertyChanged("MethodID");
                OnMethodIDChanged();
            }
        }
        private global::System.Guid _MethodID;
        partial void OnMethodIDChanging(global::System.Guid value);
        partial void OnMethodIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String CameFrom
        {
            get
            {
                return _CameFrom;
            }
            set
            {
                OnCameFromChanging(value);
                ReportPropertyChanging("CameFrom");
                _CameFrom = StructuralObject.SetValidValue(value, false, "CameFrom");
                ReportPropertyChanged("CameFrom");
                OnCameFromChanged();
            }
        }
        private global::System.String _CameFrom;
        partial void OnCameFromChanging(global::System.String value);
        partial void OnCameFromChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeposit
        {
            get
            {
                return _IsDeposit;
            }
            set
            {
                OnIsDepositChanging(value);
                ReportPropertyChanging("IsDeposit");
                _IsDeposit = StructuralObject.SetValidValue(value, "IsDeposit");
                ReportPropertyChanged("IsDeposit");
                OnIsDepositChanged();
            }
        }
        private global::System.Boolean _IsDeposit;
        partial void OnIsDepositChanging(global::System.Boolean value);
        partial void OnIsDepositChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventPayments_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventPayments_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventPayments_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventPayments_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_EventPayments_Events", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventPayments_PaymentMethods1", "PaymentMethod")]
        public PaymentMethod PaymentMethod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("EventManagementSystemModel.FK_EventPayments_PaymentMethods1", "PaymentMethod").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("EventManagementSystemModel.FK_EventPayments_PaymentMethods1", "PaymentMethod").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PaymentMethod> PaymentMethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PaymentMethod>("EventManagementSystemModel.FK_EventPayments_PaymentMethods1", "PaymentMethod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PaymentMethod>("EventManagementSystemModel.FK_EventPayments_PaymentMethods1", "PaymentMethod", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventPayments_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventPayments_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventPayments_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventPayments_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_EventPayments_Users", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventReminder")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventReminder : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventReminder object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="createdByUserID">Initial value of the CreatedByUserID property.</param>
        /// <param name="assignedToUserID">Initial value of the AssignedToUserID property.</param>
        /// <param name="whatToDo">Initial value of the WhatToDo property.</param>
        /// <param name="dateDue">Initial value of the DateDue property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static EventReminder CreateEventReminder(global::System.Guid id, global::System.Guid createdByUserID, global::System.Guid assignedToUserID, global::System.String whatToDo, global::System.DateTime dateDue, global::System.Boolean status)
        {
            EventReminder eventReminder = new EventReminder();
            eventReminder.ID = id;
            eventReminder.CreatedByUserID = createdByUserID;
            eventReminder.AssignedToUserID = assignedToUserID;
            eventReminder.WhatToDo = whatToDo;
            eventReminder.DateDue = dateDue;
            eventReminder.Status = status;
            return eventReminder;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private Nullable<global::System.Guid> _EventID;
        partial void OnEventIDChanging(Nullable<global::System.Guid> value);
        partial void OnEventIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid CreatedByUserID
        {
            get
            {
                return _CreatedByUserID;
            }
            set
            {
                OnCreatedByUserIDChanging(value);
                ReportPropertyChanging("CreatedByUserID");
                _CreatedByUserID = StructuralObject.SetValidValue(value, "CreatedByUserID");
                ReportPropertyChanged("CreatedByUserID");
                OnCreatedByUserIDChanged();
            }
        }
        private global::System.Guid _CreatedByUserID;
        partial void OnCreatedByUserIDChanging(global::System.Guid value);
        partial void OnCreatedByUserIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid AssignedToUserID
        {
            get
            {
                return _AssignedToUserID;
            }
            set
            {
                OnAssignedToUserIDChanging(value);
                ReportPropertyChanging("AssignedToUserID");
                _AssignedToUserID = StructuralObject.SetValidValue(value, "AssignedToUserID");
                ReportPropertyChanged("AssignedToUserID");
                OnAssignedToUserIDChanged();
            }
        }
        private global::System.Guid _AssignedToUserID;
        partial void OnAssignedToUserIDChanging(global::System.Guid value);
        partial void OnAssignedToUserIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String WhatToDo
        {
            get
            {
                return _WhatToDo;
            }
            set
            {
                OnWhatToDoChanging(value);
                ReportPropertyChanging("WhatToDo");
                _WhatToDo = StructuralObject.SetValidValue(value, false, "WhatToDo");
                ReportPropertyChanged("WhatToDo");
                OnWhatToDoChanged();
            }
        }
        private global::System.String _WhatToDo;
        partial void OnWhatToDoChanging(global::System.String value);
        partial void OnWhatToDoChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateDue
        {
            get
            {
                return _DateDue;
            }
            set
            {
                OnDateDueChanging(value);
                ReportPropertyChanging("DateDue");
                _DateDue = StructuralObject.SetValidValue(value, "DateDue");
                ReportPropertyChanged("DateDue");
                OnDateDueChanged();
            }
        }
        private global::System.DateTime _DateDue;
        partial void OnDateDueChanging(global::System.DateTime value);
        partial void OnDateDueChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastEditDate
        {
            get
            {
                return _LastEditDate;
            }
            set
            {
                OnLastEditDateChanging(value);
                ReportPropertyChanging("LastEditDate");
                _LastEditDate = StructuralObject.SetValidValue(value, "LastEditDate");
                ReportPropertyChanged("LastEditDate");
                OnLastEditDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastEditDate;
        partial void OnLastEditDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastEditDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EventTypeToDoID
        {
            get
            {
                return _EventTypeToDoID;
            }
            set
            {
                OnEventTypeToDoIDChanging(value);
                ReportPropertyChanging("EventTypeToDoID");
                _EventTypeToDoID = StructuralObject.SetValidValue(value, "EventTypeToDoID");
                ReportPropertyChanged("EventTypeToDoID");
                OnEventTypeToDoIDChanged();
            }
        }
        private Nullable<global::System.Guid> _EventTypeToDoID;
        partial void OnEventTypeToDoIDChanging(Nullable<global::System.Guid> value);
        partial void OnEventTypeToDoIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventReminders_AssignedToUsers", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventReminders_AssignedToUsers", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventReminders_AssignedToUsers", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventReminders_AssignedToUsers", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_EventReminders_AssignedToUsers", "User", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventReminders_CreatedByUsers", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventReminders_CreatedByUsers", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventReminders_CreatedByUsers", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventReminders_CreatedByUsers", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_EventReminders_CreatedByUsers", "User", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventReminders_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventReminders_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventReminders_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventReminders_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_EventReminders_Events", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventReminders_EventTypeToDo", "EventTypeTODO")]
        public EventTypeTODO EventTypeTODO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypeTODO>("EventManagementSystemModel.FK_EventReminders_EventTypeToDo", "EventTypeTODO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypeTODO>("EventManagementSystemModel.FK_EventReminders_EventTypeToDo", "EventTypeTODO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventTypeTODO> EventTypeTODOReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypeTODO>("EventManagementSystemModel.FK_EventReminders_EventTypeToDo", "EventTypeTODO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventTypeTODO>("EventManagementSystemModel.FK_EventReminders_EventTypeToDo", "EventTypeTODO", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventRoom")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventRoom : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventRoom object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="roomID">Initial value of the RoomID property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="showInInvoice">Initial value of the ShowInInvoice property.</param>
        /// <param name="includeInForwardBook">Initial value of the IncludeInForwardBook property.</param>
        /// <param name="includeInCorrespondence">Initial value of the IncludeInCorrespondence property.</param>
        public static EventRoom CreateEventRoom(global::System.Guid id, global::System.Guid eventID, global::System.Guid roomID, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Boolean showInInvoice, global::System.Boolean includeInForwardBook, global::System.Boolean includeInCorrespondence)
        {
            EventRoom eventRoom = new EventRoom();
            eventRoom.ID = id;
            eventRoom.EventID = eventID;
            eventRoom.RoomID = roomID;
            eventRoom.StartTime = startTime;
            eventRoom.EndTime = endTime;
            eventRoom.ShowInInvoice = showInInvoice;
            eventRoom.IncludeInForwardBook = includeInForwardBook;
            eventRoom.IncludeInCorrespondence = includeInCorrespondence;
            return eventRoom;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Guid _EventID;
        partial void OnEventIDChanging(global::System.Guid value);
        partial void OnEventIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value, "RoomID");
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private global::System.Guid _RoomID;
        partial void OnRoomIDChanging(global::System.Guid value);
        partial void OnRoomIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, "StartTime");
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value, "EndTime");
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowInInvoice
        {
            get
            {
                return _ShowInInvoice;
            }
            set
            {
                OnShowInInvoiceChanging(value);
                ReportPropertyChanging("ShowInInvoice");
                _ShowInInvoice = StructuralObject.SetValidValue(value, "ShowInInvoice");
                ReportPropertyChanged("ShowInInvoice");
                OnShowInInvoiceChanged();
            }
        }
        private global::System.Boolean _ShowInInvoice;
        partial void OnShowInInvoiceChanging(global::System.Boolean value);
        partial void OnShowInInvoiceChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncludeInForwardBook
        {
            get
            {
                return _IncludeInForwardBook;
            }
            set
            {
                OnIncludeInForwardBookChanging(value);
                ReportPropertyChanging("IncludeInForwardBook");
                _IncludeInForwardBook = StructuralObject.SetValidValue(value, "IncludeInForwardBook");
                ReportPropertyChanged("IncludeInForwardBook");
                OnIncludeInForwardBookChanged();
            }
        }
        private global::System.Boolean _IncludeInForwardBook;
        partial void OnIncludeInForwardBookChanging(global::System.Boolean value);
        partial void OnIncludeInForwardBookChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncludeInCorrespondence
        {
            get
            {
                return _IncludeInCorrespondence;
            }
            set
            {
                OnIncludeInCorrespondenceChanging(value);
                ReportPropertyChanging("IncludeInCorrespondence");
                _IncludeInCorrespondence = StructuralObject.SetValidValue(value, "IncludeInCorrespondence");
                ReportPropertyChanged("IncludeInCorrespondence");
                OnIncludeInCorrespondenceChanged();
            }
        }
        private global::System.Boolean _IncludeInCorrespondence;
        partial void OnIncludeInCorrespondenceChanging(global::System.Boolean value);
        partial void OnIncludeInCorrespondenceChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventRooms_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventRooms_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventRooms_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventRooms_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_EventRooms_Events", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventRooms_Rooms", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("EventManagementSystemModel.FK_EventRooms_Rooms", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("EventManagementSystemModel.FK_EventRooms_Rooms", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("EventManagementSystemModel.FK_EventRooms_Rooms", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("EventManagementSystemModel.FK_EventRooms_Rooms", "Room", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventStatus : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventStatus object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="preferredName">Initial value of the PreferredName property.</param>
        /// <param name="colour">Initial value of the Colour property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        public static EventStatus CreateEventStatus(global::System.Guid id, global::System.String name, global::System.String preferredName, global::System.String colour, global::System.Boolean isEnabled)
        {
            EventStatus eventStatus = new EventStatus();
            eventStatus.ID = id;
            eventStatus.Name = name;
            eventStatus.PreferredName = preferredName;
            eventStatus.Colour = colour;
            eventStatus.IsEnabled = isEnabled;
            return eventStatus;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String PreferredName
        {
            get
            {
                return _PreferredName;
            }
            set
            {
                OnPreferredNameChanging(value);
                ReportPropertyChanging("PreferredName");
                _PreferredName = StructuralObject.SetValidValue(value, false, "PreferredName");
                ReportPropertyChanged("PreferredName");
                OnPreferredNameChanged();
            }
        }
        private global::System.String _PreferredName;
        partial void OnPreferredNameChanging(global::System.String value);
        partial void OnPreferredNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Colour
        {
            get
            {
                return _Colour;
            }
            set
            {
                OnColourChanging(value);
                ReportPropertyChanging("Colour");
                _Colour = StructuralObject.SetValidValue(value, false, "Colour");
                ReportPropertyChanged("Colour");
                OnColourChanged();
            }
        }
        private global::System.String _Colour;
        partial void OnColourChanging(global::System.String value);
        partial void OnColourChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token1
        {
            get
            {
                return _Token1;
            }
            set
            {
                OnToken1Changing(value);
                ReportPropertyChanging("Token1");
                _Token1 = StructuralObject.SetValidValue(value, true, "Token1");
                ReportPropertyChanged("Token1");
                OnToken1Changed();
            }
        }
        private global::System.String _Token1;
        partial void OnToken1Changing(global::System.String value);
        partial void OnToken1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token2
        {
            get
            {
                return _Token2;
            }
            set
            {
                OnToken2Changing(value);
                ReportPropertyChanging("Token2");
                _Token2 = StructuralObject.SetValidValue(value, true, "Token2");
                ReportPropertyChanged("Token2");
                OnToken2Changed();
            }
        }
        private global::System.String _Token2;
        partial void OnToken2Changing(global::System.String value);
        partial void OnToken2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token3
        {
            get
            {
                return _Token3;
            }
            set
            {
                OnToken3Changing(value);
                ReportPropertyChanging("Token3");
                _Token3 = StructuralObject.SetValidValue(value, true, "Token3");
                ReportPropertyChanged("Token3");
                OnToken3Changed();
            }
        }
        private global::System.String _Token3;
        partial void OnToken3Changing(global::System.String value);
        partial void OnToken3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token4
        {
            get
            {
                return _Token4;
            }
            set
            {
                OnToken4Changing(value);
                ReportPropertyChanging("Token4");
                _Token4 = StructuralObject.SetValidValue(value, true, "Token4");
                ReportPropertyChanged("Token4");
                OnToken4Changed();
            }
        }
        private global::System.String _Token4;
        partial void OnToken4Changing(global::System.String value);
        partial void OnToken4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token5
        {
            get
            {
                return _Token5;
            }
            set
            {
                OnToken5Changing(value);
                ReportPropertyChanging("Token5");
                _Token5 = StructuralObject.SetValidValue(value, true, "Token5");
                ReportPropertyChanged("Token5");
                OnToken5Changed();
            }
        }
        private global::System.String _Token5;
        partial void OnToken5Changing(global::System.String value);
        partial void OnToken5Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value, "IsEnabled");
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private global::System.Boolean _IsEnabled;
        partial void OnIsEnabledChanging(global::System.Boolean value);
        partial void OnIsEnabledChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_EventStatuses", "Enquiry")]
        public EntityCollection<Enquiry> Enquiries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_EventStatuses", "Enquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_EventStatuses", "Enquiry", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Events_EventStatuses", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("EventManagementSystemModel.FK_Events_EventStatuses", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("EventManagementSystemModel.FK_Events_EventStatuses", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventStatusOptions_EventStatuses", "EventStatusOption")]
        public EntityCollection<EventStatusOption> EventStatusOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventStatusOption>("EventManagementSystemModel.FK_EventStatusOptions_EventStatuses", "EventStatusOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventStatusOption>("EventManagementSystemModel.FK_EventStatusOptions_EventStatuses", "EventStatusOption", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventStatusOption")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventStatusOption : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventStatusOption object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventStatusID">Initial value of the EventStatusID property.</param>
        /// <param name="eventOptionID">Initial value of the EventOptionID property.</param>
        public static EventStatusOption CreateEventStatusOption(global::System.Guid id, global::System.Guid eventStatusID, global::System.Guid eventOptionID)
        {
            EventStatusOption eventStatusOption = new EventStatusOption();
            eventStatusOption.ID = id;
            eventStatusOption.EventStatusID = eventStatusID;
            eventStatusOption.EventOptionID = eventOptionID;
            return eventStatusOption;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventStatusID
        {
            get
            {
                return _EventStatusID;
            }
            set
            {
                OnEventStatusIDChanging(value);
                ReportPropertyChanging("EventStatusID");
                _EventStatusID = StructuralObject.SetValidValue(value, "EventStatusID");
                ReportPropertyChanged("EventStatusID");
                OnEventStatusIDChanged();
            }
        }
        private global::System.Guid _EventStatusID;
        partial void OnEventStatusIDChanging(global::System.Guid value);
        partial void OnEventStatusIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventOptionID
        {
            get
            {
                return _EventOptionID;
            }
            set
            {
                OnEventOptionIDChanging(value);
                ReportPropertyChanging("EventOptionID");
                _EventOptionID = StructuralObject.SetValidValue(value, "EventOptionID");
                ReportPropertyChanged("EventOptionID");
                OnEventOptionIDChanged();
            }
        }
        private global::System.Guid _EventOptionID;
        partial void OnEventOptionIDChanging(global::System.Guid value);
        partial void OnEventOptionIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventStatusOptions_EventOptions", "EventOption")]
        public EventOption EventOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventOption>("EventManagementSystemModel.FK_EventStatusOptions_EventOptions", "EventOption").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventOption>("EventManagementSystemModel.FK_EventStatusOptions_EventOptions", "EventOption").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventOption> EventOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventOption>("EventManagementSystemModel.FK_EventStatusOptions_EventOptions", "EventOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventOption>("EventManagementSystemModel.FK_EventStatusOptions_EventOptions", "EventOption", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventStatusOptions_EventStatuses", "EventStatus")]
        public EventStatus EventStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventStatus>("EventManagementSystemModel.FK_EventStatusOptions_EventStatuses", "EventStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventStatus>("EventManagementSystemModel.FK_EventStatusOptions_EventStatuses", "EventStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventStatus> EventStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventStatus>("EventManagementSystemModel.FK_EventStatusOptions_EventStatuses", "EventStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventStatus>("EventManagementSystemModel.FK_EventStatusOptions_EventStatuses", "EventStatus", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventType : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="preferredName">Initial value of the PreferredName property.</param>
        /// <param name="abbreviation">Initial value of the Abbreviation property.</param>
        /// <param name="colour">Initial value of the Colour property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        /// <param name="allowToBeBooked">Initial value of the AllowToBeBooked property.</param>
        /// <param name="allowEnquiry">Initial value of the AllowEnquiry property.</param>
        public static EventType CreateEventType(global::System.Guid id, global::System.String name, global::System.String preferredName, global::System.String abbreviation, global::System.String colour, global::System.Boolean isEnabled, global::System.Boolean allowToBeBooked, global::System.Boolean allowEnquiry)
        {
            EventType eventType = new EventType();
            eventType.ID = id;
            eventType.Name = name;
            eventType.PreferredName = preferredName;
            eventType.Abbreviation = abbreviation;
            eventType.Colour = colour;
            eventType.IsEnabled = isEnabled;
            eventType.AllowToBeBooked = allowToBeBooked;
            eventType.AllowEnquiry = allowEnquiry;
            return eventType;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String PreferredName
        {
            get
            {
                return _PreferredName;
            }
            set
            {
                OnPreferredNameChanging(value);
                ReportPropertyChanging("PreferredName");
                _PreferredName = StructuralObject.SetValidValue(value, false, "PreferredName");
                ReportPropertyChanged("PreferredName");
                OnPreferredNameChanged();
            }
        }
        private global::System.String _PreferredName;
        partial void OnPreferredNameChanging(global::System.String value);
        partial void OnPreferredNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Abbreviation
        {
            get
            {
                return _Abbreviation;
            }
            set
            {
                OnAbbreviationChanging(value);
                ReportPropertyChanging("Abbreviation");
                _Abbreviation = StructuralObject.SetValidValue(value, false, "Abbreviation");
                ReportPropertyChanged("Abbreviation");
                OnAbbreviationChanged();
            }
        }
        private global::System.String _Abbreviation;
        partial void OnAbbreviationChanging(global::System.String value);
        partial void OnAbbreviationChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Colour
        {
            get
            {
                return _Colour;
            }
            set
            {
                OnColourChanging(value);
                ReportPropertyChanging("Colour");
                _Colour = StructuralObject.SetValidValue(value, false, "Colour");
                ReportPropertyChanged("Colour");
                OnColourChanged();
            }
        }
        private global::System.String _Colour;
        partial void OnColourChanging(global::System.String value);
        partial void OnColourChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token1
        {
            get
            {
                return _Token1;
            }
            set
            {
                OnToken1Changing(value);
                ReportPropertyChanging("Token1");
                _Token1 = StructuralObject.SetValidValue(value, true, "Token1");
                ReportPropertyChanged("Token1");
                OnToken1Changed();
            }
        }
        private global::System.String _Token1;
        partial void OnToken1Changing(global::System.String value);
        partial void OnToken1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token2
        {
            get
            {
                return _Token2;
            }
            set
            {
                OnToken2Changing(value);
                ReportPropertyChanging("Token2");
                _Token2 = StructuralObject.SetValidValue(value, true, "Token2");
                ReportPropertyChanged("Token2");
                OnToken2Changed();
            }
        }
        private global::System.String _Token2;
        partial void OnToken2Changing(global::System.String value);
        partial void OnToken2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token3
        {
            get
            {
                return _Token3;
            }
            set
            {
                OnToken3Changing(value);
                ReportPropertyChanging("Token3");
                _Token3 = StructuralObject.SetValidValue(value, true, "Token3");
                ReportPropertyChanged("Token3");
                OnToken3Changed();
            }
        }
        private global::System.String _Token3;
        partial void OnToken3Changing(global::System.String value);
        partial void OnToken3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token4
        {
            get
            {
                return _Token4;
            }
            set
            {
                OnToken4Changing(value);
                ReportPropertyChanging("Token4");
                _Token4 = StructuralObject.SetValidValue(value, true, "Token4");
                ReportPropertyChanged("Token4");
                OnToken4Changed();
            }
        }
        private global::System.String _Token4;
        partial void OnToken4Changing(global::System.String value);
        partial void OnToken4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token5
        {
            get
            {
                return _Token5;
            }
            set
            {
                OnToken5Changing(value);
                ReportPropertyChanging("Token5");
                _Token5 = StructuralObject.SetValidValue(value, true, "Token5");
                ReportPropertyChanged("Token5");
                OnToken5Changed();
            }
        }
        private global::System.String _Token5;
        partial void OnToken5Changing(global::System.String value);
        partial void OnToken5Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value, "IsEnabled");
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private global::System.Boolean _IsEnabled;
        partial void OnIsEnabledChanging(global::System.Boolean value);
        partial void OnIsEnabledChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowToBeBooked
        {
            get
            {
                return _AllowToBeBooked;
            }
            set
            {
                OnAllowToBeBookedChanging(value);
                ReportPropertyChanging("AllowToBeBooked");
                _AllowToBeBooked = StructuralObject.SetValidValue(value, "AllowToBeBooked");
                ReportPropertyChanged("AllowToBeBooked");
                OnAllowToBeBookedChanged();
            }
        }
        private global::System.Boolean _AllowToBeBooked;
        partial void OnAllowToBeBookedChanging(global::System.Boolean value);
        partial void OnAllowToBeBookedChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowEnquiry
        {
            get
            {
                return _AllowEnquiry;
            }
            set
            {
                OnAllowEnquiryChanging(value);
                ReportPropertyChanging("AllowEnquiry");
                _AllowEnquiry = StructuralObject.SetValidValue(value, "AllowEnquiry");
                ReportPropertyChanged("AllowEnquiry");
                OnAllowEnquiryChanged();
            }
        }
        private global::System.Boolean _AllowEnquiry;
        partial void OnAllowEnquiryChanging(global::System.Boolean value);
        partial void OnAllowEnquiryChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DefaultUserID
        {
            get
            {
                return _DefaultUserID;
            }
            set
            {
                OnDefaultUserIDChanging(value);
                ReportPropertyChanging("DefaultUserID");
                _DefaultUserID = StructuralObject.SetValidValue(value, "DefaultUserID");
                ReportPropertyChanged("DefaultUserID");
                OnDefaultUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _DefaultUserID;
        partial void OnDefaultUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnDefaultUserIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_EventTypes", "Enquiry")]
        public EntityCollection<Enquiry> Enquiries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_EventTypes", "Enquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_EventTypes", "Enquiry", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Events_EventTypes", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("EventManagementSystemModel.FK_Events_EventTypes", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("EventManagementSystemModel.FK_Events_EventTypes", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventTypeOptions_EventTypes1", "EventTypeOption")]
        public EntityCollection<EventTypeOption> EventTypeOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventTypeOption>("EventManagementSystemModel.FK_EventTypeOptions_EventTypes1", "EventTypeOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventTypeOption>("EventManagementSystemModel.FK_EventTypeOptions_EventTypes1", "EventTypeOption", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventTypes_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventTypes_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventTypes_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventTypes_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_EventTypes_Users", "User", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_ProductEventTypes_EventTypes", "ProductEventType")]
        public EntityCollection<ProductEventType> ProductEventTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductEventType>("EventManagementSystemModel.FK_ProductEventTypes_EventTypes", "ProductEventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductEventType>("EventManagementSystemModel.FK_ProductEventTypes_EventTypes", "ProductEventType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventTypeTODOs_EventType", "EventTypeTODO")]
        public EntityCollection<EventTypeTODO> EventTypeTODOs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventTypeTODO>("EventManagementSystemModel.FK_EventTypeTODOs_EventType", "EventTypeTODO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventTypeTODO>("EventManagementSystemModel.FK_EventTypeTODOs_EventType", "EventTypeTODO", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventTypeOption")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventTypeOption : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventTypeOption object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventTypeID">Initial value of the EventTypeID property.</param>
        /// <param name="eventOptionID">Initial value of the EventOptionID property.</param>
        public static EventTypeOption CreateEventTypeOption(global::System.Guid id, global::System.Guid eventTypeID, global::System.Guid eventOptionID)
        {
            EventTypeOption eventTypeOption = new EventTypeOption();
            eventTypeOption.ID = id;
            eventTypeOption.EventTypeID = eventTypeID;
            eventTypeOption.EventOptionID = eventOptionID;
            return eventTypeOption;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventTypeID
        {
            get
            {
                return _EventTypeID;
            }
            set
            {
                OnEventTypeIDChanging(value);
                ReportPropertyChanging("EventTypeID");
                _EventTypeID = StructuralObject.SetValidValue(value, "EventTypeID");
                ReportPropertyChanged("EventTypeID");
                OnEventTypeIDChanged();
            }
        }
        private global::System.Guid _EventTypeID;
        partial void OnEventTypeIDChanging(global::System.Guid value);
        partial void OnEventTypeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventOptionID
        {
            get
            {
                return _EventOptionID;
            }
            set
            {
                OnEventOptionIDChanging(value);
                ReportPropertyChanging("EventOptionID");
                _EventOptionID = StructuralObject.SetValidValue(value, "EventOptionID");
                ReportPropertyChanged("EventOptionID");
                OnEventOptionIDChanged();
            }
        }
        private global::System.Guid _EventOptionID;
        partial void OnEventOptionIDChanging(global::System.Guid value);
        partial void OnEventOptionIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventTypeOptions_EventOptions1", "EventOption")]
        public EventOption EventOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventOption>("EventManagementSystemModel.FK_EventTypeOptions_EventOptions1", "EventOption").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventOption>("EventManagementSystemModel.FK_EventTypeOptions_EventOptions1", "EventOption").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventOption> EventOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventOption>("EventManagementSystemModel.FK_EventTypeOptions_EventOptions1", "EventOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventOption>("EventManagementSystemModel.FK_EventTypeOptions_EventOptions1", "EventOption", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventTypeOptions_EventTypes1", "EventType")]
        public EventType EventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_EventTypeOptions_EventTypes1", "EventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_EventTypeOptions_EventTypes1", "EventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventType> EventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_EventTypeOptions_EventTypes1", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventType>("EventManagementSystemModel.FK_EventTypeOptions_EventTypes1", "EventType", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventTypeTODO")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventTypeTODO : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventTypeTODO object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventTypeID">Initial value of the EventTypeID property.</param>
        /// <param name="addedByUserID">Initial value of the AddedByUserID property.</param>
        /// <param name="whatToDo">Initial value of the WhatToDo property.</param>
        /// <param name="numberOfDays">Initial value of the NumberOfDays property.</param>
        /// <param name="relatedDateType">Initial value of the RelatedDateType property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="assignedToUserID">Initial value of the AssignedToUserID property.</param>
        public static EventTypeTODO CreateEventTypeTODO(global::System.Guid id, global::System.Guid eventTypeID, global::System.Guid addedByUserID, global::System.String whatToDo, global::System.Int32 numberOfDays, global::System.Int32 relatedDateType, global::System.DateTime createdDate, global::System.Guid assignedToUserID)
        {
            EventTypeTODO eventTypeTODO = new EventTypeTODO();
            eventTypeTODO.ID = id;
            eventTypeTODO.EventTypeID = eventTypeID;
            eventTypeTODO.AddedByUserID = addedByUserID;
            eventTypeTODO.WhatToDo = whatToDo;
            eventTypeTODO.NumberOfDays = numberOfDays;
            eventTypeTODO.RelatedDateType = relatedDateType;
            eventTypeTODO.CreatedDate = createdDate;
            eventTypeTODO.AssignedToUserID = assignedToUserID;
            return eventTypeTODO;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventTypeID
        {
            get
            {
                return _EventTypeID;
            }
            set
            {
                OnEventTypeIDChanging(value);
                ReportPropertyChanging("EventTypeID");
                _EventTypeID = StructuralObject.SetValidValue(value, "EventTypeID");
                ReportPropertyChanged("EventTypeID");
                OnEventTypeIDChanged();
            }
        }
        private global::System.Guid _EventTypeID;
        partial void OnEventTypeIDChanging(global::System.Guid value);
        partial void OnEventTypeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid AddedByUserID
        {
            get
            {
                return _AddedByUserID;
            }
            set
            {
                OnAddedByUserIDChanging(value);
                ReportPropertyChanging("AddedByUserID");
                _AddedByUserID = StructuralObject.SetValidValue(value, "AddedByUserID");
                ReportPropertyChanged("AddedByUserID");
                OnAddedByUserIDChanged();
            }
        }
        private global::System.Guid _AddedByUserID;
        partial void OnAddedByUserIDChanging(global::System.Guid value);
        partial void OnAddedByUserIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String WhatToDo
        {
            get
            {
                return _WhatToDo;
            }
            set
            {
                OnWhatToDoChanging(value);
                ReportPropertyChanging("WhatToDo");
                _WhatToDo = StructuralObject.SetValidValue(value, false, "WhatToDo");
                ReportPropertyChanged("WhatToDo");
                OnWhatToDoChanged();
            }
        }
        private global::System.String _WhatToDo;
        partial void OnWhatToDoChanging(global::System.String value);
        partial void OnWhatToDoChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfDays
        {
            get
            {
                return _NumberOfDays;
            }
            set
            {
                OnNumberOfDaysChanging(value);
                ReportPropertyChanging("NumberOfDays");
                _NumberOfDays = StructuralObject.SetValidValue(value, "NumberOfDays");
                ReportPropertyChanged("NumberOfDays");
                OnNumberOfDaysChanged();
            }
        }
        private global::System.Int32 _NumberOfDays;
        partial void OnNumberOfDaysChanging(global::System.Int32 value);
        partial void OnNumberOfDaysChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelatedDateType
        {
            get
            {
                return _RelatedDateType;
            }
            set
            {
                OnRelatedDateTypeChanging(value);
                ReportPropertyChanging("RelatedDateType");
                _RelatedDateType = StructuralObject.SetValidValue(value, "RelatedDateType");
                ReportPropertyChanged("RelatedDateType");
                OnRelatedDateTypeChanged();
            }
        }
        private global::System.Int32 _RelatedDateType;
        partial void OnRelatedDateTypeChanging(global::System.Int32 value);
        partial void OnRelatedDateTypeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastEditDate
        {
            get
            {
                return _LastEditDate;
            }
            set
            {
                OnLastEditDateChanging(value);
                ReportPropertyChanging("LastEditDate");
                _LastEditDate = StructuralObject.SetValidValue(value, "LastEditDate");
                ReportPropertyChanged("LastEditDate");
                OnLastEditDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastEditDate;
        partial void OnLastEditDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastEditDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid AssignedToUserID
        {
            get
            {
                return _AssignedToUserID;
            }
            set
            {
                OnAssignedToUserIDChanging(value);
                ReportPropertyChanging("AssignedToUserID");
                _AssignedToUserID = StructuralObject.SetValidValue(value, "AssignedToUserID");
                ReportPropertyChanged("AssignedToUserID");
                OnAssignedToUserIDChanged();
            }
        }
        private global::System.Guid _AssignedToUserID;
        partial void OnAssignedToUserIDChanging(global::System.Guid value);
        partial void OnAssignedToUserIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventTypeTODOs_EventType", "EventType")]
        public EventType EventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_EventTypeTODOs_EventType", "EventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_EventTypeTODOs_EventType", "EventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventType> EventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_EventTypeTODOs_EventType", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventType>("EventManagementSystemModel.FK_EventTypeTODOs_EventType", "EventType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventTypeTODOs_AddedByUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventTypeTODOs_AddedByUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventTypeTODOs_AddedByUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventTypeTODOs_AddedByUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_EventTypeTODOs_AddedByUser", "User", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventTypeTODOs_AssignedToUser", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventTypeTODOs_AssignedToUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventTypeTODOs_AssignedToUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventTypeTODOs_AssignedToUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_EventTypeTODOs_AssignedToUser", "User", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventReminders_EventTypeToDo", "EventReminder")]
        public EntityCollection<EventReminder> EventReminders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventReminder>("EventManagementSystemModel.FK_EventReminders_EventTypeToDo", "EventReminder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventReminder>("EventManagementSystemModel.FK_EventReminders_EventTypeToDo", "EventReminder", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "EventUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class EventUpdate : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new EventUpdate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static EventUpdate CreateEventUpdate(global::System.Guid id, global::System.Guid eventID, global::System.Guid userID, global::System.String message, global::System.DateTime date)
        {
            EventUpdate eventUpdate = new EventUpdate();
            eventUpdate.ID = id;
            eventUpdate.EventID = eventID;
            eventUpdate.UserID = userID;
            eventUpdate.Message = message;
            eventUpdate.Date = date;
            return eventUpdate;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Guid _EventID;
        partial void OnEventIDChanging(global::System.Guid value);
        partial void OnEventIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false, "Message");
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String OldValue
        {
            get
            {
                return _OldValue;
            }
            set
            {
                OnOldValueChanging(value);
                ReportPropertyChanging("OldValue");
                _OldValue = StructuralObject.SetValidValue(value, true, "OldValue");
                ReportPropertyChanged("OldValue");
                OnOldValueChanged();
            }
        }
        private global::System.String _OldValue;
        partial void OnOldValueChanging(global::System.String value);
        partial void OnOldValueChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String NewValue
        {
            get
            {
                return _NewValue;
            }
            set
            {
                OnNewValueChanging(value);
                ReportPropertyChanging("NewValue");
                _NewValue = StructuralObject.SetValidValue(value, true, "NewValue");
                ReportPropertyChanged("NewValue");
                OnNewValueChanged();
            }
        }
        private global::System.String _NewValue;
        partial void OnNewValueChanging(global::System.String value);
        partial void OnNewValueChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Guid> value);
        partial void OnItemIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value, true, "ItemType");
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private global::System.String _ItemType;
        partial void OnItemTypeChanging(global::System.String value);
        partial void OnItemTypeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Field
        {
            get
            {
                return _Field;
            }
            set
            {
                OnFieldChanging(value);
                ReportPropertyChanging("Field");
                _Field = StructuralObject.SetValidValue(value, true, "Field");
                ReportPropertyChanged("Field");
                OnFieldChanged();
            }
        }
        private global::System.String _Field;
        partial void OnFieldChanging(global::System.String value);
        partial void OnFieldChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<UpdateAction> Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = (Nullable<UpdateAction>)StructuralObject.SetValidValue((Nullable<int>)value, "Action");
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private Nullable<UpdateAction> _Action;
        partial void OnActionChanging(Nullable<UpdateAction> value);
        partial void OnActionChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventUpdates_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventUpdates_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventUpdates_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_EventUpdates_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_EventUpdates_Events", "Event", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventUpdates_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventUpdates_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventUpdates_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_EventUpdates_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_EventUpdates_Users", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Facility")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Facility : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Facility object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Facility CreateFacility(global::System.Guid id, global::System.String name)
        {
            Facility facility = new Facility();
            facility.ID = id;
            facility.Name = name;
            return facility;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_RoomFacilities_Facilities", "RoomFacility")]
        public EntityCollection<RoomFacility> RoomFacilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoomFacility>("EventManagementSystemModel.FK_RoomFacilities_Facilities", "RoomFacility");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoomFacility>("EventManagementSystemModel.FK_RoomFacilities_Facilities", "RoomFacility", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "FinaliseKey")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class FinaliseKey : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new FinaliseKey object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="record">Initial value of the Record property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FinaliseKey CreateFinaliseKey(global::System.Guid id, global::System.Int32 record, global::System.String name)
        {
            FinaliseKey finaliseKey = new FinaliseKey();
            finaliseKey.ID = id;
            finaliseKey.Record = record;
            finaliseKey.Name = name;
            return finaliseKey;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Record
        {
            get
            {
                return _Record;
            }
            set
            {
                OnRecordChanging(value);
                ReportPropertyChanging("Record");
                _Record = StructuralObject.SetValidValue(value, "Record");
                ReportPropertyChanged("Record");
                OnRecordChanged();
            }
        }
        private global::System.Int32 _Record;
        partial void OnRecordChanging(global::System.Int32 value);
        partial void OnRecordChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TillID
        {
            get
            {
                return _TillID;
            }
            set
            {
                OnTillIDChanging(value);
                ReportPropertyChanging("TillID");
                _TillID = StructuralObject.SetValidValue(value, "TillID");
                ReportPropertyChanged("TillID");
                OnTillIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TillID;
        partial void OnTillIDChanging(Nullable<global::System.Guid> value);
        partial void OnTillIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_FinaliseKeys_Tills", "Till")]
        public Till Till
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_FinaliseKeys_Tills", "Till").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_FinaliseKeys_Tills", "Till").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Till> TillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_FinaliseKeys_Tills", "Till");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Till>("EventManagementSystemModel.FK_FinaliseKeys_Tills", "Till", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionFinaliseKeys_FinaliseKeys", "TillTransactionFinaliseKey")]
        public EntityCollection<TillTransactionFinaliseKey> TillTransactionFinaliseKeys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTransactionFinaliseKey>("EventManagementSystemModel.FK_TillTransactionFinaliseKeys_FinaliseKeys", "TillTransactionFinaliseKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTransactionFinaliseKey>("EventManagementSystemModel.FK_TillTransactionFinaliseKeys_FinaliseKeys", "TillTransactionFinaliseKey", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "FixedTotal")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class FixedTotal : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new FixedTotal object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="record">Initial value of the Record property.</param>
        public static FixedTotal CreateFixedTotal(global::System.Guid id, global::System.Int32 record)
        {
            FixedTotal fixedTotal = new FixedTotal();
            fixedTotal.ID = id;
            fixedTotal.Record = record;
            return fixedTotal;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Record
        {
            get
            {
                return _Record;
            }
            set
            {
                OnRecordChanging(value);
                ReportPropertyChanging("Record");
                _Record = StructuralObject.SetValidValue(value, "Record");
                ReportPropertyChanged("Record");
                OnRecordChanged();
            }
        }
        private global::System.Int32 _Record;
        partial void OnRecordChanging(global::System.Int32 value);
        partial void OnRecordChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "FollowUp")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class FollowUp : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new FollowUp object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="takenByID">Initial value of the TakenByID property.</param>
        /// <param name="userDueToDoID">Initial value of the UserDueToDoID property.</param>
        /// <param name="whatToDo">Initial value of the WhatToDo property.</param>
        /// <param name="dateDue">Initial value of the DateDue property.</param>
        public static FollowUp CreateFollowUp(global::System.Guid id, global::System.Guid takenByID, global::System.Guid userDueToDoID, global::System.String whatToDo, global::System.DateTime dateDue)
        {
            FollowUp followUp = new FollowUp();
            followUp.ID = id;
            followUp.TakenByID = takenByID;
            followUp.UserDueToDoID = userDueToDoID;
            followUp.WhatToDo = whatToDo;
            followUp.DateDue = dateDue;
            return followUp;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EnquiryID
        {
            get
            {
                return _EnquiryID;
            }
            set
            {
                OnEnquiryIDChanging(value);
                ReportPropertyChanging("EnquiryID");
                _EnquiryID = StructuralObject.SetValidValue(value, "EnquiryID");
                ReportPropertyChanged("EnquiryID");
                OnEnquiryIDChanged();
            }
        }
        private Nullable<global::System.Guid> _EnquiryID;
        partial void OnEnquiryIDChanging(Nullable<global::System.Guid> value);
        partial void OnEnquiryIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TakenByID
        {
            get
            {
                return _TakenByID;
            }
            set
            {
                OnTakenByIDChanging(value);
                ReportPropertyChanging("TakenByID");
                _TakenByID = StructuralObject.SetValidValue(value, "TakenByID");
                ReportPropertyChanged("TakenByID");
                OnTakenByIDChanged();
            }
        }
        private global::System.Guid _TakenByID;
        partial void OnTakenByIDChanging(global::System.Guid value);
        partial void OnTakenByIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid UserDueToDoID
        {
            get
            {
                return _UserDueToDoID;
            }
            set
            {
                OnUserDueToDoIDChanging(value);
                ReportPropertyChanging("UserDueToDoID");
                _UserDueToDoID = StructuralObject.SetValidValue(value, "UserDueToDoID");
                ReportPropertyChanged("UserDueToDoID");
                OnUserDueToDoIDChanged();
            }
        }
        private global::System.Guid _UserDueToDoID;
        partial void OnUserDueToDoIDChanging(global::System.Guid value);
        partial void OnUserDueToDoIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String WhatToDo
        {
            get
            {
                return _WhatToDo;
            }
            set
            {
                OnWhatToDoChanging(value);
                ReportPropertyChanging("WhatToDo");
                _WhatToDo = StructuralObject.SetValidValue(value, false, "WhatToDo");
                ReportPropertyChanged("WhatToDo");
                OnWhatToDoChanged();
            }
        }
        private global::System.String _WhatToDo;
        partial void OnWhatToDoChanging(global::System.String value);
        partial void OnWhatToDoChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateDue
        {
            get
            {
                return _DateDue;
            }
            set
            {
                OnDateDueChanging(value);
                ReportPropertyChanging("DateDue");
                _DateDue = StructuralObject.SetValidValue(value, "DateDue");
                ReportPropertyChanged("DateDue");
                OnDateDueChanged();
            }
        }
        private global::System.DateTime _DateDue;
        partial void OnDateDueChanging(global::System.DateTime value);
        partial void OnDateDueChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastEditDate
        {
            get
            {
                return _LastEditDate;
            }
            set
            {
                OnLastEditDateChanging(value);
                ReportPropertyChanging("LastEditDate");
                _LastEditDate = StructuralObject.SetValidValue(value, "LastEditDate");
                ReportPropertyChanged("LastEditDate");
                OnLastEditDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastEditDate;
        partial void OnLastEditDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastEditDateChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Activities_FollowUps", "Activity")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("EventManagementSystemModel.FK_Activities_FollowUps", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("EventManagementSystemModel.FK_Activities_FollowUps", "Activity", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_FollowUps_Enquiries", "Enquiry")]
        public Enquiry Enquiry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_FollowUps_Enquiries", "Enquiry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_FollowUps_Enquiries", "Enquiry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Enquiry> EnquiryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Enquiry>("EventManagementSystemModel.FK_FollowUps_Enquiries", "Enquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Enquiry>("EventManagementSystemModel.FK_FollowUps_Enquiries", "Enquiry", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_FollowUps_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_FollowUps_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_FollowUps_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_FollowUps_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_FollowUps_Users", "User", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_FollowUps_Users1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_FollowUps_Users1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_FollowUps_Users1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_FollowUps_Users1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_FollowUps_Users1", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "FollowUpStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class FollowUpStatus : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new FollowUpStatus object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="numberOfDays">Initial value of the NumberOfDays property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="statusType">Initial value of the StatusType property.</param>
        public static FollowUpStatus CreateFollowUpStatus(global::System.Guid id, global::System.String status, global::System.Int32 numberOfDays, global::System.String color, global::System.Int32 priority, global::System.Int32 statusType)
        {
            FollowUpStatus followUpStatus = new FollowUpStatus();
            followUpStatus.ID = id;
            followUpStatus.Status = status;
            followUpStatus.NumberOfDays = numberOfDays;
            followUpStatus.Color = color;
            followUpStatus.Priority = priority;
            followUpStatus.StatusType = statusType;
            return followUpStatus;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfDays
        {
            get
            {
                return _NumberOfDays;
            }
            set
            {
                OnNumberOfDaysChanging(value);
                ReportPropertyChanging("NumberOfDays");
                _NumberOfDays = StructuralObject.SetValidValue(value, "NumberOfDays");
                ReportPropertyChanged("NumberOfDays");
                OnNumberOfDaysChanged();
            }
        }
        private global::System.Int32 _NumberOfDays;
        partial void OnNumberOfDaysChanging(global::System.Int32 value);
        partial void OnNumberOfDaysChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, false, "Color");
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, "Priority");
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusType
        {
            get
            {
                return _StatusType;
            }
            set
            {
                OnStatusTypeChanging(value);
                ReportPropertyChanging("StatusType");
                _StatusType = StructuralObject.SetValidValue(value, "StatusType");
                ReportPropertyChanged("StatusType");
                OnStatusTypeChanged();
            }
        }
        private global::System.Int32 _StatusType;
        partial void OnStatusTypeChanging(global::System.Int32 value);
        partial void OnStatusTypeChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Golf")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Golf : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Golf object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="hasNineHoles">Initial value of the HasNineHoles property.</param>
        /// <param name="hasEighteenHoles">Initial value of the HasEighteenHoles property.</param>
        /// <param name="turnTime">Initial value of the TurnTime property.</param>
        /// <param name="isBuggiesAvailable">Initial value of the IsBuggiesAvailable property.</param>
        /// <param name="nineHolesTime">Initial value of the NineHolesTime property.</param>
        /// <param name="eighteenHolesTime">Initial value of the EighteenHolesTime property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        /// <param name="includeInForwardBook">Initial value of the IncludeInForwardBook property.</param>
        /// <param name="allowOnlineBooking">Initial value of the AllowOnlineBooking property.</param>
        /// <param name="adminAuthorisation">Initial value of the AdminAuthorisation property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="timeInterval">Initial value of the TimeInterval property.</param>
        public static Golf CreateGolf(global::System.Guid id, global::System.String name, global::System.String color, global::System.Boolean hasNineHoles, global::System.Boolean hasEighteenHoles, global::System.TimeSpan turnTime, global::System.Boolean isBuggiesAvailable, global::System.TimeSpan nineHolesTime, global::System.TimeSpan eighteenHolesTime, global::System.Boolean isEnabled, global::System.Boolean includeInForwardBook, global::System.Boolean allowOnlineBooking, global::System.Boolean adminAuthorisation, global::System.TimeSpan startTime, global::System.TimeSpan endTime, global::System.TimeSpan timeInterval)
        {
            Golf golf = new Golf();
            golf.ID = id;
            golf.Name = name;
            golf.Color = color;
            golf.HasNineHoles = hasNineHoles;
            golf.HasEighteenHoles = hasEighteenHoles;
            golf.TurnTime = turnTime;
            golf.IsBuggiesAvailable = isBuggiesAvailable;
            golf.NineHolesTime = nineHolesTime;
            golf.EighteenHolesTime = eighteenHolesTime;
            golf.IsEnabled = isEnabled;
            golf.IncludeInForwardBook = includeInForwardBook;
            golf.AllowOnlineBooking = allowOnlineBooking;
            golf.AdminAuthorisation = adminAuthorisation;
            golf.StartTime = startTime;
            golf.EndTime = endTime;
            golf.TimeInterval = timeInterval;
            return golf;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, false, "Color");
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Places
        {
            get
            {
                return _Places;
            }
            set
            {
                OnPlacesChanging(value);
                ReportPropertyChanging("Places");
                _Places = StructuralObject.SetValidValue(value, true, "Places");
                ReportPropertyChanged("Places");
                OnPlacesChanged();
            }
        }
        private global::System.String _Places;
        partial void OnPlacesChanging(global::System.String value);
        partial void OnPlacesChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasNineHoles
        {
            get
            {
                return _HasNineHoles;
            }
            set
            {
                OnHasNineHolesChanging(value);
                ReportPropertyChanging("HasNineHoles");
                _HasNineHoles = StructuralObject.SetValidValue(value, "HasNineHoles");
                ReportPropertyChanged("HasNineHoles");
                OnHasNineHolesChanged();
            }
        }
        private global::System.Boolean _HasNineHoles;
        partial void OnHasNineHolesChanging(global::System.Boolean value);
        partial void OnHasNineHolesChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasEighteenHoles
        {
            get
            {
                return _HasEighteenHoles;
            }
            set
            {
                OnHasEighteenHolesChanging(value);
                ReportPropertyChanging("HasEighteenHoles");
                _HasEighteenHoles = StructuralObject.SetValidValue(value, "HasEighteenHoles");
                ReportPropertyChanged("HasEighteenHoles");
                OnHasEighteenHolesChanged();
            }
        }
        private global::System.Boolean _HasEighteenHoles;
        partial void OnHasEighteenHolesChanging(global::System.Boolean value);
        partial void OnHasEighteenHolesChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan TurnTime
        {
            get
            {
                return _TurnTime;
            }
            set
            {
                OnTurnTimeChanging(value);
                ReportPropertyChanging("TurnTime");
                _TurnTime = StructuralObject.SetValidValue(value, "TurnTime");
                ReportPropertyChanged("TurnTime");
                OnTurnTimeChanged();
            }
        }
        private global::System.TimeSpan _TurnTime;
        partial void OnTurnTimeChanging(global::System.TimeSpan value);
        partial void OnTurnTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TurnDefault
        {
            get
            {
                return _TurnDefault;
            }
            set
            {
                OnTurnDefaultChanging(value);
                ReportPropertyChanging("TurnDefault");
                _TurnDefault = StructuralObject.SetValidValue(value, "TurnDefault");
                ReportPropertyChanged("TurnDefault");
                OnTurnDefaultChanged();
            }
        }
        private Nullable<global::System.Guid> _TurnDefault;
        partial void OnTurnDefaultChanging(Nullable<global::System.Guid> value);
        partial void OnTurnDefaultChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsBuggiesAvailable
        {
            get
            {
                return _IsBuggiesAvailable;
            }
            set
            {
                OnIsBuggiesAvailableChanging(value);
                ReportPropertyChanging("IsBuggiesAvailable");
                _IsBuggiesAvailable = StructuralObject.SetValidValue(value, "IsBuggiesAvailable");
                ReportPropertyChanged("IsBuggiesAvailable");
                OnIsBuggiesAvailableChanged();
            }
        }
        private global::System.Boolean _IsBuggiesAvailable;
        partial void OnIsBuggiesAvailableChanging(global::System.Boolean value);
        partial void OnIsBuggiesAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan NineHolesTime
        {
            get
            {
                return _NineHolesTime;
            }
            set
            {
                OnNineHolesTimeChanging(value);
                ReportPropertyChanging("NineHolesTime");
                _NineHolesTime = StructuralObject.SetValidValue(value, "NineHolesTime");
                ReportPropertyChanged("NineHolesTime");
                OnNineHolesTimeChanged();
            }
        }
        private global::System.TimeSpan _NineHolesTime;
        partial void OnNineHolesTimeChanging(global::System.TimeSpan value);
        partial void OnNineHolesTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan EighteenHolesTime
        {
            get
            {
                return _EighteenHolesTime;
            }
            set
            {
                OnEighteenHolesTimeChanging(value);
                ReportPropertyChanging("EighteenHolesTime");
                _EighteenHolesTime = StructuralObject.SetValidValue(value, "EighteenHolesTime");
                ReportPropertyChanged("EighteenHolesTime");
                OnEighteenHolesTimeChanged();
            }
        }
        private global::System.TimeSpan _EighteenHolesTime;
        partial void OnEighteenHolesTimeChanging(global::System.TimeSpan value);
        partial void OnEighteenHolesTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value, "IsEnabled");
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private global::System.Boolean _IsEnabled;
        partial void OnIsEnabledChanging(global::System.Boolean value);
        partial void OnIsEnabledChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncludeInForwardBook
        {
            get
            {
                return _IncludeInForwardBook;
            }
            set
            {
                OnIncludeInForwardBookChanging(value);
                ReportPropertyChanging("IncludeInForwardBook");
                _IncludeInForwardBook = StructuralObject.SetValidValue(value, "IncludeInForwardBook");
                ReportPropertyChanged("IncludeInForwardBook");
                OnIncludeInForwardBookChanged();
            }
        }
        private global::System.Boolean _IncludeInForwardBook;
        partial void OnIncludeInForwardBookChanging(global::System.Boolean value);
        partial void OnIncludeInForwardBookChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowOnlineBooking
        {
            get
            {
                return _AllowOnlineBooking;
            }
            set
            {
                OnAllowOnlineBookingChanging(value);
                ReportPropertyChanging("AllowOnlineBooking");
                _AllowOnlineBooking = StructuralObject.SetValidValue(value, "AllowOnlineBooking");
                ReportPropertyChanged("AllowOnlineBooking");
                OnAllowOnlineBookingChanged();
            }
        }
        private global::System.Boolean _AllowOnlineBooking;
        partial void OnAllowOnlineBookingChanging(global::System.Boolean value);
        partial void OnAllowOnlineBookingChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean AdminAuthorisation
        {
            get
            {
                return _AdminAuthorisation;
            }
            set
            {
                OnAdminAuthorisationChanging(value);
                ReportPropertyChanging("AdminAuthorisation");
                _AdminAuthorisation = StructuralObject.SetValidValue(value, "AdminAuthorisation");
                ReportPropertyChanged("AdminAuthorisation");
                OnAdminAuthorisationChanged();
            }
        }
        private global::System.Boolean _AdminAuthorisation;
        partial void OnAdminAuthorisationChanging(global::System.Boolean value);
        partial void OnAdminAuthorisationChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, "StartTime");
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.TimeSpan _StartTime;
        partial void OnStartTimeChanging(global::System.TimeSpan value);
        partial void OnStartTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value, "EndTime");
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.TimeSpan _EndTime;
        partial void OnEndTimeChanging(global::System.TimeSpan value);
        partial void OnEndTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan TimeInterval
        {
            get
            {
                return _TimeInterval;
            }
            set
            {
                OnTimeIntervalChanging(value);
                ReportPropertyChanging("TimeInterval");
                _TimeInterval = StructuralObject.SetValidValue(value, "TimeInterval");
                ReportPropertyChanged("TimeInterval");
                OnTimeIntervalChanged();
            }
        }
        private global::System.TimeSpan _TimeInterval;
        partial void OnTimeIntervalChanging(global::System.TimeSpan value);
        partial void OnTimeIntervalChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventGolfs_Golfs", "EventGolf")]
        public EntityCollection<EventGolf> EventGolfs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventGolf>("EventManagementSystemModel.FK_EventGolfs_Golfs", "EventGolf");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventGolf>("EventManagementSystemModel.FK_EventGolfs_Golfs", "EventGolf", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_GolfFollowResources_Golfs", "GolfFollowResource")]
        public EntityCollection<GolfFollowResource> GolfFollowResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GolfFollowResource>("EventManagementSystemModel.FK_GolfFollowResources_Golfs", "GolfFollowResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GolfFollowResource>("EventManagementSystemModel.FK_GolfFollowResources_Golfs", "GolfFollowResource", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_GolfFollowResources_Golfs1", "GolfFollowResource")]
        public EntityCollection<GolfFollowResource> GolfFollowResources1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GolfFollowResource>("EventManagementSystemModel.FK_GolfFollowResources_Golfs1", "GolfFollowResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GolfFollowResource>("EventManagementSystemModel.FK_GolfFollowResources_Golfs1", "GolfFollowResource", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "GolfFollowResource")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class GolfFollowResource : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new GolfFollowResource object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="golfID">Initial value of the GolfID property.</param>
        /// <param name="followResourceID">Initial value of the FollowResourceID property.</param>
        public static GolfFollowResource CreateGolfFollowResource(global::System.Guid id, global::System.Guid golfID, global::System.Guid followResourceID)
        {
            GolfFollowResource golfFollowResource = new GolfFollowResource();
            golfFollowResource.ID = id;
            golfFollowResource.GolfID = golfID;
            golfFollowResource.FollowResourceID = followResourceID;
            return golfFollowResource;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid GolfID
        {
            get
            {
                return _GolfID;
            }
            set
            {
                OnGolfIDChanging(value);
                ReportPropertyChanging("GolfID");
                _GolfID = StructuralObject.SetValidValue(value, "GolfID");
                ReportPropertyChanged("GolfID");
                OnGolfIDChanged();
            }
        }
        private global::System.Guid _GolfID;
        partial void OnGolfIDChanging(global::System.Guid value);
        partial void OnGolfIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid FollowResourceID
        {
            get
            {
                return _FollowResourceID;
            }
            set
            {
                OnFollowResourceIDChanging(value);
                ReportPropertyChanging("FollowResourceID");
                _FollowResourceID = StructuralObject.SetValidValue(value, "FollowResourceID");
                ReportPropertyChanged("FollowResourceID");
                OnFollowResourceIDChanged();
            }
        }
        private global::System.Guid _FollowResourceID;
        partial void OnFollowResourceIDChanging(global::System.Guid value);
        partial void OnFollowResourceIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_GolfFollowResources_Golfs", "Golf")]
        public Golf Golf
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Golf>("EventManagementSystemModel.FK_GolfFollowResources_Golfs", "Golf").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Golf>("EventManagementSystemModel.FK_GolfFollowResources_Golfs", "Golf").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Golf> GolfReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Golf>("EventManagementSystemModel.FK_GolfFollowResources_Golfs", "Golf");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Golf>("EventManagementSystemModel.FK_GolfFollowResources_Golfs", "Golf", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_GolfFollowResources_Golfs1", "Golf")]
        public Golf Golf1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Golf>("EventManagementSystemModel.FK_GolfFollowResources_Golfs1", "Golf").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Golf>("EventManagementSystemModel.FK_GolfFollowResources_Golfs1", "Golf").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Golf> Golf1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Golf>("EventManagementSystemModel.FK_GolfFollowResources_Golfs1", "Golf");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Golf>("EventManagementSystemModel.FK_GolfFollowResources_Golfs1", "Golf", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "GolfHole")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class GolfHole : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new GolfHole object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="hole">Initial value of the Hole property.</param>
        public static GolfHole CreateGolfHole(global::System.Guid id, global::System.String hole)
        {
            GolfHole golfHole = new GolfHole();
            golfHole.ID = id;
            golfHole.Hole = hole;
            return golfHole;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Hole
        {
            get
            {
                return _Hole;
            }
            set
            {
                OnHoleChanging(value);
                ReportPropertyChanging("Hole");
                _Hole = StructuralObject.SetValidValue(value, false, "Hole");
                ReportPropertyChanged("Hole");
                OnHoleChanged();
            }
        }
        private global::System.String _Hole;
        partial void OnHoleChanging(global::System.String value);
        partial void OnHoleChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventGolfs_GolfHoles", "EventGolf")]
        public EntityCollection<EventGolf> EventGolfs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventGolf>("EventManagementSystemModel.FK_EventGolfs_GolfHoles", "EventGolf");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventGolf>("EventManagementSystemModel.FK_EventGolfs_GolfHoles", "EventGolf", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Invoice : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Invoice object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="invoiceDate">Initial value of the InvoiceDate property.</param>
        /// <param name="invoiceNumber">Initial value of the InvoiceNumber property.</param>
        /// <param name="invoiceAddress">Initial value of the InvoiceAddress property.</param>
        /// <param name="paymentDue">Initial value of the PaymentDue property.</param>
        /// <param name="cameFrom">Initial value of the CameFrom property.</param>
        public static Invoice CreateInvoice(global::System.Guid id, global::System.Guid eventID, global::System.Double amount, global::System.DateTime invoiceDate, global::System.Int32 invoiceNumber, global::System.String invoiceAddress, global::System.DateTime paymentDue, global::System.String cameFrom)
        {
            Invoice invoice = new Invoice();
            invoice.ID = id;
            invoice.EventID = eventID;
            invoice.Amount = amount;
            invoice.InvoiceDate = invoiceDate;
            invoice.InvoiceNumber = invoiceNumber;
            invoice.InvoiceAddress = invoiceAddress;
            invoice.PaymentDue = paymentDue;
            invoice.CameFrom = cameFrom;
            return invoice;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Guid _EventID;
        partial void OnEventIDChanging(global::System.Guid value);
        partial void OnEventIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value, "InvoiceDate");
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private global::System.DateTime _InvoiceDate;
        partial void OnInvoiceDateChanging(global::System.DateTime value);
        partial void OnInvoiceDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceNumber
        {
            get
            {
                return _InvoiceNumber;
            }
            set
            {
                OnInvoiceNumberChanging(value);
                ReportPropertyChanging("InvoiceNumber");
                _InvoiceNumber = StructuralObject.SetValidValue(value, "InvoiceNumber");
                ReportPropertyChanged("InvoiceNumber");
                OnInvoiceNumberChanged();
            }
        }
        private global::System.Int32 _InvoiceNumber;
        partial void OnInvoiceNumberChanging(global::System.Int32 value);
        partial void OnInvoiceNumberChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String InvoiceAddress
        {
            get
            {
                return _InvoiceAddress;
            }
            set
            {
                OnInvoiceAddressChanging(value);
                ReportPropertyChanging("InvoiceAddress");
                _InvoiceAddress = StructuralObject.SetValidValue(value, false, "InvoiceAddress");
                ReportPropertyChanged("InvoiceAddress");
                OnInvoiceAddressChanged();
            }
        }
        private global::System.String _InvoiceAddress;
        partial void OnInvoiceAddressChanging(global::System.String value);
        partial void OnInvoiceAddressChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDue
        {
            get
            {
                return _PaymentDue;
            }
            set
            {
                OnPaymentDueChanging(value);
                ReportPropertyChanging("PaymentDue");
                _PaymentDue = StructuralObject.SetValidValue(value, "PaymentDue");
                ReportPropertyChanged("PaymentDue");
                OnPaymentDueChanged();
            }
        }
        private global::System.DateTime _PaymentDue;
        partial void OnPaymentDueChanging(global::System.DateTime value);
        partial void OnPaymentDueChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String CameFrom
        {
            get
            {
                return _CameFrom;
            }
            set
            {
                OnCameFromChanging(value);
                ReportPropertyChanging("CameFrom");
                _CameFrom = StructuralObject.SetValidValue(value, false, "CameFrom");
                ReportPropertyChanged("CameFrom");
                OnCameFromChanged();
            }
        }
        private global::System.String _CameFrom;
        partial void OnCameFromChanging(global::System.String value);
        partial void OnCameFromChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Invoices_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_Invoices_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_Invoices_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_Invoices_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_Invoices_Events", "Event", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MailTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MailTemplate : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MailTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="template">Initial value of the Template property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        /// <param name="whoByID">Initial value of the WhoByID property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        public static MailTemplate CreateMailTemplate(global::System.Guid id, global::System.String name, global::System.String template, global::System.Guid categoryID, global::System.Guid typeID, global::System.DateTime lastUpdatedDate, global::System.Guid whoByID, global::System.Boolean isEnabled)
        {
            MailTemplate mailTemplate = new MailTemplate();
            mailTemplate.ID = id;
            mailTemplate.Name = name;
            mailTemplate.Template = template;
            mailTemplate.CategoryID = categoryID;
            mailTemplate.TypeID = typeID;
            mailTemplate.LastUpdatedDate = lastUpdatedDate;
            mailTemplate.WhoByID = whoByID;
            mailTemplate.IsEnabled = isEnabled;
            return mailTemplate;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Template
        {
            get
            {
                return _Template;
            }
            set
            {
                OnTemplateChanging(value);
                ReportPropertyChanging("Template");
                _Template = StructuralObject.SetValidValue(value, false, "Template");
                ReportPropertyChanged("Template");
                OnTemplateChanged();
            }
        }
        private global::System.String _Template;
        partial void OnTemplateChanging(global::System.String value);
        partial void OnTemplateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value, "CategoryID");
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Guid _CategoryID;
        partial void OnCategoryIDChanging(global::System.Guid value);
        partial void OnCategoryIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value, "TypeID");
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Guid _TypeID;
        partial void OnTypeIDChanging(global::System.Guid value);
        partial void OnTypeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value, "LastUpdatedDate");
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid WhoByID
        {
            get
            {
                return _WhoByID;
            }
            set
            {
                OnWhoByIDChanging(value);
                ReportPropertyChanging("WhoByID");
                _WhoByID = StructuralObject.SetValidValue(value, "WhoByID");
                ReportPropertyChanged("WhoByID");
                OnWhoByIDChanged();
            }
        }
        private global::System.Guid _WhoByID;
        partial void OnWhoByIDChanging(global::System.Guid value);
        partial void OnWhoByIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value, "IsEnabled");
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private global::System.Boolean _IsEnabled;
        partial void OnIsEnabledChanging(global::System.Boolean value);
        partial void OnIsEnabledChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EmailHeaderID
        {
            get
            {
                return _EmailHeaderID;
            }
            set
            {
                OnEmailHeaderIDChanging(value);
                ReportPropertyChanging("EmailHeaderID");
                _EmailHeaderID = StructuralObject.SetValidValue(value, "EmailHeaderID");
                ReportPropertyChanged("EmailHeaderID");
                OnEmailHeaderIDChanged();
            }
        }
        private Nullable<global::System.Guid> _EmailHeaderID;
        partial void OnEmailHeaderIDChanging(Nullable<global::System.Guid> value);
        partial void OnEmailHeaderIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MailTemplates_MailTemplateCategories", "MailTemplateCategory")]
        public MailTemplateCategory MailTemplateCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MailTemplateCategory>("EventManagementSystemModel.FK_MailTemplates_MailTemplateCategories", "MailTemplateCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MailTemplateCategory>("EventManagementSystemModel.FK_MailTemplates_MailTemplateCategories", "MailTemplateCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MailTemplateCategory> MailTemplateCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MailTemplateCategory>("EventManagementSystemModel.FK_MailTemplates_MailTemplateCategories", "MailTemplateCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MailTemplateCategory>("EventManagementSystemModel.FK_MailTemplates_MailTemplateCategories", "MailTemplateCategory", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MailTemplates_MailTemplateTypes", "MailTemplateType")]
        public MailTemplateType MailTemplateType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MailTemplateType>("EventManagementSystemModel.FK_MailTemplates_MailTemplateTypes", "MailTemplateType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MailTemplateType>("EventManagementSystemModel.FK_MailTemplates_MailTemplateTypes", "MailTemplateType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MailTemplateType> MailTemplateTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MailTemplateType>("EventManagementSystemModel.FK_MailTemplates_MailTemplateTypes", "MailTemplateType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MailTemplateType>("EventManagementSystemModel.FK_MailTemplates_MailTemplateTypes", "MailTemplateType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MailTemplates_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_MailTemplates_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_MailTemplates_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_MailTemplates_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_MailTemplates_Users", "User", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MailTemplates_EmailHeaders", "EmailHeader")]
        public EmailHeader EmailHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailHeader>("EventManagementSystemModel.FK_MailTemplates_EmailHeaders", "EmailHeader").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailHeader>("EventManagementSystemModel.FK_MailTemplates_EmailHeaders", "EmailHeader").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmailHeader> EmailHeaderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailHeader>("EventManagementSystemModel.FK_MailTemplates_EmailHeaders", "EmailHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmailHeader>("EventManagementSystemModel.FK_MailTemplates_EmailHeaders", "EmailHeader", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MailTemplateCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MailTemplateCategory : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MailTemplateCategory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MailTemplateCategory CreateMailTemplateCategory(global::System.Guid id, global::System.String name)
        {
            MailTemplateCategory mailTemplateCategory = new MailTemplateCategory();
            mailTemplateCategory.ID = id;
            mailTemplateCategory.Name = name;
            return mailTemplateCategory;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MailTemplates_MailTemplateCategories", "MailTemplate")]
        public EntityCollection<MailTemplate> MailTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MailTemplate>("EventManagementSystemModel.FK_MailTemplates_MailTemplateCategories", "MailTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MailTemplate>("EventManagementSystemModel.FK_MailTemplates_MailTemplateCategories", "MailTemplate", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MailTemplateType")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MailTemplateType : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MailTemplateType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MailTemplateType CreateMailTemplateType(global::System.Guid id, global::System.String name)
        {
            MailTemplateType mailTemplateType = new MailTemplateType();
            mailTemplateType.ID = id;
            mailTemplateType.Name = name;
            return mailTemplateType;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MailTemplates_MailTemplateTypes", "MailTemplate")]
        public EntityCollection<MailTemplate> MailTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MailTemplate>("EventManagementSystemModel.FK_MailTemplates_MailTemplateTypes", "MailTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MailTemplate>("EventManagementSystemModel.FK_MailTemplates_MailTemplateTypes", "MailTemplate", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Member")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Member : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Member object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="renewalDate">Initial value of the RenewalDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Member CreateMember(global::System.Guid id, global::System.Guid categoryID, global::System.DateTime startDate, global::System.DateTime renewalDate, global::System.Int32 status)
        {
            Member member = new Member();
            member.ID = id;
            member.CategoryID = categoryID;
            member.StartDate = startDate;
            member.RenewalDate = renewalDate;
            member.Status = status;
            return member;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value, "CategoryID");
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Guid _CategoryID;
        partial void OnCategoryIDChanging(global::System.Guid value);
        partial void OnCategoryIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime RenewalDate
        {
            get
            {
                return _RenewalDate;
            }
            set
            {
                OnRenewalDateChanging(value);
                ReportPropertyChanging("RenewalDate");
                _RenewalDate = StructuralObject.SetValidValue(value, "RenewalDate");
                ReportPropertyChanged("RenewalDate");
                OnRenewalDateChanged();
            }
        }
        private global::System.DateTime _RenewalDate;
        partial void OnRenewalDateChanging(global::System.DateTime value);
        partial void OnRenewalDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResignDate
        {
            get
            {
                return _ResignDate;
            }
            set
            {
                OnResignDateChanging(value);
                ReportPropertyChanging("ResignDate");
                _ResignDate = StructuralObject.SetValidValue(value, "ResignDate");
                ReportPropertyChanged("ResignDate");
                OnResignDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResignDate;
        partial void OnResignDateChanging(Nullable<global::System.DateTime> value);
        partial void OnResignDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String MemberReference
        {
            get
            {
                return _MemberReference;
            }
            set
            {
                OnMemberReferenceChanging(value);
                ReportPropertyChanging("MemberReference");
                _MemberReference = StructuralObject.SetValidValue(value, true, "MemberReference");
                ReportPropertyChanged("MemberReference");
                OnMemberReferenceChanged();
            }
        }
        private global::System.String _MemberReference;
        partial void OnMemberReferenceChanging(global::System.String value);
        partial void OnMemberReferenceChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Members_Contacts", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_Members_Contacts", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_Members_Contacts", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("EventManagementSystemModel.FK_Members_Contacts", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("EventManagementSystemModel.FK_Members_Contacts", "Contact", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Members_MembershipCategories", "MembershipCategory")]
        public MembershipCategory MembershipCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_Members_MembershipCategories", "MembershipCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_Members_MembershipCategories", "MembershipCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipCategory> MembershipCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_Members_MembershipCategories", "MembershipCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_Members_MembershipCategories", "MembershipCategory", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MemberNotes_Members", "MemberNote")]
        public EntityCollection<MemberNote> MemberNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MemberNote>("EventManagementSystemModel.FK_MemberNotes_Members", "MemberNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MemberNote>("EventManagementSystemModel.FK_MemberNotes_Members", "MemberNote", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipUpdates_Members", "MembershipUpdate")]
        public EntityCollection<MembershipUpdate> MembershipUpdates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipUpdate>("EventManagementSystemModel.FK_MembershipUpdates_Members", "MembershipUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipUpdate>("EventManagementSystemModel.FK_MembershipUpdates_Members", "MembershipUpdate", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MemberNote")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MemberNote : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MemberNote object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="memberID">Initial value of the MemberID property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        /// <param name="addedByID">Initial value of the AddedByID property.</param>
        public static MemberNote CreateMemberNote(global::System.Guid id, global::System.Guid memberID, global::System.DateTime creationDate, global::System.String note, global::System.Guid addedByID)
        {
            MemberNote memberNote = new MemberNote();
            memberNote.ID = id;
            memberNote.MemberID = memberID;
            memberNote.CreationDate = creationDate;
            memberNote.Note = note;
            memberNote.AddedByID = addedByID;
            return memberNote;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                OnMemberIDChanging(value);
                ReportPropertyChanging("MemberID");
                _MemberID = StructuralObject.SetValidValue(value, "MemberID");
                ReportPropertyChanged("MemberID");
                OnMemberIDChanged();
            }
        }
        private global::System.Guid _MemberID;
        partial void OnMemberIDChanging(global::System.Guid value);
        partial void OnMemberIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid AddedByID
        {
            get
            {
                return _AddedByID;
            }
            set
            {
                OnAddedByIDChanging(value);
                ReportPropertyChanging("AddedByID");
                _AddedByID = StructuralObject.SetValidValue(value, "AddedByID");
                ReportPropertyChanged("AddedByID");
                OnAddedByIDChanged();
            }
        }
        private global::System.Guid _AddedByID;
        partial void OnAddedByIDChanging(global::System.Guid value);
        partial void OnAddedByIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EditedDate
        {
            get
            {
                return _EditedDate;
            }
            set
            {
                OnEditedDateChanging(value);
                ReportPropertyChanging("EditedDate");
                _EditedDate = StructuralObject.SetValidValue(value, "EditedDate");
                ReportPropertyChanged("EditedDate");
                OnEditedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EditedDate;
        partial void OnEditedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEditedDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EditedByID
        {
            get
            {
                return _EditedByID;
            }
            set
            {
                OnEditedByIDChanging(value);
                ReportPropertyChanging("EditedByID");
                _EditedByID = StructuralObject.SetValidValue(value, "EditedByID");
                ReportPropertyChanged("EditedByID");
                OnEditedByIDChanged();
            }
        }
        private Nullable<global::System.Guid> _EditedByID;
        partial void OnEditedByIDChanging(Nullable<global::System.Guid> value);
        partial void OnEditedByIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MemberNotes_Members", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("EventManagementSystemModel.FK_MemberNotes_Members", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("EventManagementSystemModel.FK_MemberNotes_Members", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("EventManagementSystemModel.FK_MemberNotes_Members", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("EventManagementSystemModel.FK_MemberNotes_Members", "Member", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MemberNotes_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_MemberNotes_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_MemberNotes_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_MemberNotes_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_MemberNotes_Users", "User", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MemberNotes_Users1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_MemberNotes_Users1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_MemberNotes_Users1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_MemberNotes_Users1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_MemberNotes_Users1", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipCategory : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipCategory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="currentCategory">Initial value of the CurrentCategory property.</param>
        /// <param name="membershipGroupStyleID">Initial value of the MembershipGroupStyleID property.</param>
        /// <param name="membershipGroupAgeID">Initial value of the MembershipGroupAgeID property.</param>
        /// <param name="membershipGroupID">Initial value of the MembershipGroupID property.</param>
        /// <param name="categoryType">Initial value of the CategoryType property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="maxRoundsPerWeek">Initial value of the MaxRoundsPerWeek property.</param>
        /// <param name="maxRoundsPerMonth">Initial value of the MaxRoundsPerMonth property.</param>
        /// <param name="maxRoundsPerYear">Initial value of the MaxRoundsPerYear property.</param>
        public static MembershipCategory CreateMembershipCategory(global::System.Guid id, global::System.String name, global::System.Boolean currentCategory, global::System.Guid membershipGroupStyleID, global::System.Guid membershipGroupAgeID, global::System.Guid membershipGroupID, global::System.Int32 categoryType, global::System.Int32 gender, global::System.Int32 maxRoundsPerWeek, global::System.Int32 maxRoundsPerMonth, global::System.Int32 maxRoundsPerYear)
        {
            MembershipCategory membershipCategory = new MembershipCategory();
            membershipCategory.ID = id;
            membershipCategory.Name = name;
            membershipCategory.CurrentCategory = currentCategory;
            membershipCategory.MembershipGroupStyleID = membershipGroupStyleID;
            membershipCategory.MembershipGroupAgeID = membershipGroupAgeID;
            membershipCategory.MembershipGroupID = membershipGroupID;
            membershipCategory.CategoryType = categoryType;
            membershipCategory.Gender = gender;
            membershipCategory.MaxRoundsPerWeek = maxRoundsPerWeek;
            membershipCategory.MaxRoundsPerMonth = maxRoundsPerMonth;
            membershipCategory.MaxRoundsPerYear = maxRoundsPerYear;
            return membershipCategory;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean CurrentCategory
        {
            get
            {
                return _CurrentCategory;
            }
            set
            {
                OnCurrentCategoryChanging(value);
                ReportPropertyChanging("CurrentCategory");
                _CurrentCategory = StructuralObject.SetValidValue(value, "CurrentCategory");
                ReportPropertyChanged("CurrentCategory");
                OnCurrentCategoryChanged();
            }
        }
        private global::System.Boolean _CurrentCategory;
        partial void OnCurrentCategoryChanging(global::System.Boolean value);
        partial void OnCurrentCategoryChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid MembershipGroupStyleID
        {
            get
            {
                return _MembershipGroupStyleID;
            }
            set
            {
                OnMembershipGroupStyleIDChanging(value);
                ReportPropertyChanging("MembershipGroupStyleID");
                _MembershipGroupStyleID = StructuralObject.SetValidValue(value, "MembershipGroupStyleID");
                ReportPropertyChanged("MembershipGroupStyleID");
                OnMembershipGroupStyleIDChanged();
            }
        }
        private global::System.Guid _MembershipGroupStyleID;
        partial void OnMembershipGroupStyleIDChanging(global::System.Guid value);
        partial void OnMembershipGroupStyleIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid MembershipGroupAgeID
        {
            get
            {
                return _MembershipGroupAgeID;
            }
            set
            {
                OnMembershipGroupAgeIDChanging(value);
                ReportPropertyChanging("MembershipGroupAgeID");
                _MembershipGroupAgeID = StructuralObject.SetValidValue(value, "MembershipGroupAgeID");
                ReportPropertyChanged("MembershipGroupAgeID");
                OnMembershipGroupAgeIDChanged();
            }
        }
        private global::System.Guid _MembershipGroupAgeID;
        partial void OnMembershipGroupAgeIDChanging(global::System.Guid value);
        partial void OnMembershipGroupAgeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid MembershipGroupID
        {
            get
            {
                return _MembershipGroupID;
            }
            set
            {
                OnMembershipGroupIDChanging(value);
                ReportPropertyChanging("MembershipGroupID");
                _MembershipGroupID = StructuralObject.SetValidValue(value, "MembershipGroupID");
                ReportPropertyChanged("MembershipGroupID");
                OnMembershipGroupIDChanged();
            }
        }
        private global::System.Guid _MembershipGroupID;
        partial void OnMembershipGroupIDChanging(global::System.Guid value);
        partial void OnMembershipGroupIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryType
        {
            get
            {
                return _CategoryType;
            }
            set
            {
                OnCategoryTypeChanging(value);
                ReportPropertyChanging("CategoryType");
                _CategoryType = StructuralObject.SetValidValue(value, "CategoryType");
                ReportPropertyChanged("CategoryType");
                OnCategoryTypeChanged();
            }
        }
        private global::System.Int32 _CategoryType;
        partial void OnCategoryTypeChanging(global::System.Int32 value);
        partial void OnCategoryTypeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, "Gender");
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.Int32 _Gender;
        partial void OnGenderChanging(global::System.Int32 value);
        partial void OnGenderChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxRoundsPerWeek
        {
            get
            {
                return _MaxRoundsPerWeek;
            }
            set
            {
                OnMaxRoundsPerWeekChanging(value);
                ReportPropertyChanging("MaxRoundsPerWeek");
                _MaxRoundsPerWeek = StructuralObject.SetValidValue(value, "MaxRoundsPerWeek");
                ReportPropertyChanged("MaxRoundsPerWeek");
                OnMaxRoundsPerWeekChanged();
            }
        }
        private global::System.Int32 _MaxRoundsPerWeek;
        partial void OnMaxRoundsPerWeekChanging(global::System.Int32 value);
        partial void OnMaxRoundsPerWeekChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StartDay
        {
            get
            {
                return _StartDay;
            }
            set
            {
                OnStartDayChanging(value);
                ReportPropertyChanging("StartDay");
                _StartDay = StructuralObject.SetValidValue(value, "StartDay");
                ReportPropertyChanged("StartDay");
                OnStartDayChanged();
            }
        }
        private Nullable<global::System.Int32> _StartDay;
        partial void OnStartDayChanging(Nullable<global::System.Int32> value);
        partial void OnStartDayChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxRoundsPerMonth
        {
            get
            {
                return _MaxRoundsPerMonth;
            }
            set
            {
                OnMaxRoundsPerMonthChanging(value);
                ReportPropertyChanging("MaxRoundsPerMonth");
                _MaxRoundsPerMonth = StructuralObject.SetValidValue(value, "MaxRoundsPerMonth");
                ReportPropertyChanged("MaxRoundsPerMonth");
                OnMaxRoundsPerMonthChanged();
            }
        }
        private global::System.Int32 _MaxRoundsPerMonth;
        partial void OnMaxRoundsPerMonthChanging(global::System.Int32 value);
        partial void OnMaxRoundsPerMonthChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StartDateForMonth
        {
            get
            {
                return _StartDateForMonth;
            }
            set
            {
                OnStartDateForMonthChanging(value);
                ReportPropertyChanging("StartDateForMonth");
                _StartDateForMonth = StructuralObject.SetValidValue(value, "StartDateForMonth");
                ReportPropertyChanged("StartDateForMonth");
                OnStartDateForMonthChanged();
            }
        }
        private Nullable<global::System.Int32> _StartDateForMonth;
        partial void OnStartDateForMonthChanging(Nullable<global::System.Int32> value);
        partial void OnStartDateForMonthChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxRoundsPerYear
        {
            get
            {
                return _MaxRoundsPerYear;
            }
            set
            {
                OnMaxRoundsPerYearChanging(value);
                ReportPropertyChanging("MaxRoundsPerYear");
                _MaxRoundsPerYear = StructuralObject.SetValidValue(value, "MaxRoundsPerYear");
                ReportPropertyChanged("MaxRoundsPerYear");
                OnMaxRoundsPerYearChanged();
            }
        }
        private global::System.Int32 _MaxRoundsPerYear;
        partial void OnMaxRoundsPerYearChanging(global::System.Int32 value);
        partial void OnMaxRoundsPerYearChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StartDateForYear
        {
            get
            {
                return _StartDateForYear;
            }
            set
            {
                OnStartDateForYearChanging(value);
                ReportPropertyChanging("StartDateForYear");
                _StartDateForYear = StructuralObject.SetValidValue(value, "StartDateForYear");
                ReportPropertyChanged("StartDateForYear");
                OnStartDateForYearChanged();
            }
        }
        private Nullable<global::System.Int32> _StartDateForYear;
        partial void OnStartDateForYearChanging(Nullable<global::System.Int32> value);
        partial void OnStartDateForYearChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token1
        {
            get
            {
                return _Token1;
            }
            set
            {
                OnToken1Changing(value);
                ReportPropertyChanging("Token1");
                _Token1 = StructuralObject.SetValidValue(value, true, "Token1");
                ReportPropertyChanged("Token1");
                OnToken1Changed();
            }
        }
        private global::System.String _Token1;
        partial void OnToken1Changing(global::System.String value);
        partial void OnToken1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token2
        {
            get
            {
                return _Token2;
            }
            set
            {
                OnToken2Changing(value);
                ReportPropertyChanging("Token2");
                _Token2 = StructuralObject.SetValidValue(value, true, "Token2");
                ReportPropertyChanged("Token2");
                OnToken2Changed();
            }
        }
        private global::System.String _Token2;
        partial void OnToken2Changing(global::System.String value);
        partial void OnToken2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token3
        {
            get
            {
                return _Token3;
            }
            set
            {
                OnToken3Changing(value);
                ReportPropertyChanging("Token3");
                _Token3 = StructuralObject.SetValidValue(value, true, "Token3");
                ReportPropertyChanged("Token3");
                OnToken3Changed();
            }
        }
        private global::System.String _Token3;
        partial void OnToken3Changing(global::System.String value);
        partial void OnToken3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token4
        {
            get
            {
                return _Token4;
            }
            set
            {
                OnToken4Changing(value);
                ReportPropertyChanging("Token4");
                _Token4 = StructuralObject.SetValidValue(value, true, "Token4");
                ReportPropertyChanged("Token4");
                OnToken4Changed();
            }
        }
        private global::System.String _Token4;
        partial void OnToken4Changing(global::System.String value);
        partial void OnToken4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token5
        {
            get
            {
                return _Token5;
            }
            set
            {
                OnToken5Changing(value);
                ReportPropertyChanging("Token5");
                _Token5 = StructuralObject.SetValidValue(value, true, "Token5");
                ReportPropertyChanged("Token5");
                OnToken5Changed();
            }
        }
        private global::System.String _Token5;
        partial void OnToken5Changing(global::System.String value);
        partial void OnToken5Changed();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipCategories_MembershipGroupAges", "MembershipGroupAge")]
        public MembershipGroupAge MembershipGroupAge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroupAge>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroupAges", "MembershipGroupAge").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroupAge>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroupAges", "MembershipGroupAge").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipGroupAge> MembershipGroupAgeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroupAge>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroupAges", "MembershipGroupAge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipGroupAge>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroupAges", "MembershipGroupAge", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipCategories_MembershipGroups", "MembershipGroup")]
        public MembershipGroup MembershipGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroup>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroups", "MembershipGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroup>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroups", "MembershipGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipGroup> MembershipGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroup>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroups", "MembershipGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipGroup>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroups", "MembershipGroup", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipCategories_MembershipGroupStyles", "MembershipGroupStyle")]
        public MembershipGroupStyle MembershipGroupStyle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroupStyle>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroupStyles", "MembershipGroupStyle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroupStyle>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroupStyles", "MembershipGroupStyle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipGroupStyle> MembershipGroupStyleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroupStyle>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroupStyles", "MembershipGroupStyle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipGroupStyle>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroupStyles", "MembershipGroupStyle", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipLinkTypes_MembershipCategories", "MembershipLinkType")]
        public EntityCollection<MembershipLinkType> MembershipLinkTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipLinkType>("EventManagementSystemModel.FK_MembershipLinkTypes_MembershipCategories", "MembershipLinkType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipLinkType>("EventManagementSystemModel.FK_MembershipLinkTypes_MembershipCategories", "MembershipLinkType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipLinkTypes_MembershipCategories1", "MembershipLinkType")]
        public EntityCollection<MembershipLinkType> MembershipLinkTypes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipLinkType>("EventManagementSystemModel.FK_MembershipLinkTypes_MembershipCategories1", "MembershipLinkType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipLinkType>("EventManagementSystemModel.FK_MembershipLinkTypes_MembershipCategories1", "MembershipLinkType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipCategoryGroupDefaults_MembershipCategories", "MembershipCategoryGroupDefault")]
        public MembershipCategoryGroupDefault MembershipCategoryGroupDefault
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategoryGroupDefault>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaults_MembershipCategories", "MembershipCategoryGroupDefault").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategoryGroupDefault>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaults_MembershipCategories", "MembershipCategoryGroupDefault").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipCategoryGroupDefault> MembershipCategoryGroupDefaultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategoryGroupDefault>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaults_MembershipCategories", "MembershipCategoryGroupDefault");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipCategoryGroupDefault>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaults_MembershipCategories", "MembershipCategoryGroupDefault", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents_MembershipCategories", "MembershipFullPaymentComponent")]
        public MembershipFullPaymentComponent MembershipFullPaymentComponent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents_MembershipCategories", "MembershipFullPaymentComponent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents_MembershipCategories", "MembershipFullPaymentComponent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipFullPaymentComponent> MembershipFullPaymentComponentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents_MembershipCategories", "MembershipFullPaymentComponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents_MembershipCategories", "MembershipFullPaymentComponent", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts_MembershipCategories", "MembershipMonthlyPaymentOngoingCost")]
        public MembershipMonthlyPaymentOngoingCost MembershipMonthlyPaymentOngoingCost
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipMonthlyPaymentOngoingCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts_MembershipCategories", "MembershipMonthlyPaymentOngoingCost").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipMonthlyPaymentOngoingCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts_MembershipCategories", "MembershipMonthlyPaymentOngoingCost").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipMonthlyPaymentOngoingCost> MembershipMonthlyPaymentOngoingCostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipMonthlyPaymentOngoingCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts_MembershipCategories", "MembershipMonthlyPaymentOngoingCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipMonthlyPaymentOngoingCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts_MembershipCategories", "MembershipMonthlyPaymentOngoingCost", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts_MembershipCategories", "MembershipMonthlyPaymentUpFrontCost")]
        public MembershipMonthlyPaymentUpFrontCost MembershipMonthlyPaymentUpFrontCost
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts_MembershipCategories", "MembershipMonthlyPaymentUpFrontCost").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts_MembershipCategories", "MembershipMonthlyPaymentUpFrontCost").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipMonthlyPaymentUpFrontCost> MembershipMonthlyPaymentUpFrontCostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts_MembershipCategories", "MembershipMonthlyPaymentUpFrontCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts_MembershipCategories", "MembershipMonthlyPaymentUpFrontCost", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Members_MembershipCategories", "Member")]
        public EntityCollection<Member> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Member>("EventManagementSystemModel.FK_Members_MembershipCategories", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Member>("EventManagementSystemModel.FK_Members_MembershipCategories", "Member", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipCategoryGroupDefault")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipCategoryGroupDefault : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipCategoryGroupDefault object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isMonAvailable">Initial value of the IsMonAvailable property.</param>
        /// <param name="isTuesAvailable">Initial value of the IsTuesAvailable property.</param>
        /// <param name="isWedAvailable">Initial value of the IsWedAvailable property.</param>
        /// <param name="isThursAvailable">Initial value of the IsThursAvailable property.</param>
        /// <param name="isFriAvailable">Initial value of the IsFriAvailable property.</param>
        /// <param name="isSatAvailable">Initial value of the IsSatAvailable property.</param>
        /// <param name="isSunAvailable">Initial value of the IsSunAvailable property.</param>
        /// <param name="memberOnBankHolidays">Initial value of the MemberOnBankHolidays property.</param>
        /// <param name="memberAtChristmasWeek">Initial value of the MemberAtChristmasWeek property.</param>
        public static MembershipCategoryGroupDefault CreateMembershipCategoryGroupDefault(global::System.Guid id, global::System.String name, global::System.Boolean isMonAvailable, global::System.Boolean isTuesAvailable, global::System.Boolean isWedAvailable, global::System.Boolean isThursAvailable, global::System.Boolean isFriAvailable, global::System.Boolean isSatAvailable, global::System.Boolean isSunAvailable, global::System.Boolean memberOnBankHolidays, global::System.Boolean memberAtChristmasWeek)
        {
            MembershipCategoryGroupDefault membershipCategoryGroupDefault = new MembershipCategoryGroupDefault();
            membershipCategoryGroupDefault.ID = id;
            membershipCategoryGroupDefault.Name = name;
            membershipCategoryGroupDefault.IsMonAvailable = isMonAvailable;
            membershipCategoryGroupDefault.IsTuesAvailable = isTuesAvailable;
            membershipCategoryGroupDefault.IsWedAvailable = isWedAvailable;
            membershipCategoryGroupDefault.IsThursAvailable = isThursAvailable;
            membershipCategoryGroupDefault.IsFriAvailable = isFriAvailable;
            membershipCategoryGroupDefault.IsSatAvailable = isSatAvailable;
            membershipCategoryGroupDefault.IsSunAvailable = isSunAvailable;
            membershipCategoryGroupDefault.MemberOnBankHolidays = memberOnBankHolidays;
            membershipCategoryGroupDefault.MemberAtChristmasWeek = memberAtChristmasWeek;
            return membershipCategoryGroupDefault;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMonAvailable
        {
            get
            {
                return _IsMonAvailable;
            }
            set
            {
                OnIsMonAvailableChanging(value);
                ReportPropertyChanging("IsMonAvailable");
                _IsMonAvailable = StructuralObject.SetValidValue(value, "IsMonAvailable");
                ReportPropertyChanged("IsMonAvailable");
                OnIsMonAvailableChanged();
            }
        }
        private global::System.Boolean _IsMonAvailable;
        partial void OnIsMonAvailableChanging(global::System.Boolean value);
        partial void OnIsMonAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTuesAvailable
        {
            get
            {
                return _IsTuesAvailable;
            }
            set
            {
                OnIsTuesAvailableChanging(value);
                ReportPropertyChanging("IsTuesAvailable");
                _IsTuesAvailable = StructuralObject.SetValidValue(value, "IsTuesAvailable");
                ReportPropertyChanged("IsTuesAvailable");
                OnIsTuesAvailableChanged();
            }
        }
        private global::System.Boolean _IsTuesAvailable;
        partial void OnIsTuesAvailableChanging(global::System.Boolean value);
        partial void OnIsTuesAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsWedAvailable
        {
            get
            {
                return _IsWedAvailable;
            }
            set
            {
                OnIsWedAvailableChanging(value);
                ReportPropertyChanging("IsWedAvailable");
                _IsWedAvailable = StructuralObject.SetValidValue(value, "IsWedAvailable");
                ReportPropertyChanged("IsWedAvailable");
                OnIsWedAvailableChanged();
            }
        }
        private global::System.Boolean _IsWedAvailable;
        partial void OnIsWedAvailableChanging(global::System.Boolean value);
        partial void OnIsWedAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsThursAvailable
        {
            get
            {
                return _IsThursAvailable;
            }
            set
            {
                OnIsThursAvailableChanging(value);
                ReportPropertyChanging("IsThursAvailable");
                _IsThursAvailable = StructuralObject.SetValidValue(value, "IsThursAvailable");
                ReportPropertyChanged("IsThursAvailable");
                OnIsThursAvailableChanged();
            }
        }
        private global::System.Boolean _IsThursAvailable;
        partial void OnIsThursAvailableChanging(global::System.Boolean value);
        partial void OnIsThursAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFriAvailable
        {
            get
            {
                return _IsFriAvailable;
            }
            set
            {
                OnIsFriAvailableChanging(value);
                ReportPropertyChanging("IsFriAvailable");
                _IsFriAvailable = StructuralObject.SetValidValue(value, "IsFriAvailable");
                ReportPropertyChanged("IsFriAvailable");
                OnIsFriAvailableChanged();
            }
        }
        private global::System.Boolean _IsFriAvailable;
        partial void OnIsFriAvailableChanging(global::System.Boolean value);
        partial void OnIsFriAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSatAvailable
        {
            get
            {
                return _IsSatAvailable;
            }
            set
            {
                OnIsSatAvailableChanging(value);
                ReportPropertyChanging("IsSatAvailable");
                _IsSatAvailable = StructuralObject.SetValidValue(value, "IsSatAvailable");
                ReportPropertyChanged("IsSatAvailable");
                OnIsSatAvailableChanged();
            }
        }
        private global::System.Boolean _IsSatAvailable;
        partial void OnIsSatAvailableChanging(global::System.Boolean value);
        partial void OnIsSatAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSunAvailable
        {
            get
            {
                return _IsSunAvailable;
            }
            set
            {
                OnIsSunAvailableChanging(value);
                ReportPropertyChanging("IsSunAvailable");
                _IsSunAvailable = StructuralObject.SetValidValue(value, "IsSunAvailable");
                ReportPropertyChanged("IsSunAvailable");
                OnIsSunAvailableChanged();
            }
        }
        private global::System.Boolean _IsSunAvailable;
        partial void OnIsSunAvailableChanging(global::System.Boolean value);
        partial void OnIsSunAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean MemberOnBankHolidays
        {
            get
            {
                return _MemberOnBankHolidays;
            }
            set
            {
                OnMemberOnBankHolidaysChanging(value);
                ReportPropertyChanging("MemberOnBankHolidays");
                _MemberOnBankHolidays = StructuralObject.SetValidValue(value, "MemberOnBankHolidays");
                ReportPropertyChanged("MemberOnBankHolidays");
                OnMemberOnBankHolidaysChanged();
            }
        }
        private global::System.Boolean _MemberOnBankHolidays;
        partial void OnMemberOnBankHolidaysChanging(global::System.Boolean value);
        partial void OnMemberOnBankHolidaysChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean MemberAtChristmasWeek
        {
            get
            {
                return _MemberAtChristmasWeek;
            }
            set
            {
                OnMemberAtChristmasWeekChanging(value);
                ReportPropertyChanging("MemberAtChristmasWeek");
                _MemberAtChristmasWeek = StructuralObject.SetValidValue(value, "MemberAtChristmasWeek");
                ReportPropertyChanged("MemberAtChristmasWeek");
                OnMemberAtChristmasWeekChanged();
            }
        }
        private global::System.Boolean _MemberAtChristmasWeek;
        partial void OnMemberAtChristmasWeekChanging(global::System.Boolean value);
        partial void OnMemberAtChristmasWeekChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token1
        {
            get
            {
                return _Token1;
            }
            set
            {
                OnToken1Changing(value);
                ReportPropertyChanging("Token1");
                _Token1 = StructuralObject.SetValidValue(value, true, "Token1");
                ReportPropertyChanged("Token1");
                OnToken1Changed();
            }
        }
        private global::System.String _Token1;
        partial void OnToken1Changing(global::System.String value);
        partial void OnToken1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token2
        {
            get
            {
                return _Token2;
            }
            set
            {
                OnToken2Changing(value);
                ReportPropertyChanging("Token2");
                _Token2 = StructuralObject.SetValidValue(value, true, "Token2");
                ReportPropertyChanged("Token2");
                OnToken2Changed();
            }
        }
        private global::System.String _Token2;
        partial void OnToken2Changing(global::System.String value);
        partial void OnToken2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token3
        {
            get
            {
                return _Token3;
            }
            set
            {
                OnToken3Changing(value);
                ReportPropertyChanging("Token3");
                _Token3 = StructuralObject.SetValidValue(value, true, "Token3");
                ReportPropertyChanged("Token3");
                OnToken3Changed();
            }
        }
        private global::System.String _Token3;
        partial void OnToken3Changing(global::System.String value);
        partial void OnToken3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token4
        {
            get
            {
                return _Token4;
            }
            set
            {
                OnToken4Changing(value);
                ReportPropertyChanging("Token4");
                _Token4 = StructuralObject.SetValidValue(value, true, "Token4");
                ReportPropertyChanged("Token4");
                OnToken4Changed();
            }
        }
        private global::System.String _Token4;
        partial void OnToken4Changing(global::System.String value);
        partial void OnToken4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token5
        {
            get
            {
                return _Token5;
            }
            set
            {
                OnToken5Changing(value);
                ReportPropertyChanging("Token5");
                _Token5 = StructuralObject.SetValidValue(value, true, "Token5");
                ReportPropertyChanged("Token5");
                OnToken5Changed();
            }
        }
        private global::System.String _Token5;
        partial void OnToken5Changing(global::System.String value);
        partial void OnToken5Changed();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipCategoryGroupDefaults_MembershipCategories", "MembershipCategory")]
        public MembershipCategory MembershipCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaults_MembershipCategories", "MembershipCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaults_MembershipCategories", "MembershipCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipCategory> MembershipCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaults_MembershipCategories", "MembershipCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaults_MembershipCategories", "MembershipCategory", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipCategoryGroupDefaultEPOS_MembershipCategoryGroupDefaults", "MembershipCategoryGroupDefaultEPOS")]
        public MembershipCategoryGroupDefaultEPOS MembershipCategoryGroupDefaultEPOS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategoryGroupDefaultEPOS>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaultEPOS_MembershipCategoryGroupDefaults", "MembershipCategoryGroupDefaultEPOS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategoryGroupDefaultEPOS>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaultEPOS_MembershipCategoryGroupDefaults", "MembershipCategoryGroupDefaultEPOS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipCategoryGroupDefaultEPOS> MembershipCategoryGroupDefaultEPOSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategoryGroupDefaultEPOS>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaultEPOS_MembershipCategoryGroupDefaults", "MembershipCategoryGroupDefaultEPOS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipCategoryGroupDefaultEPOS>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaultEPOS_MembershipCategoryGroupDefaults", "MembershipCategoryGroupDefaultEPOS", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipCategoryGroupDefaultEPOS")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipCategoryGroupDefaultEPOS : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipCategoryGroupDefaultEPOS object.
        /// </summary>
        /// <param name="allowedClubCard">Initial value of the AllowedClubCard property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="pointsBasedMembership">Initial value of the PointsBasedMembership property.</param>
        public static MembershipCategoryGroupDefaultEPOS CreateMembershipCategoryGroupDefaultEPOS(global::System.Boolean allowedClubCard, global::System.Guid id, global::System.Boolean pointsBasedMembership)
        {
            MembershipCategoryGroupDefaultEPOS membershipCategoryGroupDefaultEPOS = new MembershipCategoryGroupDefaultEPOS();
            membershipCategoryGroupDefaultEPOS.AllowedClubCard = allowedClubCard;
            membershipCategoryGroupDefaultEPOS.ID = id;
            membershipCategoryGroupDefaultEPOS.PointsBasedMembership = pointsBasedMembership;
            return membershipCategoryGroupDefaultEPOS;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowedClubCard
        {
            get
            {
                return _AllowedClubCard;
            }
            set
            {
                OnAllowedClubCardChanging(value);
                ReportPropertyChanging("AllowedClubCard");
                _AllowedClubCard = StructuralObject.SetValidValue(value, "AllowedClubCard");
                ReportPropertyChanged("AllowedClubCard");
                OnAllowedClubCardChanged();
            }
        }
        private global::System.Boolean _AllowedClubCard;
        partial void OnAllowedClubCardChanging(global::System.Boolean value);
        partial void OnAllowedClubCardChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OverdraftLimit1
        {
            get
            {
                return _OverdraftLimit1;
            }
            set
            {
                OnOverdraftLimit1Changing(value);
                ReportPropertyChanging("OverdraftLimit1");
                _OverdraftLimit1 = StructuralObject.SetValidValue(value, "OverdraftLimit1");
                ReportPropertyChanged("OverdraftLimit1");
                OnOverdraftLimit1Changed();
            }
        }
        private Nullable<global::System.Int32> _OverdraftLimit1;
        partial void OnOverdraftLimit1Changing(Nullable<global::System.Int32> value);
        partial void OnOverdraftLimit1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OverdraftLimit2
        {
            get
            {
                return _OverdraftLimit2;
            }
            set
            {
                OnOverdraftLimit2Changing(value);
                ReportPropertyChanging("OverdraftLimit2");
                _OverdraftLimit2 = StructuralObject.SetValidValue(value, "OverdraftLimit2");
                ReportPropertyChanged("OverdraftLimit2");
                OnOverdraftLimit2Changed();
            }
        }
        private Nullable<global::System.Int32> _OverdraftLimit2;
        partial void OnOverdraftLimit2Changing(Nullable<global::System.Int32> value);
        partial void OnOverdraftLimit2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountRateAll
        {
            get
            {
                return _DiscountRateAll;
            }
            set
            {
                OnDiscountRateAllChanging(value);
                ReportPropertyChanging("DiscountRateAll");
                _DiscountRateAll = StructuralObject.SetValidValue(value, "DiscountRateAll");
                ReportPropertyChanged("DiscountRateAll");
                OnDiscountRateAllChanged();
            }
        }
        private Nullable<global::System.Double> _DiscountRateAll;
        partial void OnDiscountRateAllChanging(Nullable<global::System.Double> value);
        partial void OnDiscountRateAllChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountRate1
        {
            get
            {
                return _DiscountRate1;
            }
            set
            {
                OnDiscountRate1Changing(value);
                ReportPropertyChanging("DiscountRate1");
                _DiscountRate1 = StructuralObject.SetValidValue(value, "DiscountRate1");
                ReportPropertyChanged("DiscountRate1");
                OnDiscountRate1Changed();
            }
        }
        private Nullable<global::System.Double> _DiscountRate1;
        partial void OnDiscountRate1Changing(Nullable<global::System.Double> value);
        partial void OnDiscountRate1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountRate2
        {
            get
            {
                return _DiscountRate2;
            }
            set
            {
                OnDiscountRate2Changing(value);
                ReportPropertyChanging("DiscountRate2");
                _DiscountRate2 = StructuralObject.SetValidValue(value, "DiscountRate2");
                ReportPropertyChanged("DiscountRate2");
                OnDiscountRate2Changed();
            }
        }
        private Nullable<global::System.Double> _DiscountRate2;
        partial void OnDiscountRate2Changing(Nullable<global::System.Double> value);
        partial void OnDiscountRate2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountRate3
        {
            get
            {
                return _DiscountRate3;
            }
            set
            {
                OnDiscountRate3Changing(value);
                ReportPropertyChanging("DiscountRate3");
                _DiscountRate3 = StructuralObject.SetValidValue(value, "DiscountRate3");
                ReportPropertyChanged("DiscountRate3");
                OnDiscountRate3Changed();
            }
        }
        private Nullable<global::System.Double> _DiscountRate3;
        partial void OnDiscountRate3Changing(Nullable<global::System.Double> value);
        partial void OnDiscountRate3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountRate4
        {
            get
            {
                return _DiscountRate4;
            }
            set
            {
                OnDiscountRate4Changing(value);
                ReportPropertyChanging("DiscountRate4");
                _DiscountRate4 = StructuralObject.SetValidValue(value, "DiscountRate4");
                ReportPropertyChanged("DiscountRate4");
                OnDiscountRate4Changed();
            }
        }
        private Nullable<global::System.Double> _DiscountRate4;
        partial void OnDiscountRate4Changing(Nullable<global::System.Double> value);
        partial void OnDiscountRate4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountRate5
        {
            get
            {
                return _DiscountRate5;
            }
            set
            {
                OnDiscountRate5Changing(value);
                ReportPropertyChanging("DiscountRate5");
                _DiscountRate5 = StructuralObject.SetValidValue(value, "DiscountRate5");
                ReportPropertyChanged("DiscountRate5");
                OnDiscountRate5Changed();
            }
        }
        private Nullable<global::System.Double> _DiscountRate5;
        partial void OnDiscountRate5Changing(Nullable<global::System.Double> value);
        partial void OnDiscountRate5Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String DisplayMessage
        {
            get
            {
                return _DisplayMessage;
            }
            set
            {
                OnDisplayMessageChanging(value);
                ReportPropertyChanging("DisplayMessage");
                _DisplayMessage = StructuralObject.SetValidValue(value, true, "DisplayMessage");
                ReportPropertyChanged("DisplayMessage");
                OnDisplayMessageChanged();
            }
        }
        private global::System.String _DisplayMessage;
        partial void OnDisplayMessageChanging(global::System.String value);
        partial void OnDisplayMessageChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean PointsBasedMembership
        {
            get
            {
                return _PointsBasedMembership;
            }
            set
            {
                OnPointsBasedMembershipChanging(value);
                ReportPropertyChanging("PointsBasedMembership");
                _PointsBasedMembership = StructuralObject.SetValidValue(value, "PointsBasedMembership");
                ReportPropertyChanged("PointsBasedMembership");
                OnPointsBasedMembershipChanged();
            }
        }
        private global::System.Boolean _PointsBasedMembership;
        partial void OnPointsBasedMembershipChanging(global::System.Boolean value);
        partial void OnPointsBasedMembershipChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipCategoryGroupDefaultEPOS_MembershipCategoryGroupDefaults", "MembershipCategoryGroupDefault")]
        public MembershipCategoryGroupDefault MembershipCategoryGroupDefault
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategoryGroupDefault>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaultEPOS_MembershipCategoryGroupDefaults", "MembershipCategoryGroupDefault").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategoryGroupDefault>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaultEPOS_MembershipCategoryGroupDefaults", "MembershipCategoryGroupDefault").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipCategoryGroupDefault> MembershipCategoryGroupDefaultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategoryGroupDefault>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaultEPOS_MembershipCategoryGroupDefaults", "MembershipCategoryGroupDefault");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipCategoryGroupDefault>("EventManagementSystemModel.FK_MembershipCategoryGroupDefaultEPOS_MembershipCategoryGroupDefaults", "MembershipCategoryGroupDefault", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipFullPaymentComponent")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipFullPaymentComponent : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipFullPaymentComponent object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static MembershipFullPaymentComponent CreateMembershipFullPaymentComponent(global::System.Guid id)
        {
            MembershipFullPaymentComponent membershipFullPaymentComponent = new MembershipFullPaymentComponent();
            membershipFullPaymentComponent.ID = id;
            return membershipFullPaymentComponent;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component1
        {
            get
            {
                return _Component1;
            }
            set
            {
                OnComponent1Changing(value);
                ReportPropertyChanging("Component1");
                _Component1 = StructuralObject.SetValidValue(value, "Component1");
                ReportPropertyChanged("Component1");
                OnComponent1Changed();
            }
        }
        private Nullable<global::System.Guid> _Component1;
        partial void OnComponent1Changing(Nullable<global::System.Guid> value);
        partial void OnComponent1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component2
        {
            get
            {
                return _Component2;
            }
            set
            {
                OnComponent2Changing(value);
                ReportPropertyChanging("Component2");
                _Component2 = StructuralObject.SetValidValue(value, "Component2");
                ReportPropertyChanged("Component2");
                OnComponent2Changed();
            }
        }
        private Nullable<global::System.Guid> _Component2;
        partial void OnComponent2Changing(Nullable<global::System.Guid> value);
        partial void OnComponent2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component3
        {
            get
            {
                return _Component3;
            }
            set
            {
                OnComponent3Changing(value);
                ReportPropertyChanging("Component3");
                _Component3 = StructuralObject.SetValidValue(value, "Component3");
                ReportPropertyChanged("Component3");
                OnComponent3Changed();
            }
        }
        private Nullable<global::System.Guid> _Component3;
        partial void OnComponent3Changing(Nullable<global::System.Guid> value);
        partial void OnComponent3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component4
        {
            get
            {
                return _Component4;
            }
            set
            {
                OnComponent4Changing(value);
                ReportPropertyChanging("Component4");
                _Component4 = StructuralObject.SetValidValue(value, "Component4");
                ReportPropertyChanged("Component4");
                OnComponent4Changed();
            }
        }
        private Nullable<global::System.Guid> _Component4;
        partial void OnComponent4Changing(Nullable<global::System.Guid> value);
        partial void OnComponent4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component5
        {
            get
            {
                return _Component5;
            }
            set
            {
                OnComponent5Changing(value);
                ReportPropertyChanging("Component5");
                _Component5 = StructuralObject.SetValidValue(value, "Component5");
                ReportPropertyChanged("Component5");
                OnComponent5Changed();
            }
        }
        private Nullable<global::System.Guid> _Component5;
        partial void OnComponent5Changing(Nullable<global::System.Guid> value);
        partial void OnComponent5Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component6
        {
            get
            {
                return _Component6;
            }
            set
            {
                OnComponent6Changing(value);
                ReportPropertyChanging("Component6");
                _Component6 = StructuralObject.SetValidValue(value, "Component6");
                ReportPropertyChanged("Component6");
                OnComponent6Changed();
            }
        }
        private Nullable<global::System.Guid> _Component6;
        partial void OnComponent6Changing(Nullable<global::System.Guid> value);
        partial void OnComponent6Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component7
        {
            get
            {
                return _Component7;
            }
            set
            {
                OnComponent7Changing(value);
                ReportPropertyChanging("Component7");
                _Component7 = StructuralObject.SetValidValue(value, "Component7");
                ReportPropertyChanged("Component7");
                OnComponent7Changed();
            }
        }
        private Nullable<global::System.Guid> _Component7;
        partial void OnComponent7Changing(Nullable<global::System.Guid> value);
        partial void OnComponent7Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component8
        {
            get
            {
                return _Component8;
            }
            set
            {
                OnComponent8Changing(value);
                ReportPropertyChanging("Component8");
                _Component8 = StructuralObject.SetValidValue(value, "Component8");
                ReportPropertyChanged("Component8");
                OnComponent8Changed();
            }
        }
        private Nullable<global::System.Guid> _Component8;
        partial void OnComponent8Changing(Nullable<global::System.Guid> value);
        partial void OnComponent8Changed();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents1_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents1_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents1_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents1_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents1_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents2_Products", "Product")]
        public Product Product1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents2_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents2_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents2_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents2_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents3_Products", "Product")]
        public Product Product2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents3_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents3_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents3_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents3_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents4_Products", "Product")]
        public Product Product3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents4_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents4_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents4_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents4_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents5_Products", "Product")]
        public Product Product4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents5_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents5_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product4Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents5_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents5_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents6_Products", "Product")]
        public Product Product5
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents6_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents6_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product5Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents6_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents6_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents7_Products", "Product")]
        public Product Product6
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents7_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents7_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product6Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents7_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents7_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents8_Products", "Product")]
        public Product Product7
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents8_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents8_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product7Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents8_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipFullPaymentComponents8_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents_MembershipCategories", "MembershipCategory")]
        public MembershipCategory MembershipCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipFullPaymentComponents_MembershipCategories", "MembershipCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipFullPaymentComponents_MembershipCategories", "MembershipCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipCategory> MembershipCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipFullPaymentComponents_MembershipCategories", "MembershipCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipFullPaymentComponents_MembershipCategories", "MembershipCategory", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipGroup : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="memberOnBankHolidays">Initial value of the MemberOnBankHolidays property.</param>
        /// <param name="memberAtChristmasWeek">Initial value of the MemberAtChristmasWeek property.</param>
        /// <param name="isMonAvailable">Initial value of the IsMonAvailable property.</param>
        /// <param name="isTuesAvailable">Initial value of the IsTuesAvailable property.</param>
        /// <param name="isWedAvailable">Initial value of the IsWedAvailable property.</param>
        /// <param name="isThursAvailable">Initial value of the IsThursAvailable property.</param>
        /// <param name="isFriAvailable">Initial value of the IsFriAvailable property.</param>
        /// <param name="isSatAvailable">Initial value of the IsSatAvailable property.</param>
        /// <param name="isSunAvailable">Initial value of the IsSunAvailable property.</param>
        public static MembershipGroup CreateMembershipGroup(global::System.Guid id, global::System.String name, global::System.Boolean memberOnBankHolidays, global::System.Boolean memberAtChristmasWeek, global::System.Boolean isMonAvailable, global::System.Boolean isTuesAvailable, global::System.Boolean isWedAvailable, global::System.Boolean isThursAvailable, global::System.Boolean isFriAvailable, global::System.Boolean isSatAvailable, global::System.Boolean isSunAvailable)
        {
            MembershipGroup membershipGroup = new MembershipGroup();
            membershipGroup.ID = id;
            membershipGroup.Name = name;
            membershipGroup.MemberOnBankHolidays = memberOnBankHolidays;
            membershipGroup.MemberAtChristmasWeek = memberAtChristmasWeek;
            membershipGroup.IsMonAvailable = isMonAvailable;
            membershipGroup.IsTuesAvailable = isTuesAvailable;
            membershipGroup.IsWedAvailable = isWedAvailable;
            membershipGroup.IsThursAvailable = isThursAvailable;
            membershipGroup.IsFriAvailable = isFriAvailable;
            membershipGroup.IsSatAvailable = isSatAvailable;
            membershipGroup.IsSunAvailable = isSunAvailable;
            return membershipGroup;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean MemberOnBankHolidays
        {
            get
            {
                return _MemberOnBankHolidays;
            }
            set
            {
                OnMemberOnBankHolidaysChanging(value);
                ReportPropertyChanging("MemberOnBankHolidays");
                _MemberOnBankHolidays = StructuralObject.SetValidValue(value, "MemberOnBankHolidays");
                ReportPropertyChanged("MemberOnBankHolidays");
                OnMemberOnBankHolidaysChanged();
            }
        }
        private global::System.Boolean _MemberOnBankHolidays;
        partial void OnMemberOnBankHolidaysChanging(global::System.Boolean value);
        partial void OnMemberOnBankHolidaysChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean MemberAtChristmasWeek
        {
            get
            {
                return _MemberAtChristmasWeek;
            }
            set
            {
                OnMemberAtChristmasWeekChanging(value);
                ReportPropertyChanging("MemberAtChristmasWeek");
                _MemberAtChristmasWeek = StructuralObject.SetValidValue(value, "MemberAtChristmasWeek");
                ReportPropertyChanged("MemberAtChristmasWeek");
                OnMemberAtChristmasWeekChanged();
            }
        }
        private global::System.Boolean _MemberAtChristmasWeek;
        partial void OnMemberAtChristmasWeekChanging(global::System.Boolean value);
        partial void OnMemberAtChristmasWeekChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token1
        {
            get
            {
                return _Token1;
            }
            set
            {
                OnToken1Changing(value);
                ReportPropertyChanging("Token1");
                _Token1 = StructuralObject.SetValidValue(value, true, "Token1");
                ReportPropertyChanged("Token1");
                OnToken1Changed();
            }
        }
        private global::System.String _Token1;
        partial void OnToken1Changing(global::System.String value);
        partial void OnToken1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token2
        {
            get
            {
                return _Token2;
            }
            set
            {
                OnToken2Changing(value);
                ReportPropertyChanging("Token2");
                _Token2 = StructuralObject.SetValidValue(value, true, "Token2");
                ReportPropertyChanged("Token2");
                OnToken2Changed();
            }
        }
        private global::System.String _Token2;
        partial void OnToken2Changing(global::System.String value);
        partial void OnToken2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token3
        {
            get
            {
                return _Token3;
            }
            set
            {
                OnToken3Changing(value);
                ReportPropertyChanging("Token3");
                _Token3 = StructuralObject.SetValidValue(value, true, "Token3");
                ReportPropertyChanged("Token3");
                OnToken3Changed();
            }
        }
        private global::System.String _Token3;
        partial void OnToken3Changing(global::System.String value);
        partial void OnToken3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token4
        {
            get
            {
                return _Token4;
            }
            set
            {
                OnToken4Changing(value);
                ReportPropertyChanging("Token4");
                _Token4 = StructuralObject.SetValidValue(value, true, "Token4");
                ReportPropertyChanged("Token4");
                OnToken4Changed();
            }
        }
        private global::System.String _Token4;
        partial void OnToken4Changing(global::System.String value);
        partial void OnToken4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token5
        {
            get
            {
                return _Token5;
            }
            set
            {
                OnToken5Changing(value);
                ReportPropertyChanging("Token5");
                _Token5 = StructuralObject.SetValidValue(value, true, "Token5");
                ReportPropertyChanged("Token5");
                OnToken5Changed();
            }
        }
        private global::System.String _Token5;
        partial void OnToken5Changing(global::System.String value);
        partial void OnToken5Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMonAvailable
        {
            get
            {
                return _IsMonAvailable;
            }
            set
            {
                OnIsMonAvailableChanging(value);
                ReportPropertyChanging("IsMonAvailable");
                _IsMonAvailable = StructuralObject.SetValidValue(value, "IsMonAvailable");
                ReportPropertyChanged("IsMonAvailable");
                OnIsMonAvailableChanged();
            }
        }
        private global::System.Boolean _IsMonAvailable;
        partial void OnIsMonAvailableChanging(global::System.Boolean value);
        partial void OnIsMonAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTuesAvailable
        {
            get
            {
                return _IsTuesAvailable;
            }
            set
            {
                OnIsTuesAvailableChanging(value);
                ReportPropertyChanging("IsTuesAvailable");
                _IsTuesAvailable = StructuralObject.SetValidValue(value, "IsTuesAvailable");
                ReportPropertyChanged("IsTuesAvailable");
                OnIsTuesAvailableChanged();
            }
        }
        private global::System.Boolean _IsTuesAvailable;
        partial void OnIsTuesAvailableChanging(global::System.Boolean value);
        partial void OnIsTuesAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsWedAvailable
        {
            get
            {
                return _IsWedAvailable;
            }
            set
            {
                OnIsWedAvailableChanging(value);
                ReportPropertyChanging("IsWedAvailable");
                _IsWedAvailable = StructuralObject.SetValidValue(value, "IsWedAvailable");
                ReportPropertyChanged("IsWedAvailable");
                OnIsWedAvailableChanged();
            }
        }
        private global::System.Boolean _IsWedAvailable;
        partial void OnIsWedAvailableChanging(global::System.Boolean value);
        partial void OnIsWedAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsThursAvailable
        {
            get
            {
                return _IsThursAvailable;
            }
            set
            {
                OnIsThursAvailableChanging(value);
                ReportPropertyChanging("IsThursAvailable");
                _IsThursAvailable = StructuralObject.SetValidValue(value, "IsThursAvailable");
                ReportPropertyChanged("IsThursAvailable");
                OnIsThursAvailableChanged();
            }
        }
        private global::System.Boolean _IsThursAvailable;
        partial void OnIsThursAvailableChanging(global::System.Boolean value);
        partial void OnIsThursAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFriAvailable
        {
            get
            {
                return _IsFriAvailable;
            }
            set
            {
                OnIsFriAvailableChanging(value);
                ReportPropertyChanging("IsFriAvailable");
                _IsFriAvailable = StructuralObject.SetValidValue(value, "IsFriAvailable");
                ReportPropertyChanged("IsFriAvailable");
                OnIsFriAvailableChanged();
            }
        }
        private global::System.Boolean _IsFriAvailable;
        partial void OnIsFriAvailableChanging(global::System.Boolean value);
        partial void OnIsFriAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSatAvailable
        {
            get
            {
                return _IsSatAvailable;
            }
            set
            {
                OnIsSatAvailableChanging(value);
                ReportPropertyChanging("IsSatAvailable");
                _IsSatAvailable = StructuralObject.SetValidValue(value, "IsSatAvailable");
                ReportPropertyChanged("IsSatAvailable");
                OnIsSatAvailableChanged();
            }
        }
        private global::System.Boolean _IsSatAvailable;
        partial void OnIsSatAvailableChanging(global::System.Boolean value);
        partial void OnIsSatAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSunAvailable
        {
            get
            {
                return _IsSunAvailable;
            }
            set
            {
                OnIsSunAvailableChanging(value);
                ReportPropertyChanging("IsSunAvailable");
                _IsSunAvailable = StructuralObject.SetValidValue(value, "IsSunAvailable");
                ReportPropertyChanged("IsSunAvailable");
                OnIsSunAvailableChanged();
            }
        }
        private global::System.Boolean _IsSunAvailable;
        partial void OnIsSunAvailableChanging(global::System.Boolean value);
        partial void OnIsSunAvailableChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipCategories_MembershipGroups", "MembershipCategory")]
        public EntityCollection<MembershipCategory> MembershipCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipCategory>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroups", "MembershipCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipCategory>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroups", "MembershipCategory", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipGroupEPOS_MembershipGroups", "MembershipGroupEPOS")]
        public MembershipGroupEPOS MembershipGroupEPOS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroupEPOS>("EventManagementSystemModel.FK_MembershipGroupEPOS_MembershipGroups", "MembershipGroupEPOS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroupEPOS>("EventManagementSystemModel.FK_MembershipGroupEPOS_MembershipGroups", "MembershipGroupEPOS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipGroupEPOS> MembershipGroupEPOSReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroupEPOS>("EventManagementSystemModel.FK_MembershipGroupEPOS_MembershipGroups", "MembershipGroupEPOS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipGroupEPOS>("EventManagementSystemModel.FK_MembershipGroupEPOS_MembershipGroups", "MembershipGroupEPOS", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipGroupAge")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipGroupAge : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipGroupAge object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="calculationDate">Initial value of the CalculationDate property.</param>
        /// <param name="minAge">Initial value of the MinAge property.</param>
        /// <param name="maxAge">Initial value of the MaxAge property.</param>
        /// <param name="minMembershipYears">Initial value of the MinMembershipYears property.</param>
        public static MembershipGroupAge CreateMembershipGroupAge(global::System.Guid id, global::System.String name, global::System.DateTime calculationDate, global::System.Int32 minAge, global::System.Int32 maxAge, global::System.Int32 minMembershipYears)
        {
            MembershipGroupAge membershipGroupAge = new MembershipGroupAge();
            membershipGroupAge.ID = id;
            membershipGroupAge.Name = name;
            membershipGroupAge.CalculationDate = calculationDate;
            membershipGroupAge.MinAge = minAge;
            membershipGroupAge.MaxAge = maxAge;
            membershipGroupAge.MinMembershipYears = minMembershipYears;
            return membershipGroupAge;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime CalculationDate
        {
            get
            {
                return _CalculationDate;
            }
            set
            {
                OnCalculationDateChanging(value);
                ReportPropertyChanging("CalculationDate");
                _CalculationDate = StructuralObject.SetValidValue(value, "CalculationDate");
                ReportPropertyChanged("CalculationDate");
                OnCalculationDateChanged();
            }
        }
        private global::System.DateTime _CalculationDate;
        partial void OnCalculationDateChanging(global::System.DateTime value);
        partial void OnCalculationDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinAge
        {
            get
            {
                return _MinAge;
            }
            set
            {
                OnMinAgeChanging(value);
                ReportPropertyChanging("MinAge");
                _MinAge = StructuralObject.SetValidValue(value, "MinAge");
                ReportPropertyChanged("MinAge");
                OnMinAgeChanged();
            }
        }
        private global::System.Int32 _MinAge;
        partial void OnMinAgeChanging(global::System.Int32 value);
        partial void OnMinAgeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxAge
        {
            get
            {
                return _MaxAge;
            }
            set
            {
                OnMaxAgeChanging(value);
                ReportPropertyChanging("MaxAge");
                _MaxAge = StructuralObject.SetValidValue(value, "MaxAge");
                ReportPropertyChanged("MaxAge");
                OnMaxAgeChanged();
            }
        }
        private global::System.Int32 _MaxAge;
        partial void OnMaxAgeChanging(global::System.Int32 value);
        partial void OnMaxAgeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinMembershipYears
        {
            get
            {
                return _MinMembershipYears;
            }
            set
            {
                OnMinMembershipYearsChanging(value);
                ReportPropertyChanging("MinMembershipYears");
                _MinMembershipYears = StructuralObject.SetValidValue(value, "MinMembershipYears");
                ReportPropertyChanged("MinMembershipYears");
                OnMinMembershipYearsChanged();
            }
        }
        private global::System.Int32 _MinMembershipYears;
        partial void OnMinMembershipYearsChanging(global::System.Int32 value);
        partial void OnMinMembershipYearsChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token1
        {
            get
            {
                return _Token1;
            }
            set
            {
                OnToken1Changing(value);
                ReportPropertyChanging("Token1");
                _Token1 = StructuralObject.SetValidValue(value, true, "Token1");
                ReportPropertyChanged("Token1");
                OnToken1Changed();
            }
        }
        private global::System.String _Token1;
        partial void OnToken1Changing(global::System.String value);
        partial void OnToken1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token2
        {
            get
            {
                return _Token2;
            }
            set
            {
                OnToken2Changing(value);
                ReportPropertyChanging("Token2");
                _Token2 = StructuralObject.SetValidValue(value, true, "Token2");
                ReportPropertyChanged("Token2");
                OnToken2Changed();
            }
        }
        private global::System.String _Token2;
        partial void OnToken2Changing(global::System.String value);
        partial void OnToken2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token3
        {
            get
            {
                return _Token3;
            }
            set
            {
                OnToken3Changing(value);
                ReportPropertyChanging("Token3");
                _Token3 = StructuralObject.SetValidValue(value, true, "Token3");
                ReportPropertyChanged("Token3");
                OnToken3Changed();
            }
        }
        private global::System.String _Token3;
        partial void OnToken3Changing(global::System.String value);
        partial void OnToken3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token4
        {
            get
            {
                return _Token4;
            }
            set
            {
                OnToken4Changing(value);
                ReportPropertyChanging("Token4");
                _Token4 = StructuralObject.SetValidValue(value, true, "Token4");
                ReportPropertyChanged("Token4");
                OnToken4Changed();
            }
        }
        private global::System.String _Token4;
        partial void OnToken4Changing(global::System.String value);
        partial void OnToken4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token5
        {
            get
            {
                return _Token5;
            }
            set
            {
                OnToken5Changing(value);
                ReportPropertyChanging("Token5");
                _Token5 = StructuralObject.SetValidValue(value, true, "Token5");
                ReportPropertyChanged("Token5");
                OnToken5Changed();
            }
        }
        private global::System.String _Token5;
        partial void OnToken5Changing(global::System.String value);
        partial void OnToken5Changed();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipCategories_MembershipGroupAges", "MembershipCategory")]
        public EntityCollection<MembershipCategory> MembershipCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipCategory>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroupAges", "MembershipCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipCategory>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroupAges", "MembershipCategory", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipGroupEPOS")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipGroupEPOS : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipGroupEPOS object.
        /// </summary>
        /// <param name="membershipGroupID">Initial value of the MembershipGroupID property.</param>
        /// <param name="allowedClubCard">Initial value of the AllowedClubCard property.</param>
        /// <param name="pointsBasedMembership">Initial value of the PointsBasedMembership property.</param>
        public static MembershipGroupEPOS CreateMembershipGroupEPOS(global::System.Guid membershipGroupID, global::System.Boolean allowedClubCard, global::System.Boolean pointsBasedMembership)
        {
            MembershipGroupEPOS membershipGroupEPOS = new MembershipGroupEPOS();
            membershipGroupEPOS.MembershipGroupID = membershipGroupID;
            membershipGroupEPOS.AllowedClubCard = allowedClubCard;
            membershipGroupEPOS.PointsBasedMembership = pointsBasedMembership;
            return membershipGroupEPOS;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid MembershipGroupID
        {
            get
            {
                return _MembershipGroupID;
            }
            set
            {
                if (_MembershipGroupID != value)
                {
                    OnMembershipGroupIDChanging(value);
                    ReportPropertyChanging("MembershipGroupID");
                    _MembershipGroupID = StructuralObject.SetValidValue(value, "MembershipGroupID");
                    ReportPropertyChanged("MembershipGroupID");
                    OnMembershipGroupIDChanged();
                }
            }
        }
        private global::System.Guid _MembershipGroupID;
        partial void OnMembershipGroupIDChanging(global::System.Guid value);
        partial void OnMembershipGroupIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowedClubCard
        {
            get
            {
                return _AllowedClubCard;
            }
            set
            {
                OnAllowedClubCardChanging(value);
                ReportPropertyChanging("AllowedClubCard");
                _AllowedClubCard = StructuralObject.SetValidValue(value, "AllowedClubCard");
                ReportPropertyChanged("AllowedClubCard");
                OnAllowedClubCardChanged();
            }
        }
        private global::System.Boolean _AllowedClubCard;
        partial void OnAllowedClubCardChanging(global::System.Boolean value);
        partial void OnAllowedClubCardChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OverdraftLimit1
        {
            get
            {
                return _OverdraftLimit1;
            }
            set
            {
                OnOverdraftLimit1Changing(value);
                ReportPropertyChanging("OverdraftLimit1");
                _OverdraftLimit1 = StructuralObject.SetValidValue(value, "OverdraftLimit1");
                ReportPropertyChanged("OverdraftLimit1");
                OnOverdraftLimit1Changed();
            }
        }
        private Nullable<global::System.Int32> _OverdraftLimit1;
        partial void OnOverdraftLimit1Changing(Nullable<global::System.Int32> value);
        partial void OnOverdraftLimit1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OverdraftLimit2
        {
            get
            {
                return _OverdraftLimit2;
            }
            set
            {
                OnOverdraftLimit2Changing(value);
                ReportPropertyChanging("OverdraftLimit2");
                _OverdraftLimit2 = StructuralObject.SetValidValue(value, "OverdraftLimit2");
                ReportPropertyChanged("OverdraftLimit2");
                OnOverdraftLimit2Changed();
            }
        }
        private Nullable<global::System.Int32> _OverdraftLimit2;
        partial void OnOverdraftLimit2Changing(Nullable<global::System.Int32> value);
        partial void OnOverdraftLimit2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountRateAll
        {
            get
            {
                return _DiscountRateAll;
            }
            set
            {
                OnDiscountRateAllChanging(value);
                ReportPropertyChanging("DiscountRateAll");
                _DiscountRateAll = StructuralObject.SetValidValue(value, "DiscountRateAll");
                ReportPropertyChanged("DiscountRateAll");
                OnDiscountRateAllChanged();
            }
        }
        private Nullable<global::System.Double> _DiscountRateAll;
        partial void OnDiscountRateAllChanging(Nullable<global::System.Double> value);
        partial void OnDiscountRateAllChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountRate1
        {
            get
            {
                return _DiscountRate1;
            }
            set
            {
                OnDiscountRate1Changing(value);
                ReportPropertyChanging("DiscountRate1");
                _DiscountRate1 = StructuralObject.SetValidValue(value, "DiscountRate1");
                ReportPropertyChanged("DiscountRate1");
                OnDiscountRate1Changed();
            }
        }
        private Nullable<global::System.Double> _DiscountRate1;
        partial void OnDiscountRate1Changing(Nullable<global::System.Double> value);
        partial void OnDiscountRate1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountRate2
        {
            get
            {
                return _DiscountRate2;
            }
            set
            {
                OnDiscountRate2Changing(value);
                ReportPropertyChanging("DiscountRate2");
                _DiscountRate2 = StructuralObject.SetValidValue(value, "DiscountRate2");
                ReportPropertyChanged("DiscountRate2");
                OnDiscountRate2Changed();
            }
        }
        private Nullable<global::System.Double> _DiscountRate2;
        partial void OnDiscountRate2Changing(Nullable<global::System.Double> value);
        partial void OnDiscountRate2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountRate3
        {
            get
            {
                return _DiscountRate3;
            }
            set
            {
                OnDiscountRate3Changing(value);
                ReportPropertyChanging("DiscountRate3");
                _DiscountRate3 = StructuralObject.SetValidValue(value, "DiscountRate3");
                ReportPropertyChanged("DiscountRate3");
                OnDiscountRate3Changed();
            }
        }
        private Nullable<global::System.Double> _DiscountRate3;
        partial void OnDiscountRate3Changing(Nullable<global::System.Double> value);
        partial void OnDiscountRate3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountRate4
        {
            get
            {
                return _DiscountRate4;
            }
            set
            {
                OnDiscountRate4Changing(value);
                ReportPropertyChanging("DiscountRate4");
                _DiscountRate4 = StructuralObject.SetValidValue(value, "DiscountRate4");
                ReportPropertyChanged("DiscountRate4");
                OnDiscountRate4Changed();
            }
        }
        private Nullable<global::System.Double> _DiscountRate4;
        partial void OnDiscountRate4Changing(Nullable<global::System.Double> value);
        partial void OnDiscountRate4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountRate5
        {
            get
            {
                return _DiscountRate5;
            }
            set
            {
                OnDiscountRate5Changing(value);
                ReportPropertyChanging("DiscountRate5");
                _DiscountRate5 = StructuralObject.SetValidValue(value, "DiscountRate5");
                ReportPropertyChanged("DiscountRate5");
                OnDiscountRate5Changed();
            }
        }
        private Nullable<global::System.Double> _DiscountRate5;
        partial void OnDiscountRate5Changing(Nullable<global::System.Double> value);
        partial void OnDiscountRate5Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String DisplayMessage
        {
            get
            {
                return _DisplayMessage;
            }
            set
            {
                OnDisplayMessageChanging(value);
                ReportPropertyChanging("DisplayMessage");
                _DisplayMessage = StructuralObject.SetValidValue(value, true, "DisplayMessage");
                ReportPropertyChanged("DisplayMessage");
                OnDisplayMessageChanged();
            }
        }
        private global::System.String _DisplayMessage;
        partial void OnDisplayMessageChanging(global::System.String value);
        partial void OnDisplayMessageChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean PointsBasedMembership
        {
            get
            {
                return _PointsBasedMembership;
            }
            set
            {
                OnPointsBasedMembershipChanging(value);
                ReportPropertyChanging("PointsBasedMembership");
                _PointsBasedMembership = StructuralObject.SetValidValue(value, "PointsBasedMembership");
                ReportPropertyChanged("PointsBasedMembership");
                OnPointsBasedMembershipChanged();
            }
        }
        private global::System.Boolean _PointsBasedMembership;
        partial void OnPointsBasedMembershipChanging(global::System.Boolean value);
        partial void OnPointsBasedMembershipChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipGroupEPOS_MembershipGroups", "MembershipGroup")]
        public MembershipGroup MembershipGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroup>("EventManagementSystemModel.FK_MembershipGroupEPOS_MembershipGroups", "MembershipGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroup>("EventManagementSystemModel.FK_MembershipGroupEPOS_MembershipGroups", "MembershipGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipGroup> MembershipGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipGroup>("EventManagementSystemModel.FK_MembershipGroupEPOS_MembershipGroups", "MembershipGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipGroup>("EventManagementSystemModel.FK_MembershipGroupEPOS_MembershipGroups", "MembershipGroup", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipGroupStyle")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipGroupStyle : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipGroupStyle object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="classifiedAsMember">Initial value of the ClassifiedAsMember property.</param>
        /// <param name="syncWithWebSite">Initial value of the SyncWithWebSite property.</param>
        /// <param name="syncWithHandicapMaster">Initial value of the SyncWithHandicapMaster property.</param>
        /// <param name="allowBooking">Initial value of the AllowBooking property.</param>
        /// <param name="allowedClubCard">Initial value of the AllowedClubCard property.</param>
        public static MembershipGroupStyle CreateMembershipGroupStyle(global::System.Guid id, global::System.String name, global::System.Boolean classifiedAsMember, global::System.Boolean syncWithWebSite, global::System.Boolean syncWithHandicapMaster, global::System.Boolean allowBooking, global::System.Boolean allowedClubCard)
        {
            MembershipGroupStyle membershipGroupStyle = new MembershipGroupStyle();
            membershipGroupStyle.ID = id;
            membershipGroupStyle.Name = name;
            membershipGroupStyle.ClassifiedAsMember = classifiedAsMember;
            membershipGroupStyle.SyncWithWebSite = syncWithWebSite;
            membershipGroupStyle.SyncWithHandicapMaster = syncWithHandicapMaster;
            membershipGroupStyle.AllowBooking = allowBooking;
            membershipGroupStyle.AllowedClubCard = allowedClubCard;
            return membershipGroupStyle;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean ClassifiedAsMember
        {
            get
            {
                return _ClassifiedAsMember;
            }
            set
            {
                OnClassifiedAsMemberChanging(value);
                ReportPropertyChanging("ClassifiedAsMember");
                _ClassifiedAsMember = StructuralObject.SetValidValue(value, "ClassifiedAsMember");
                ReportPropertyChanged("ClassifiedAsMember");
                OnClassifiedAsMemberChanged();
            }
        }
        private global::System.Boolean _ClassifiedAsMember;
        partial void OnClassifiedAsMemberChanging(global::System.Boolean value);
        partial void OnClassifiedAsMemberChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean SyncWithWebSite
        {
            get
            {
                return _SyncWithWebSite;
            }
            set
            {
                OnSyncWithWebSiteChanging(value);
                ReportPropertyChanging("SyncWithWebSite");
                _SyncWithWebSite = StructuralObject.SetValidValue(value, "SyncWithWebSite");
                ReportPropertyChanged("SyncWithWebSite");
                OnSyncWithWebSiteChanged();
            }
        }
        private global::System.Boolean _SyncWithWebSite;
        partial void OnSyncWithWebSiteChanging(global::System.Boolean value);
        partial void OnSyncWithWebSiteChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean SyncWithHandicapMaster
        {
            get
            {
                return _SyncWithHandicapMaster;
            }
            set
            {
                OnSyncWithHandicapMasterChanging(value);
                ReportPropertyChanging("SyncWithHandicapMaster");
                _SyncWithHandicapMaster = StructuralObject.SetValidValue(value, "SyncWithHandicapMaster");
                ReportPropertyChanged("SyncWithHandicapMaster");
                OnSyncWithHandicapMasterChanged();
            }
        }
        private global::System.Boolean _SyncWithHandicapMaster;
        partial void OnSyncWithHandicapMasterChanging(global::System.Boolean value);
        partial void OnSyncWithHandicapMasterChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowBooking
        {
            get
            {
                return _AllowBooking;
            }
            set
            {
                OnAllowBookingChanging(value);
                ReportPropertyChanging("AllowBooking");
                _AllowBooking = StructuralObject.SetValidValue(value, "AllowBooking");
                ReportPropertyChanged("AllowBooking");
                OnAllowBookingChanged();
            }
        }
        private global::System.Boolean _AllowBooking;
        partial void OnAllowBookingChanging(global::System.Boolean value);
        partial void OnAllowBookingChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowedClubCard
        {
            get
            {
                return _AllowedClubCard;
            }
            set
            {
                OnAllowedClubCardChanging(value);
                ReportPropertyChanging("AllowedClubCard");
                _AllowedClubCard = StructuralObject.SetValidValue(value, "AllowedClubCard");
                ReportPropertyChanged("AllowedClubCard");
                OnAllowedClubCardChanged();
            }
        }
        private global::System.Boolean _AllowedClubCard;
        partial void OnAllowedClubCardChanging(global::System.Boolean value);
        partial void OnAllowedClubCardChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token1
        {
            get
            {
                return _Token1;
            }
            set
            {
                OnToken1Changing(value);
                ReportPropertyChanging("Token1");
                _Token1 = StructuralObject.SetValidValue(value, true, "Token1");
                ReportPropertyChanged("Token1");
                OnToken1Changed();
            }
        }
        private global::System.String _Token1;
        partial void OnToken1Changing(global::System.String value);
        partial void OnToken1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token2
        {
            get
            {
                return _Token2;
            }
            set
            {
                OnToken2Changing(value);
                ReportPropertyChanging("Token2");
                _Token2 = StructuralObject.SetValidValue(value, true, "Token2");
                ReportPropertyChanged("Token2");
                OnToken2Changed();
            }
        }
        private global::System.String _Token2;
        partial void OnToken2Changing(global::System.String value);
        partial void OnToken2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token3
        {
            get
            {
                return _Token3;
            }
            set
            {
                OnToken3Changing(value);
                ReportPropertyChanging("Token3");
                _Token3 = StructuralObject.SetValidValue(value, true, "Token3");
                ReportPropertyChanged("Token3");
                OnToken3Changed();
            }
        }
        private global::System.String _Token3;
        partial void OnToken3Changing(global::System.String value);
        partial void OnToken3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token4
        {
            get
            {
                return _Token4;
            }
            set
            {
                OnToken4Changing(value);
                ReportPropertyChanging("Token4");
                _Token4 = StructuralObject.SetValidValue(value, true, "Token4");
                ReportPropertyChanged("Token4");
                OnToken4Changed();
            }
        }
        private global::System.String _Token4;
        partial void OnToken4Changing(global::System.String value);
        partial void OnToken4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Token5
        {
            get
            {
                return _Token5;
            }
            set
            {
                OnToken5Changing(value);
                ReportPropertyChanging("Token5");
                _Token5 = StructuralObject.SetValidValue(value, true, "Token5");
                ReportPropertyChanged("Token5");
                OnToken5Changed();
            }
        }
        private global::System.String _Token5;
        partial void OnToken5Changing(global::System.String value);
        partial void OnToken5Changed();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipCategories_MembershipGroupStyles", "MembershipCategory")]
        public EntityCollection<MembershipCategory> MembershipCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipCategory>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroupStyles", "MembershipCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipCategory>("EventManagementSystemModel.FK_MembershipCategories_MembershipGroupStyles", "MembershipCategory", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipLinkType")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipLinkType : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipLinkType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="useJointClubCardAccountBar">Initial value of the UseJointClubCardAccountBar property.</param>
        /// <param name="useJointClubCardAccountProShop">Initial value of the UseJointClubCardAccountProShop property.</param>
        /// <param name="useSingleMembershipAccount">Initial value of the UseSingleMembershipAccount property.</param>
        /// <param name="renewTogether">Initial value of the RenewTogether property.</param>
        /// <param name="autoRenew">Initial value of the AutoRenew property.</param>
        /// <param name="autoResign">Initial value of the AutoResign property.</param>
        public static MembershipLinkType CreateMembershipLinkType(global::System.Guid id, global::System.Boolean useJointClubCardAccountBar, global::System.Boolean useJointClubCardAccountProShop, global::System.Boolean useSingleMembershipAccount, global::System.Boolean renewTogether, global::System.Boolean autoRenew, global::System.Boolean autoResign)
        {
            MembershipLinkType membershipLinkType = new MembershipLinkType();
            membershipLinkType.ID = id;
            membershipLinkType.UseJointClubCardAccountBar = useJointClubCardAccountBar;
            membershipLinkType.UseJointClubCardAccountProShop = useJointClubCardAccountProShop;
            membershipLinkType.UseSingleMembershipAccount = useSingleMembershipAccount;
            membershipLinkType.RenewTogether = renewTogether;
            membershipLinkType.AutoRenew = autoRenew;
            membershipLinkType.AutoResign = autoResign;
            return membershipLinkType;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean UseJointClubCardAccountBar
        {
            get
            {
                return _UseJointClubCardAccountBar;
            }
            set
            {
                OnUseJointClubCardAccountBarChanging(value);
                ReportPropertyChanging("UseJointClubCardAccountBar");
                _UseJointClubCardAccountBar = StructuralObject.SetValidValue(value, "UseJointClubCardAccountBar");
                ReportPropertyChanged("UseJointClubCardAccountBar");
                OnUseJointClubCardAccountBarChanged();
            }
        }
        private global::System.Boolean _UseJointClubCardAccountBar;
        partial void OnUseJointClubCardAccountBarChanging(global::System.Boolean value);
        partial void OnUseJointClubCardAccountBarChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean UseJointClubCardAccountProShop
        {
            get
            {
                return _UseJointClubCardAccountProShop;
            }
            set
            {
                OnUseJointClubCardAccountProShopChanging(value);
                ReportPropertyChanging("UseJointClubCardAccountProShop");
                _UseJointClubCardAccountProShop = StructuralObject.SetValidValue(value, "UseJointClubCardAccountProShop");
                ReportPropertyChanged("UseJointClubCardAccountProShop");
                OnUseJointClubCardAccountProShopChanged();
            }
        }
        private global::System.Boolean _UseJointClubCardAccountProShop;
        partial void OnUseJointClubCardAccountProShopChanging(global::System.Boolean value);
        partial void OnUseJointClubCardAccountProShopChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean UseSingleMembershipAccount
        {
            get
            {
                return _UseSingleMembershipAccount;
            }
            set
            {
                OnUseSingleMembershipAccountChanging(value);
                ReportPropertyChanging("UseSingleMembershipAccount");
                _UseSingleMembershipAccount = StructuralObject.SetValidValue(value, "UseSingleMembershipAccount");
                ReportPropertyChanged("UseSingleMembershipAccount");
                OnUseSingleMembershipAccountChanged();
            }
        }
        private global::System.Boolean _UseSingleMembershipAccount;
        partial void OnUseSingleMembershipAccountChanging(global::System.Boolean value);
        partial void OnUseSingleMembershipAccountChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean RenewTogether
        {
            get
            {
                return _RenewTogether;
            }
            set
            {
                OnRenewTogetherChanging(value);
                ReportPropertyChanging("RenewTogether");
                _RenewTogether = StructuralObject.SetValidValue(value, "RenewTogether");
                ReportPropertyChanged("RenewTogether");
                OnRenewTogetherChanged();
            }
        }
        private global::System.Boolean _RenewTogether;
        partial void OnRenewTogetherChanging(global::System.Boolean value);
        partial void OnRenewTogetherChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean AutoRenew
        {
            get
            {
                return _AutoRenew;
            }
            set
            {
                OnAutoRenewChanging(value);
                ReportPropertyChanging("AutoRenew");
                _AutoRenew = StructuralObject.SetValidValue(value, "AutoRenew");
                ReportPropertyChanged("AutoRenew");
                OnAutoRenewChanged();
            }
        }
        private global::System.Boolean _AutoRenew;
        partial void OnAutoRenewChanging(global::System.Boolean value);
        partial void OnAutoRenewChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AutoRenewCategoryID
        {
            get
            {
                return _AutoRenewCategoryID;
            }
            set
            {
                OnAutoRenewCategoryIDChanging(value);
                ReportPropertyChanging("AutoRenewCategoryID");
                _AutoRenewCategoryID = StructuralObject.SetValidValue(value, "AutoRenewCategoryID");
                ReportPropertyChanged("AutoRenewCategoryID");
                OnAutoRenewCategoryIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AutoRenewCategoryID;
        partial void OnAutoRenewCategoryIDChanging(Nullable<global::System.Guid> value);
        partial void OnAutoRenewCategoryIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean AutoResign
        {
            get
            {
                return _AutoResign;
            }
            set
            {
                OnAutoResignChanging(value);
                ReportPropertyChanging("AutoResign");
                _AutoResign = StructuralObject.SetValidValue(value, "AutoResign");
                ReportPropertyChanged("AutoResign");
                OnAutoResignChanged();
            }
        }
        private global::System.Boolean _AutoResign;
        partial void OnAutoResignChanging(global::System.Boolean value);
        partial void OnAutoResignChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AutoResignCategoryID
        {
            get
            {
                return _AutoResignCategoryID;
            }
            set
            {
                OnAutoResignCategoryIDChanging(value);
                ReportPropertyChanging("AutoResignCategoryID");
                _AutoResignCategoryID = StructuralObject.SetValidValue(value, "AutoResignCategoryID");
                ReportPropertyChanged("AutoResignCategoryID");
                OnAutoResignCategoryIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AutoResignCategoryID;
        partial void OnAutoResignCategoryIDChanging(Nullable<global::System.Guid> value);
        partial void OnAutoResignCategoryIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipLinkTypes_MembershipCategories", "MembershipCategory")]
        public MembershipCategory MembershipCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipLinkTypes_MembershipCategories", "MembershipCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipLinkTypes_MembershipCategories", "MembershipCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipCategory> MembershipCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipLinkTypes_MembershipCategories", "MembershipCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipLinkTypes_MembershipCategories", "MembershipCategory", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipLinkTypes_MembershipCategories1", "MembershipCategory")]
        public MembershipCategory MembershipCategory1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipLinkTypes_MembershipCategories1", "MembershipCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipLinkTypes_MembershipCategories1", "MembershipCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipCategory> MembershipCategory1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipLinkTypes_MembershipCategories1", "MembershipCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipLinkTypes_MembershipCategories1", "MembershipCategory", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipMonthlyPaymentOngoingCost")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipMonthlyPaymentOngoingCost : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipMonthlyPaymentOngoingCost object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static MembershipMonthlyPaymentOngoingCost CreateMembershipMonthlyPaymentOngoingCost(global::System.Guid id)
        {
            MembershipMonthlyPaymentOngoingCost membershipMonthlyPaymentOngoingCost = new MembershipMonthlyPaymentOngoingCost();
            membershipMonthlyPaymentOngoingCost.ID = id;
            return membershipMonthlyPaymentOngoingCost;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component1
        {
            get
            {
                return _Component1;
            }
            set
            {
                OnComponent1Changing(value);
                ReportPropertyChanging("Component1");
                _Component1 = StructuralObject.SetValidValue(value, "Component1");
                ReportPropertyChanged("Component1");
                OnComponent1Changed();
            }
        }
        private Nullable<global::System.Guid> _Component1;
        partial void OnComponent1Changing(Nullable<global::System.Guid> value);
        partial void OnComponent1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component2
        {
            get
            {
                return _Component2;
            }
            set
            {
                OnComponent2Changing(value);
                ReportPropertyChanging("Component2");
                _Component2 = StructuralObject.SetValidValue(value, "Component2");
                ReportPropertyChanged("Component2");
                OnComponent2Changed();
            }
        }
        private Nullable<global::System.Guid> _Component2;
        partial void OnComponent2Changing(Nullable<global::System.Guid> value);
        partial void OnComponent2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component3
        {
            get
            {
                return _Component3;
            }
            set
            {
                OnComponent3Changing(value);
                ReportPropertyChanging("Component3");
                _Component3 = StructuralObject.SetValidValue(value, "Component3");
                ReportPropertyChanged("Component3");
                OnComponent3Changed();
            }
        }
        private Nullable<global::System.Guid> _Component3;
        partial void OnComponent3Changing(Nullable<global::System.Guid> value);
        partial void OnComponent3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component4
        {
            get
            {
                return _Component4;
            }
            set
            {
                OnComponent4Changing(value);
                ReportPropertyChanging("Component4");
                _Component4 = StructuralObject.SetValidValue(value, "Component4");
                ReportPropertyChanged("Component4");
                OnComponent4Changed();
            }
        }
        private Nullable<global::System.Guid> _Component4;
        partial void OnComponent4Changing(Nullable<global::System.Guid> value);
        partial void OnComponent4Changed();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts1_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts1_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts1_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts1_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts1_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts2_Products", "Product")]
        public Product Product1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts2_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts2_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts2_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts2_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts3_Products", "Product")]
        public Product Product2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts3_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts3_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts3_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts3_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts4_Products", "Product")]
        public Product Product3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts4_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts4_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts4_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts4_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts_MembershipCategories", "MembershipCategory")]
        public MembershipCategory MembershipCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts_MembershipCategories", "MembershipCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts_MembershipCategories", "MembershipCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipCategory> MembershipCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts_MembershipCategories", "MembershipCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts_MembershipCategories", "MembershipCategory", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipMonthlyPaymentUpFrontCost")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipMonthlyPaymentUpFrontCost : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipMonthlyPaymentUpFrontCost object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static MembershipMonthlyPaymentUpFrontCost CreateMembershipMonthlyPaymentUpFrontCost(global::System.Guid id)
        {
            MembershipMonthlyPaymentUpFrontCost membershipMonthlyPaymentUpFrontCost = new MembershipMonthlyPaymentUpFrontCost();
            membershipMonthlyPaymentUpFrontCost.ID = id;
            return membershipMonthlyPaymentUpFrontCost;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component1
        {
            get
            {
                return _Component1;
            }
            set
            {
                OnComponent1Changing(value);
                ReportPropertyChanging("Component1");
                _Component1 = StructuralObject.SetValidValue(value, "Component1");
                ReportPropertyChanged("Component1");
                OnComponent1Changed();
            }
        }
        private Nullable<global::System.Guid> _Component1;
        partial void OnComponent1Changing(Nullable<global::System.Guid> value);
        partial void OnComponent1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component2
        {
            get
            {
                return _Component2;
            }
            set
            {
                OnComponent2Changing(value);
                ReportPropertyChanging("Component2");
                _Component2 = StructuralObject.SetValidValue(value, "Component2");
                ReportPropertyChanged("Component2");
                OnComponent2Changed();
            }
        }
        private Nullable<global::System.Guid> _Component2;
        partial void OnComponent2Changing(Nullable<global::System.Guid> value);
        partial void OnComponent2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component3
        {
            get
            {
                return _Component3;
            }
            set
            {
                OnComponent3Changing(value);
                ReportPropertyChanging("Component3");
                _Component3 = StructuralObject.SetValidValue(value, "Component3");
                ReportPropertyChanged("Component3");
                OnComponent3Changed();
            }
        }
        private Nullable<global::System.Guid> _Component3;
        partial void OnComponent3Changing(Nullable<global::System.Guid> value);
        partial void OnComponent3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component4
        {
            get
            {
                return _Component4;
            }
            set
            {
                OnComponent4Changing(value);
                ReportPropertyChanging("Component4");
                _Component4 = StructuralObject.SetValidValue(value, "Component4");
                ReportPropertyChanged("Component4");
                OnComponent4Changed();
            }
        }
        private Nullable<global::System.Guid> _Component4;
        partial void OnComponent4Changing(Nullable<global::System.Guid> value);
        partial void OnComponent4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component5
        {
            get
            {
                return _Component5;
            }
            set
            {
                OnComponent5Changing(value);
                ReportPropertyChanging("Component5");
                _Component5 = StructuralObject.SetValidValue(value, "Component5");
                ReportPropertyChanged("Component5");
                OnComponent5Changed();
            }
        }
        private Nullable<global::System.Guid> _Component5;
        partial void OnComponent5Changing(Nullable<global::System.Guid> value);
        partial void OnComponent5Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component6
        {
            get
            {
                return _Component6;
            }
            set
            {
                OnComponent6Changing(value);
                ReportPropertyChanging("Component6");
                _Component6 = StructuralObject.SetValidValue(value, "Component6");
                ReportPropertyChanged("Component6");
                OnComponent6Changed();
            }
        }
        private Nullable<global::System.Guid> _Component6;
        partial void OnComponent6Changing(Nullable<global::System.Guid> value);
        partial void OnComponent6Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component7
        {
            get
            {
                return _Component7;
            }
            set
            {
                OnComponent7Changing(value);
                ReportPropertyChanging("Component7");
                _Component7 = StructuralObject.SetValidValue(value, "Component7");
                ReportPropertyChanged("Component7");
                OnComponent7Changed();
            }
        }
        private Nullable<global::System.Guid> _Component7;
        partial void OnComponent7Changing(Nullable<global::System.Guid> value);
        partial void OnComponent7Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Component8
        {
            get
            {
                return _Component8;
            }
            set
            {
                OnComponent8Changing(value);
                ReportPropertyChanging("Component8");
                _Component8 = StructuralObject.SetValidValue(value, "Component8");
                ReportPropertyChanged("Component8");
                OnComponent8Changed();
            }
        }
        private Nullable<global::System.Guid> _Component8;
        partial void OnComponent8Changing(Nullable<global::System.Guid> value);
        partial void OnComponent8Changed();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts1_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts1_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts1_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts1_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts1_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts2_Products", "Product")]
        public Product Product1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts2_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts2_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts2_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts2_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts3_Products", "Product")]
        public Product Product2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts3_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts3_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts3_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts3_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts4_Products", "Product")]
        public Product Product3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts4_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts4_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts4_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts4_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts5_Products", "Product")]
        public Product Product4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts5_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts5_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product4Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts5_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts5_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts6_Products", "Product")]
        public Product Product5
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts6_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts6_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product5Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts6_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts6_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts7_Products", "Product")]
        public Product Product6
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts7_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts7_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product6Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts7_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts7_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts8_Products", "Product")]
        public Product Product7
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts8_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts8_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product7Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts8_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts8_Products", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts_MembershipCategories", "MembershipCategory")]
        public MembershipCategory MembershipCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts_MembershipCategories", "MembershipCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts_MembershipCategories", "MembershipCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipCategory> MembershipCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts_MembershipCategories", "MembershipCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipCategory>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts_MembershipCategories", "MembershipCategory", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipOptionBox")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipOptionBox : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipOptionBox object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MembershipOptionBox CreateMembershipOptionBox(global::System.Guid id, global::System.String name)
        {
            MembershipOptionBox membershipOptionBox = new MembershipOptionBox();
            membershipOptionBox.ID = id;
            membershipOptionBox.Name = name;
            return membershipOptionBox;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipOptionBoxReasons_MembershipOptionBoxReasons", "MembershipOptionBoxReason")]
        public EntityCollection<MembershipOptionBoxReason> MembershipOptionBoxReasons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipOptionBoxReason>("EventManagementSystemModel.FK_MembershipOptionBoxReasons_MembershipOptionBoxReasons", "MembershipOptionBoxReason");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipOptionBoxReason>("EventManagementSystemModel.FK_MembershipOptionBoxReasons_MembershipOptionBoxReasons", "MembershipOptionBoxReason", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipOptionBoxReason")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipOptionBoxReason : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipOptionBoxReason object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="reason">Initial value of the Reason property.</param>
        /// <param name="optionBoxID">Initial value of the OptionBoxID property.</param>
        public static MembershipOptionBoxReason CreateMembershipOptionBoxReason(global::System.Guid id, global::System.String reason, global::System.Guid optionBoxID)
        {
            MembershipOptionBoxReason membershipOptionBoxReason = new MembershipOptionBoxReason();
            membershipOptionBoxReason.ID = id;
            membershipOptionBoxReason.Reason = reason;
            membershipOptionBoxReason.OptionBoxID = optionBoxID;
            return membershipOptionBoxReason;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, false, "Reason");
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid OptionBoxID
        {
            get
            {
                return _OptionBoxID;
            }
            set
            {
                OnOptionBoxIDChanging(value);
                ReportPropertyChanging("OptionBoxID");
                _OptionBoxID = StructuralObject.SetValidValue(value, "OptionBoxID");
                ReportPropertyChanged("OptionBoxID");
                OnOptionBoxIDChanged();
            }
        }
        private global::System.Guid _OptionBoxID;
        partial void OnOptionBoxIDChanging(global::System.Guid value);
        partial void OnOptionBoxIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipOptionBoxReasons_MembershipOptionBoxReasons", "MembershipOptionBox")]
        public MembershipOptionBox MembershipOptionBox
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipOptionBox>("EventManagementSystemModel.FK_MembershipOptionBoxReasons_MembershipOptionBoxReasons", "MembershipOptionBox").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipOptionBox>("EventManagementSystemModel.FK_MembershipOptionBoxReasons_MembershipOptionBoxReasons", "MembershipOptionBox").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MembershipOptionBox> MembershipOptionBoxReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MembershipOptionBox>("EventManagementSystemModel.FK_MembershipOptionBoxReasons_MembershipOptionBoxReasons", "MembershipOptionBox");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MembershipOptionBox>("EventManagementSystemModel.FK_MembershipOptionBoxReasons_MembershipOptionBoxReasons", "MembershipOptionBox", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipToken")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipToken : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipToken object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static MembershipToken CreateMembershipToken(global::System.Guid id, global::System.String description)
        {
            MembershipToken membershipToken = new MembershipToken();
            membershipToken.ID = id;
            membershipToken.Description = description;
            return membershipToken;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "MembershipUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class MembershipUpdate : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new MembershipUpdate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="memberID">Initial value of the MemberID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static MembershipUpdate CreateMembershipUpdate(global::System.Guid id, global::System.Guid memberID, global::System.Guid userID, global::System.String message, global::System.DateTime date)
        {
            MembershipUpdate membershipUpdate = new MembershipUpdate();
            membershipUpdate.ID = id;
            membershipUpdate.MemberID = memberID;
            membershipUpdate.UserID = userID;
            membershipUpdate.Message = message;
            membershipUpdate.Date = date;
            return membershipUpdate;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                OnMemberIDChanging(value);
                ReportPropertyChanging("MemberID");
                _MemberID = StructuralObject.SetValidValue(value, "MemberID");
                ReportPropertyChanged("MemberID");
                OnMemberIDChanged();
            }
        }
        private global::System.Guid _MemberID;
        partial void OnMemberIDChanging(global::System.Guid value);
        partial void OnMemberIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false, "Message");
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String OldValue
        {
            get
            {
                return _OldValue;
            }
            set
            {
                OnOldValueChanging(value);
                ReportPropertyChanging("OldValue");
                _OldValue = StructuralObject.SetValidValue(value, true, "OldValue");
                ReportPropertyChanged("OldValue");
                OnOldValueChanged();
            }
        }
        private global::System.String _OldValue;
        partial void OnOldValueChanging(global::System.String value);
        partial void OnOldValueChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String NewValue
        {
            get
            {
                return _NewValue;
            }
            set
            {
                OnNewValueChanging(value);
                ReportPropertyChanging("NewValue");
                _NewValue = StructuralObject.SetValidValue(value, true, "NewValue");
                ReportPropertyChanged("NewValue");
                OnNewValueChanged();
            }
        }
        private global::System.String _NewValue;
        partial void OnNewValueChanging(global::System.String value);
        partial void OnNewValueChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Guid> value);
        partial void OnItemIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value, true, "ItemType");
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private global::System.String _ItemType;
        partial void OnItemTypeChanging(global::System.String value);
        partial void OnItemTypeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Field
        {
            get
            {
                return _Field;
            }
            set
            {
                OnFieldChanging(value);
                ReportPropertyChanging("Field");
                _Field = StructuralObject.SetValidValue(value, true, "Field");
                ReportPropertyChanged("Field");
                OnFieldChanged();
            }
        }
        private global::System.String _Field;
        partial void OnFieldChanging(global::System.String value);
        partial void OnFieldChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, "Action");
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private Nullable<global::System.Int32> _Action;
        partial void OnActionChanging(Nullable<global::System.Int32> value);
        partial void OnActionChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipUpdates_Members", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("EventManagementSystemModel.FK_MembershipUpdates_Members", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("EventManagementSystemModel.FK_MembershipUpdates_Members", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("EventManagementSystemModel.FK_MembershipUpdates_Members", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("EventManagementSystemModel.FK_MembershipUpdates_Members", "Member", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipUpdates_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_MembershipUpdates_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_MembershipUpdates_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_MembershipUpdates_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_MembershipUpdates_Users", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "PaymentMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PaymentMethod : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PaymentMethod object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="method">Initial value of the Method property.</param>
        public static PaymentMethod CreatePaymentMethod(global::System.Guid id, global::System.String method)
        {
            PaymentMethod paymentMethod = new PaymentMethod();
            paymentMethod.ID = id;
            paymentMethod.Method = method;
            return paymentMethod;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Method
        {
            get
            {
                return _Method;
            }
            set
            {
                OnMethodChanging(value);
                ReportPropertyChanging("Method");
                _Method = StructuralObject.SetValidValue(value, false, "Method");
                ReportPropertyChanged("Method");
                OnMethodChanged();
            }
        }
        private global::System.String _Method;
        partial void OnMethodChanging(global::System.String value);
        partial void OnMethodChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventPayments_PaymentMethods1", "EventPayment")]
        public EntityCollection<EventPayment> EventPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventPayment>("EventManagementSystemModel.FK_EventPayments_PaymentMethods1", "EventPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventPayment>("EventManagementSystemModel.FK_EventPayments_PaymentMethods1", "EventPayment", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="permissionGroupID">Initial value of the PermissionGroupID property.</param>
        public static Permission CreatePermission(global::System.Guid id, global::System.String name, global::System.String description, global::System.Guid permissionGroupID)
        {
            Permission permission = new Permission();
            permission.ID = id;
            permission.Name = name;
            permission.Description = description;
            permission.PermissionGroupID = permissionGroupID;
            return permission;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid PermissionGroupID
        {
            get
            {
                return _PermissionGroupID;
            }
            set
            {
                OnPermissionGroupIDChanging(value);
                ReportPropertyChanging("PermissionGroupID");
                _PermissionGroupID = StructuralObject.SetValidValue(value, "PermissionGroupID");
                ReportPropertyChanged("PermissionGroupID");
                OnPermissionGroupIDChanged();
            }
        }
        private global::System.Guid _PermissionGroupID;
        partial void OnPermissionGroupIDChanging(global::System.Guid value);
        partial void OnPermissionGroupIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Permissions_PermissionGroups", "PermissionGroup")]
        public PermissionGroup PermissionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PermissionGroup>("EventManagementSystemModel.FK_Permissions_PermissionGroups", "PermissionGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PermissionGroup>("EventManagementSystemModel.FK_Permissions_PermissionGroups", "PermissionGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PermissionGroup> PermissionGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PermissionGroup>("EventManagementSystemModel.FK_Permissions_PermissionGroups", "PermissionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PermissionGroup>("EventManagementSystemModel.FK_Permissions_PermissionGroups", "PermissionGroup", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_UserGroupPermissions_Permissions", "UserGroupPermission")]
        public EntityCollection<UserGroupPermission> UserGroupPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserGroupPermission>("EventManagementSystemModel.FK_UserGroupPermissions_Permissions", "UserGroupPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserGroupPermission>("EventManagementSystemModel.FK_UserGroupPermissions_Permissions", "UserGroupPermission", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_UserPermissions_Permissions", "UserPermission")]
        public EntityCollection<UserPermission> UserPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPermission>("EventManagementSystemModel.FK_UserPermissions_Permissions", "UserPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPermission>("EventManagementSystemModel.FK_UserPermissions_Permissions", "UserPermission", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "PermissionGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class PermissionGroup : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new PermissionGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        public static PermissionGroup CreatePermissionGroup(global::System.Guid id, global::System.String groupName)
        {
            PermissionGroup permissionGroup = new PermissionGroup();
            permissionGroup.ID = id;
            permissionGroup.GroupName = groupName;
            return permissionGroup;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, false, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Permissions_PermissionGroups", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("EventManagementSystemModel.FK_Permissions_PermissionGroups", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("EventManagementSystemModel.FK_Permissions_PermissionGroups", "Permission", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Product")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Product : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="grossPrice">Initial value of the GrossPrice property.</param>
        /// <param name="vATRateID">Initial value of the VATRateID property.</param>
        /// <param name="productGroupID">Initial value of the ProductGroupID property.</param>
        /// <param name="departmentID">Initial value of the DepartmentID property.</param>
        /// <param name="isAvailable">Initial value of the isAvailable property.</param>
        public static Product CreateProduct(global::System.Guid id, global::System.Guid typeID, global::System.String name, global::System.Single grossPrice, global::System.Guid vATRateID, global::System.Guid productGroupID, global::System.Guid departmentID, global::System.Boolean isAvailable)
        {
            Product product = new Product();
            product.ID = id;
            product.TypeID = typeID;
            product.Name = name;
            product.GrossPrice = grossPrice;
            product.VATRateID = vATRateID;
            product.ProductGroupID = productGroupID;
            product.DepartmentID = departmentID;
            product.isAvailable = isAvailable;
            return product;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value, "TypeID");
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Guid _TypeID;
        partial void OnTypeIDChanging(global::System.Guid value);
        partial void OnTypeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Single GrossPrice
        {
            get
            {
                return _GrossPrice;
            }
            set
            {
                OnGrossPriceChanging(value);
                ReportPropertyChanging("GrossPrice");
                _GrossPrice = StructuralObject.SetValidValue(value, "GrossPrice");
                ReportPropertyChanged("GrossPrice");
                OnGrossPriceChanged();
            }
        }
        private global::System.Single _GrossPrice;
        partial void OnGrossPriceChanging(global::System.Single value);
        partial void OnGrossPriceChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid VATRateID
        {
            get
            {
                return _VATRateID;
            }
            set
            {
                OnVATRateIDChanging(value);
                ReportPropertyChanging("VATRateID");
                _VATRateID = StructuralObject.SetValidValue(value, "VATRateID");
                ReportPropertyChanged("VATRateID");
                OnVATRateIDChanged();
            }
        }
        private global::System.Guid _VATRateID;
        partial void OnVATRateIDChanging(global::System.Guid value);
        partial void OnVATRateIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ProductGroupID
        {
            get
            {
                return _ProductGroupID;
            }
            set
            {
                OnProductGroupIDChanging(value);
                ReportPropertyChanging("ProductGroupID");
                _ProductGroupID = StructuralObject.SetValidValue(value, "ProductGroupID");
                ReportPropertyChanged("ProductGroupID");
                OnProductGroupIDChanged();
            }
        }
        private global::System.Guid _ProductGroupID;
        partial void OnProductGroupIDChanging(global::System.Guid value);
        partial void OnProductGroupIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value, "DepartmentID");
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private global::System.Guid _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Guid value);
        partial void OnDepartmentIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ProductOptionID
        {
            get
            {
                return _ProductOptionID;
            }
            set
            {
                OnProductOptionIDChanging(value);
                ReportPropertyChanging("ProductOptionID");
                _ProductOptionID = StructuralObject.SetValidValue(value, "ProductOptionID");
                ReportPropertyChanged("ProductOptionID");
                OnProductOptionIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ProductOptionID;
        partial void OnProductOptionIDChanging(Nullable<global::System.Guid> value);
        partial void OnProductOptionIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean isAvailable
        {
            get
            {
                return _isAvailable;
            }
            set
            {
                OnisAvailableChanging(value);
                ReportPropertyChanging("isAvailable");
                _isAvailable = StructuralObject.SetValidValue(value, "isAvailable");
                ReportPropertyChanged("isAvailable");
                OnisAvailableChanged();
            }
        }
        private global::System.Boolean _isAvailable;
        partial void OnisAvailableChanging(global::System.Boolean value);
        partial void OnisAvailableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PluID
        {
            get
            {
                return _PluID;
            }
            set
            {
                OnPluIDChanging(value);
                ReportPropertyChanging("PluID");
                _PluID = StructuralObject.SetValidValue(value, "PluID");
                ReportPropertyChanged("PluID");
                OnPluIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PluID;
        partial void OnPluIDChanging(Nullable<global::System.Int32> value);
        partial void OnPluIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPartPayment
        {
            get
            {
                return _IsPartPayment;
            }
            set
            {
                OnIsPartPaymentChanging(value);
                ReportPropertyChanging("IsPartPayment");
                _IsPartPayment = StructuralObject.SetValidValue(value, "IsPartPayment");
                ReportPropertyChanged("IsPartPayment");
                OnIsPartPaymentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPartPayment;
        partial void OnIsPartPaymentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPartPaymentChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAutoRenewable
        {
            get
            {
                return _IsAutoRenewable;
            }
            set
            {
                OnIsAutoRenewableChanging(value);
                ReportPropertyChanging("IsAutoRenewable");
                _IsAutoRenewable = StructuralObject.SetValidValue(value, "IsAutoRenewable");
                ReportPropertyChanged("IsAutoRenewable");
                OnIsAutoRenewableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAutoRenewable;
        partial void OnIsAutoRenewableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAutoRenewableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDiscountable
        {
            get
            {
                return _IsDiscountable;
            }
            set
            {
                OnIsDiscountableChanging(value);
                ReportPropertyChanging("IsDiscountable");
                _IsDiscountable = StructuralObject.SetValidValue(value, "IsDiscountable");
                ReportPropertyChanged("IsDiscountable");
                OnIsDiscountableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDiscountable;
        partial void OnIsDiscountableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDiscountableChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAllowAd
        {
            get
            {
                return _IsAllowAd;
            }
            set
            {
                OnIsAllowAdChanging(value);
                ReportPropertyChanging("IsAllowAd");
                _IsAllowAd = StructuralObject.SetValidValue(value, "IsAllowAd");
                ReportPropertyChanged("IsAllowAd");
                OnIsAllowAdChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAllowAd;
        partial void OnIsAllowAdChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAllowAdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ComponentType
        {
            get
            {
                return _ComponentType;
            }
            set
            {
                OnComponentTypeChanging(value);
                ReportPropertyChanging("ComponentType");
                _ComponentType = StructuralObject.SetValidValue(value, "ComponentType");
                ReportPropertyChanged("ComponentType");
                OnComponentTypeChanged();
            }
        }
        private Nullable<global::System.Boolean> _ComponentType;
        partial void OnComponentTypeChanging(Nullable<global::System.Boolean> value);
        partial void OnComponentTypeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> EarlyPaymentDiscount
        {
            get
            {
                return _EarlyPaymentDiscount;
            }
            set
            {
                OnEarlyPaymentDiscountChanging(value);
                ReportPropertyChanging("EarlyPaymentDiscount");
                _EarlyPaymentDiscount = StructuralObject.SetValidValue(value, "EarlyPaymentDiscount");
                ReportPropertyChanged("EarlyPaymentDiscount");
                OnEarlyPaymentDiscountChanged();
            }
        }
        private Nullable<global::System.Double> _EarlyPaymentDiscount;
        partial void OnEarlyPaymentDiscountChanging(Nullable<global::System.Double> value);
        partial void OnEarlyPaymentDiscountChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PointsReceived
        {
            get
            {
                return _PointsReceived;
            }
            set
            {
                OnPointsReceivedChanging(value);
                ReportPropertyChanging("PointsReceived");
                _PointsReceived = StructuralObject.SetValidValue(value, "PointsReceived");
                ReportPropertyChanged("PointsReceived");
                OnPointsReceivedChanged();
            }
        }
        private Nullable<global::System.Double> _PointsReceived;
        partial void OnPointsReceivedChanging(Nullable<global::System.Double> value);
        partial void OnPointsReceivedChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventBookedProducts_Products", "EventBookedProduct")]
        public EntityCollection<EventBookedProduct> EventBookedProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventBookedProduct>("EventManagementSystemModel.FK_EventBookedProducts_Products", "EventBookedProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventBookedProduct>("EventManagementSystemModel.FK_EventBookedProducts_Products", "EventBookedProduct", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventCharges_Products", "EventCharge")]
        public EntityCollection<EventCharge> EventCharges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventCharge>("EventManagementSystemModel.FK_EventCharges_Products", "EventCharge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventCharge>("EventManagementSystemModel.FK_EventCharges_Products", "EventCharge", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Products_ProductDepartments", "ProductDepartment")]
        public ProductDepartment ProductDepartment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductDepartment>("EventManagementSystemModel.FK_Products_ProductDepartments", "ProductDepartment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductDepartment>("EventManagementSystemModel.FK_Products_ProductDepartments", "ProductDepartment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductDepartment> ProductDepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductDepartment>("EventManagementSystemModel.FK_Products_ProductDepartments", "ProductDepartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductDepartment>("EventManagementSystemModel.FK_Products_ProductDepartments", "ProductDepartment", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_ProductEventTypes_Products", "ProductEventType")]
        public EntityCollection<ProductEventType> ProductEventTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductEventType>("EventManagementSystemModel.FK_ProductEventTypes_Products", "ProductEventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductEventType>("EventManagementSystemModel.FK_ProductEventTypes_Products", "ProductEventType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Products_ProductGroups", "ProductGroup")]
        public ProductGroup ProductGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductGroup>("EventManagementSystemModel.FK_Products_ProductGroups", "ProductGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductGroup>("EventManagementSystemModel.FK_Products_ProductGroups", "ProductGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductGroup> ProductGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductGroup>("EventManagementSystemModel.FK_Products_ProductGroups", "ProductGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductGroup>("EventManagementSystemModel.FK_Products_ProductGroups", "ProductGroup", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Products_ProductOptions", "ProductOption")]
        public ProductOption ProductOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductOption>("EventManagementSystemModel.FK_Products_ProductOptions", "ProductOption").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductOption>("EventManagementSystemModel.FK_Products_ProductOptions", "ProductOption").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductOption> ProductOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductOption>("EventManagementSystemModel.FK_Products_ProductOptions", "ProductOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductOption>("EventManagementSystemModel.FK_Products_ProductOptions", "ProductOption", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Products_Products1", "ProductType")]
        public ProductType ProductType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("EventManagementSystemModel.FK_Products_Products1", "ProductType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("EventManagementSystemModel.FK_Products_Products1", "ProductType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductType> ProductTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductType>("EventManagementSystemModel.FK_Products_Products1", "ProductType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductType>("EventManagementSystemModel.FK_Products_Products1", "ProductType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Products_ProductVATRates", "ProductVATRate")]
        public ProductVATRate ProductVATRate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductVATRate>("EventManagementSystemModel.FK_Products_ProductVATRates", "ProductVATRate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductVATRate>("EventManagementSystemModel.FK_Products_ProductVATRates", "ProductVATRate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductVATRate> ProductVATRateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductVATRate>("EventManagementSystemModel.FK_Products_ProductVATRates", "ProductVATRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductVATRate>("EventManagementSystemModel.FK_Products_ProductVATRates", "ProductVATRate", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents1_Products", "MembershipFullPaymentComponent")]
        public EntityCollection<MembershipFullPaymentComponent> MembershipFullPaymentComponents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents1_Products", "MembershipFullPaymentComponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents1_Products", "MembershipFullPaymentComponent", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents2_Products", "MembershipFullPaymentComponent")]
        public EntityCollection<MembershipFullPaymentComponent> MembershipFullPaymentComponents1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents2_Products", "MembershipFullPaymentComponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents2_Products", "MembershipFullPaymentComponent", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents3_Products", "MembershipFullPaymentComponent")]
        public EntityCollection<MembershipFullPaymentComponent> MembershipFullPaymentComponents2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents3_Products", "MembershipFullPaymentComponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents3_Products", "MembershipFullPaymentComponent", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents4_Products", "MembershipFullPaymentComponent")]
        public EntityCollection<MembershipFullPaymentComponent> MembershipFullPaymentComponents3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents4_Products", "MembershipFullPaymentComponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents4_Products", "MembershipFullPaymentComponent", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents5_Products", "MembershipFullPaymentComponent")]
        public EntityCollection<MembershipFullPaymentComponent> MembershipFullPaymentComponents4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents5_Products", "MembershipFullPaymentComponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents5_Products", "MembershipFullPaymentComponent", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents6_Products", "MembershipFullPaymentComponent")]
        public EntityCollection<MembershipFullPaymentComponent> MembershipFullPaymentComponents5
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents6_Products", "MembershipFullPaymentComponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents6_Products", "MembershipFullPaymentComponent", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents7_Products", "MembershipFullPaymentComponent")]
        public EntityCollection<MembershipFullPaymentComponent> MembershipFullPaymentComponents6
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents7_Products", "MembershipFullPaymentComponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents7_Products", "MembershipFullPaymentComponent", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipFullPaymentComponents8_Products", "MembershipFullPaymentComponent")]
        public EntityCollection<MembershipFullPaymentComponent> MembershipFullPaymentComponents7
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents8_Products", "MembershipFullPaymentComponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipFullPaymentComponent>("EventManagementSystemModel.FK_MembershipFullPaymentComponents8_Products", "MembershipFullPaymentComponent", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts1_Products", "MembershipMonthlyPaymentOngoingCost")]
        public EntityCollection<MembershipMonthlyPaymentOngoingCost> MembershipMonthlyPaymentOngoingCosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipMonthlyPaymentOngoingCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts1_Products", "MembershipMonthlyPaymentOngoingCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipMonthlyPaymentOngoingCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts1_Products", "MembershipMonthlyPaymentOngoingCost", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts2_Products", "MembershipMonthlyPaymentOngoingCost")]
        public EntityCollection<MembershipMonthlyPaymentOngoingCost> MembershipMonthlyPaymentOngoingCosts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipMonthlyPaymentOngoingCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts2_Products", "MembershipMonthlyPaymentOngoingCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipMonthlyPaymentOngoingCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts2_Products", "MembershipMonthlyPaymentOngoingCost", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts3_Products", "MembershipMonthlyPaymentOngoingCost")]
        public EntityCollection<MembershipMonthlyPaymentOngoingCost> MembershipMonthlyPaymentOngoingCosts2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipMonthlyPaymentOngoingCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts3_Products", "MembershipMonthlyPaymentOngoingCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipMonthlyPaymentOngoingCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts3_Products", "MembershipMonthlyPaymentOngoingCost", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentOngoingCosts4_Products", "MembershipMonthlyPaymentOngoingCost")]
        public EntityCollection<MembershipMonthlyPaymentOngoingCost> MembershipMonthlyPaymentOngoingCosts3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipMonthlyPaymentOngoingCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts4_Products", "MembershipMonthlyPaymentOngoingCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipMonthlyPaymentOngoingCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentOngoingCosts4_Products", "MembershipMonthlyPaymentOngoingCost", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts1_Products", "MembershipMonthlyPaymentUpFrontCost")]
        public EntityCollection<MembershipMonthlyPaymentUpFrontCost> MembershipMonthlyPaymentUpFrontCosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts1_Products", "MembershipMonthlyPaymentUpFrontCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts1_Products", "MembershipMonthlyPaymentUpFrontCost", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts2_Products", "MembershipMonthlyPaymentUpFrontCost")]
        public EntityCollection<MembershipMonthlyPaymentUpFrontCost> MembershipMonthlyPaymentUpFrontCosts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts2_Products", "MembershipMonthlyPaymentUpFrontCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts2_Products", "MembershipMonthlyPaymentUpFrontCost", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts3_Products", "MembershipMonthlyPaymentUpFrontCost")]
        public EntityCollection<MembershipMonthlyPaymentUpFrontCost> MembershipMonthlyPaymentUpFrontCosts2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts3_Products", "MembershipMonthlyPaymentUpFrontCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts3_Products", "MembershipMonthlyPaymentUpFrontCost", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts4_Products", "MembershipMonthlyPaymentUpFrontCost")]
        public EntityCollection<MembershipMonthlyPaymentUpFrontCost> MembershipMonthlyPaymentUpFrontCosts3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts4_Products", "MembershipMonthlyPaymentUpFrontCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts4_Products", "MembershipMonthlyPaymentUpFrontCost", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts5_Products", "MembershipMonthlyPaymentUpFrontCost")]
        public EntityCollection<MembershipMonthlyPaymentUpFrontCost> MembershipMonthlyPaymentUpFrontCosts4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts5_Products", "MembershipMonthlyPaymentUpFrontCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts5_Products", "MembershipMonthlyPaymentUpFrontCost", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts6_Products", "MembershipMonthlyPaymentUpFrontCost")]
        public EntityCollection<MembershipMonthlyPaymentUpFrontCost> MembershipMonthlyPaymentUpFrontCosts5
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts6_Products", "MembershipMonthlyPaymentUpFrontCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts6_Products", "MembershipMonthlyPaymentUpFrontCost", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts7_Products", "MembershipMonthlyPaymentUpFrontCost")]
        public EntityCollection<MembershipMonthlyPaymentUpFrontCost> MembershipMonthlyPaymentUpFrontCosts6
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts7_Products", "MembershipMonthlyPaymentUpFrontCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts7_Products", "MembershipMonthlyPaymentUpFrontCost", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipMonthlyPaymentUpFrontCosts8_Products", "MembershipMonthlyPaymentUpFrontCost")]
        public EntityCollection<MembershipMonthlyPaymentUpFrontCost> MembershipMonthlyPaymentUpFrontCosts7
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts8_Products", "MembershipMonthlyPaymentUpFrontCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipMonthlyPaymentUpFrontCost>("EventManagementSystemModel.FK_MembershipMonthlyPaymentUpFrontCosts8_Products", "MembershipMonthlyPaymentUpFrontCost", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "ProductDepartment")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class ProductDepartment : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductDepartment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="department">Initial value of the Department property.</param>
        /// <param name="record">Initial value of the Record property.</param>
        /// <param name="tillID">Initial value of the TillID property.</param>
        public static ProductDepartment CreateProductDepartment(global::System.Guid id, global::System.String department, global::System.Int32 record, global::System.Guid tillID)
        {
            ProductDepartment productDepartment = new ProductDepartment();
            productDepartment.ID = id;
            productDepartment.Department = department;
            productDepartment.Record = record;
            productDepartment.TillID = tillID;
            return productDepartment;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Department
        {
            get
            {
                return _Department;
            }
            set
            {
                OnDepartmentChanging(value);
                ReportPropertyChanging("Department");
                _Department = StructuralObject.SetValidValue(value, false, "Department");
                ReportPropertyChanged("Department");
                OnDepartmentChanged();
            }
        }
        private global::System.String _Department;
        partial void OnDepartmentChanging(global::System.String value);
        partial void OnDepartmentChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Record
        {
            get
            {
                return _Record;
            }
            set
            {
                OnRecordChanging(value);
                ReportPropertyChanging("Record");
                _Record = StructuralObject.SetValidValue(value, "Record");
                ReportPropertyChanged("Record");
                OnRecordChanged();
            }
        }
        private global::System.Int32 _Record;
        partial void OnRecordChanging(global::System.Int32 value);
        partial void OnRecordChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TillID
        {
            get
            {
                return _TillID;
            }
            set
            {
                OnTillIDChanging(value);
                ReportPropertyChanging("TillID");
                _TillID = StructuralObject.SetValidValue(value, "TillID");
                ReportPropertyChanged("TillID");
                OnTillIDChanged();
            }
        }
        private global::System.Guid _TillID;
        partial void OnTillIDChanging(global::System.Guid value);
        partial void OnTillIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String NominalCode
        {
            get
            {
                return _NominalCode;
            }
            set
            {
                OnNominalCodeChanging(value);
                ReportPropertyChanging("NominalCode");
                _NominalCode = StructuralObject.SetValidValue(value, true, "NominalCode");
                ReportPropertyChanged("NominalCode");
                OnNominalCodeChanged();
            }
        }
        private global::System.String _NominalCode;
        partial void OnNominalCodeChanging(global::System.String value);
        partial void OnNominalCodeChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_ProductDepartments_Tills", "Till")]
        public Till Till
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_ProductDepartments_Tills", "Till").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_ProductDepartments_Tills", "Till").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Till> TillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_ProductDepartments_Tills", "Till");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Till>("EventManagementSystemModel.FK_ProductDepartments_Tills", "Till", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Products_ProductDepartments", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("EventManagementSystemModel.FK_Products_ProductDepartments", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("EventManagementSystemModel.FK_Products_ProductDepartments", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillProducts_ProductDepartments", "TillProduct")]
        public EntityCollection<TillProduct> TillProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillProduct>("EventManagementSystemModel.FK_TillProducts_ProductDepartments", "TillProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillProduct>("EventManagementSystemModel.FK_TillProducts_ProductDepartments", "TillProduct", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionDepartments_ProductDepartments", "TillTransactionDepartment")]
        public EntityCollection<TillTransactionDepartment> TillTransactionDepartments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTransactionDepartment>("EventManagementSystemModel.FK_TillTransactionDepartments_ProductDepartments", "TillTransactionDepartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTransactionDepartment>("EventManagementSystemModel.FK_TillTransactionDepartments_ProductDepartments", "TillTransactionDepartment", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "ProductEventType")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class ProductEventType : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductEventType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="eventTypeID">Initial value of the EventTypeID property.</param>
        public static ProductEventType CreateProductEventType(global::System.Guid id, global::System.Guid productID, global::System.Guid eventTypeID)
        {
            ProductEventType productEventType = new ProductEventType();
            productEventType.ID = id;
            productEventType.ProductID = productID;
            productEventType.EventTypeID = eventTypeID;
            return productEventType;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, "ProductID");
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Guid _ProductID;
        partial void OnProductIDChanging(global::System.Guid value);
        partial void OnProductIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventTypeID
        {
            get
            {
                return _EventTypeID;
            }
            set
            {
                OnEventTypeIDChanging(value);
                ReportPropertyChanging("EventTypeID");
                _EventTypeID = StructuralObject.SetValidValue(value, "EventTypeID");
                ReportPropertyChanged("EventTypeID");
                OnEventTypeIDChanged();
            }
        }
        private global::System.Guid _EventTypeID;
        partial void OnEventTypeIDChanging(global::System.Guid value);
        partial void OnEventTypeIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_ProductEventTypes_EventTypes", "EventType")]
        public EventType EventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_ProductEventTypes_EventTypes", "EventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_ProductEventTypes_EventTypes", "EventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventType> EventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("EventManagementSystemModel.FK_ProductEventTypes_EventTypes", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventType>("EventManagementSystemModel.FK_ProductEventTypes_EventTypes", "EventType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_ProductEventTypes_Products", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_ProductEventTypes_Products", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_ProductEventTypes_Products", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("EventManagementSystemModel.FK_ProductEventTypes_Products", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("EventManagementSystemModel.FK_ProductEventTypes_Products", "Product", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "ProductGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class ProductGroup : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        /// <param name="record">Initial value of the Record property.</param>
        /// <param name="tillID">Initial value of the TillID property.</param>
        public static ProductGroup CreateProductGroup(global::System.Guid id, global::System.String groupName, global::System.Int32 record, global::System.Guid tillID)
        {
            ProductGroup productGroup = new ProductGroup();
            productGroup.ID = id;
            productGroup.GroupName = groupName;
            productGroup.Record = record;
            productGroup.TillID = tillID;
            return productGroup;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, false, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Record
        {
            get
            {
                return _Record;
            }
            set
            {
                OnRecordChanging(value);
                ReportPropertyChanging("Record");
                _Record = StructuralObject.SetValidValue(value, "Record");
                ReportPropertyChanged("Record");
                OnRecordChanged();
            }
        }
        private global::System.Int32 _Record;
        partial void OnRecordChanging(global::System.Int32 value);
        partial void OnRecordChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TillID
        {
            get
            {
                return _TillID;
            }
            set
            {
                OnTillIDChanging(value);
                ReportPropertyChanging("TillID");
                _TillID = StructuralObject.SetValidValue(value, "TillID");
                ReportPropertyChanged("TillID");
                OnTillIDChanged();
            }
        }
        private global::System.Guid _TillID;
        partial void OnTillIDChanging(global::System.Guid value);
        partial void OnTillIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String NominalCode
        {
            get
            {
                return _NominalCode;
            }
            set
            {
                OnNominalCodeChanging(value);
                ReportPropertyChanging("NominalCode");
                _NominalCode = StructuralObject.SetValidValue(value, true, "NominalCode");
                ReportPropertyChanged("NominalCode");
                OnNominalCodeChanged();
            }
        }
        private global::System.String _NominalCode;
        partial void OnNominalCodeChanging(global::System.String value);
        partial void OnNominalCodeChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_ProductGroups_Tills", "Till")]
        public Till Till
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_ProductGroups_Tills", "Till").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_ProductGroups_Tills", "Till").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Till> TillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_ProductGroups_Tills", "Till");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Till>("EventManagementSystemModel.FK_ProductGroups_Tills", "Till", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Products_ProductGroups", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("EventManagementSystemModel.FK_Products_ProductGroups", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("EventManagementSystemModel.FK_Products_ProductGroups", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillProducts_ProductGroups", "TillProduct")]
        public EntityCollection<TillProduct> TillProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillProduct>("EventManagementSystemModel.FK_TillProducts_ProductGroups", "TillProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillProduct>("EventManagementSystemModel.FK_TillProducts_ProductGroups", "TillProduct", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionGroups_ProductGroups", "TillTransactionGroup")]
        public EntityCollection<TillTransactionGroup> TillTransactionGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTransactionGroup>("EventManagementSystemModel.FK_TillTransactionGroups_ProductGroups", "TillTransactionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTransactionGroup>("EventManagementSystemModel.FK_TillTransactionGroups_ProductGroups", "TillTransactionGroup", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "ProductOption")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class ProductOption : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductOption object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="optionName">Initial value of the OptionName property.</param>
        public static ProductOption CreateProductOption(global::System.Guid id, global::System.String optionName)
        {
            ProductOption productOption = new ProductOption();
            productOption.ID = id;
            productOption.OptionName = optionName;
            return productOption;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String OptionName
        {
            get
            {
                return _OptionName;
            }
            set
            {
                OnOptionNameChanging(value);
                ReportPropertyChanging("OptionName");
                _OptionName = StructuralObject.SetValidValue(value, false, "OptionName");
                ReportPropertyChanged("OptionName");
                OnOptionNameChanged();
            }
        }
        private global::System.String _OptionName;
        partial void OnOptionNameChanging(global::System.String value);
        partial void OnOptionNameChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Products_ProductOptions", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("EventManagementSystemModel.FK_Products_ProductOptions", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("EventManagementSystemModel.FK_Products_ProductOptions", "Product", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "ProductType")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class ProductType : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static ProductType CreateProductType(global::System.Guid id, global::System.String type)
        {
            ProductType productType = new ProductType();
            productType.ID = id;
            productType.Type = type;
            return productType;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Products_Products1", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("EventManagementSystemModel.FK_Products_Products1", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("EventManagementSystemModel.FK_Products_Products1", "Product", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "ProductVATRate")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class ProductVATRate : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new ProductVATRate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        /// <param name="record">Initial value of the Record property.</param>
        public static ProductVATRate CreateProductVATRate(global::System.Guid id, global::System.Double rate, global::System.Int32 record)
        {
            ProductVATRate productVATRate = new ProductVATRate();
            productVATRate.ID = id;
            productVATRate.Rate = rate;
            productVATRate.Record = record;
            return productVATRate;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Double Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value, "Rate");
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Double _Rate;
        partial void OnRateChanging(global::System.Double value);
        partial void OnRateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Record
        {
            get
            {
                return _Record;
            }
            set
            {
                OnRecordChanging(value);
                ReportPropertyChanging("Record");
                _Record = StructuralObject.SetValidValue(value, "Record");
                ReportPropertyChanged("Record");
                OnRecordChanged();
            }
        }
        private global::System.Int32 _Record;
        partial void OnRecordChanging(global::System.Int32 value);
        partial void OnRecordChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Products_ProductVATRates", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("EventManagementSystemModel.FK_Products_ProductVATRates", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("EventManagementSystemModel.FK_Products_ProductVATRates", "Product", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillProducts_ProductVATRates", "TillProduct")]
        public EntityCollection<TillProduct> TillProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillProduct>("EventManagementSystemModel.FK_TillProducts_ProductVATRates", "TillProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillProduct>("EventManagementSystemModel.FK_TillProducts_ProductVATRates", "TillProduct", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Report")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Report : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Report object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        public static Report CreateReport(global::System.Guid id, global::System.Guid eventID, global::System.String name, global::System.DateTime date, global::System.String path)
        {
            Report report = new Report();
            report.ID = id;
            report.EventID = eventID;
            report.Name = name;
            report.Date = date;
            report.Path = path;
            return report;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Guid _EventID;
        partial void OnEventIDChanging(global::System.Guid value);
        partial void OnEventIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false, "Path");
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Reports_Events", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_Reports_Events", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_Reports_Events", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("EventManagementSystemModel.FK_Reports_Events", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("EventManagementSystemModel.FK_Reports_Events", "Event", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Room")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Room : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Room object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="multipleBooking">Initial value of the MultipleBooking property.</param>
        /// <param name="height">Initial value of the Height property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="length">Initial value of the Length property.</param>
        /// <param name="boardroomAllowed">Initial value of the BoardroomAllowed property.</param>
        /// <param name="theatreAllowed">Initial value of the TheatreAllowed property.</param>
        /// <param name="conferenceAllowed">Initial value of the ConferenceAllowed property.</param>
        /// <param name="freeFormAllowed">Initial value of the FreeFormAllowed property.</param>
        /// <param name="includeInForwardBook">Initial value of the IncludeInForwardBook property.</param>
        /// <param name="allowOnlineBooking">Initial value of the AllowOnlineBooking property.</param>
        /// <param name="adminAuthorisation">Initial value of the AdminAuthorisation property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="timeInterval">Initial value of the TimeInterval property.</param>
        public static Room CreateRoom(global::System.Guid id, global::System.String name, global::System.Boolean multipleBooking, global::System.Single height, global::System.Single width, global::System.Single length, global::System.Boolean boardroomAllowed, global::System.Boolean theatreAllowed, global::System.Boolean conferenceAllowed, global::System.Boolean freeFormAllowed, global::System.Boolean includeInForwardBook, global::System.Boolean allowOnlineBooking, global::System.Boolean adminAuthorisation, global::System.Boolean isEnabled, global::System.String color, global::System.TimeSpan startTime, global::System.TimeSpan endTime, global::System.TimeSpan timeInterval)
        {
            Room room = new Room();
            room.ID = id;
            room.Name = name;
            room.MultipleBooking = multipleBooking;
            room.Height = height;
            room.Width = width;
            room.Length = length;
            room.BoardroomAllowed = boardroomAllowed;
            room.TheatreAllowed = theatreAllowed;
            room.ConferenceAllowed = conferenceAllowed;
            room.FreeFormAllowed = freeFormAllowed;
            room.IncludeInForwardBook = includeInForwardBook;
            room.AllowOnlineBooking = allowOnlineBooking;
            room.AdminAuthorisation = adminAuthorisation;
            room.IsEnabled = isEnabled;
            room.Color = color;
            room.StartTime = startTime;
            room.EndTime = endTime;
            room.TimeInterval = timeInterval;
            return room;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean MultipleBooking
        {
            get
            {
                return _MultipleBooking;
            }
            set
            {
                OnMultipleBookingChanging(value);
                ReportPropertyChanging("MultipleBooking");
                _MultipleBooking = StructuralObject.SetValidValue(value, "MultipleBooking");
                ReportPropertyChanged("MultipleBooking");
                OnMultipleBookingChanged();
            }
        }
        private global::System.Boolean _MultipleBooking;
        partial void OnMultipleBookingChanging(global::System.Boolean value);
        partial void OnMultipleBookingChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Single Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value, "Height");
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private global::System.Single _Height;
        partial void OnHeightChanging(global::System.Single value);
        partial void OnHeightChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Single Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value, "Width");
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Single _Width;
        partial void OnWidthChanging(global::System.Single value);
        partial void OnWidthChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Single Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value, "Length");
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private global::System.Single _Length;
        partial void OnLengthChanging(global::System.Single value);
        partial void OnLengthChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Boardroom
        {
            get
            {
                return _Boardroom;
            }
            set
            {
                OnBoardroomChanging(value);
                ReportPropertyChanging("Boardroom");
                _Boardroom = StructuralObject.SetValidValue(value, true, "Boardroom");
                ReportPropertyChanged("Boardroom");
                OnBoardroomChanged();
            }
        }
        private global::System.String _Boardroom;
        partial void OnBoardroomChanging(global::System.String value);
        partial void OnBoardroomChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Theatre
        {
            get
            {
                return _Theatre;
            }
            set
            {
                OnTheatreChanging(value);
                ReportPropertyChanging("Theatre");
                _Theatre = StructuralObject.SetValidValue(value, true, "Theatre");
                ReportPropertyChanged("Theatre");
                OnTheatreChanged();
            }
        }
        private global::System.String _Theatre;
        partial void OnTheatreChanging(global::System.String value);
        partial void OnTheatreChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Conference
        {
            get
            {
                return _Conference;
            }
            set
            {
                OnConferenceChanging(value);
                ReportPropertyChanging("Conference");
                _Conference = StructuralObject.SetValidValue(value, true, "Conference");
                ReportPropertyChanged("Conference");
                OnConferenceChanged();
            }
        }
        private global::System.String _Conference;
        partial void OnConferenceChanging(global::System.String value);
        partial void OnConferenceChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String FreeForm
        {
            get
            {
                return _FreeForm;
            }
            set
            {
                OnFreeFormChanging(value);
                ReportPropertyChanging("FreeForm");
                _FreeForm = StructuralObject.SetValidValue(value, true, "FreeForm");
                ReportPropertyChanged("FreeForm");
                OnFreeFormChanged();
            }
        }
        private global::System.String _FreeForm;
        partial void OnFreeFormChanging(global::System.String value);
        partial void OnFreeFormChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String TurnaroundNeeded
        {
            get
            {
                return _TurnaroundNeeded;
            }
            set
            {
                OnTurnaroundNeededChanging(value);
                ReportPropertyChanging("TurnaroundNeeded");
                _TurnaroundNeeded = StructuralObject.SetValidValue(value, true, "TurnaroundNeeded");
                ReportPropertyChanged("TurnaroundNeeded");
                OnTurnaroundNeededChanged();
            }
        }
        private global::System.String _TurnaroundNeeded;
        partial void OnTurnaroundNeededChanging(global::System.String value);
        partial void OnTurnaroundNeededChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String RoomNote
        {
            get
            {
                return _RoomNote;
            }
            set
            {
                OnRoomNoteChanging(value);
                ReportPropertyChanging("RoomNote");
                _RoomNote = StructuralObject.SetValidValue(value, true, "RoomNote");
                ReportPropertyChanged("RoomNote");
                OnRoomNoteChanged();
            }
        }
        private global::System.String _RoomNote;
        partial void OnRoomNoteChanging(global::System.String value);
        partial void OnRoomNoteChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean BoardroomAllowed
        {
            get
            {
                return _BoardroomAllowed;
            }
            set
            {
                OnBoardroomAllowedChanging(value);
                ReportPropertyChanging("BoardroomAllowed");
                _BoardroomAllowed = StructuralObject.SetValidValue(value, "BoardroomAllowed");
                ReportPropertyChanged("BoardroomAllowed");
                OnBoardroomAllowedChanged();
            }
        }
        private global::System.Boolean _BoardroomAllowed;
        partial void OnBoardroomAllowedChanging(global::System.Boolean value);
        partial void OnBoardroomAllowedChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean TheatreAllowed
        {
            get
            {
                return _TheatreAllowed;
            }
            set
            {
                OnTheatreAllowedChanging(value);
                ReportPropertyChanging("TheatreAllowed");
                _TheatreAllowed = StructuralObject.SetValidValue(value, "TheatreAllowed");
                ReportPropertyChanged("TheatreAllowed");
                OnTheatreAllowedChanged();
            }
        }
        private global::System.Boolean _TheatreAllowed;
        partial void OnTheatreAllowedChanging(global::System.Boolean value);
        partial void OnTheatreAllowedChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean ConferenceAllowed
        {
            get
            {
                return _ConferenceAllowed;
            }
            set
            {
                OnConferenceAllowedChanging(value);
                ReportPropertyChanging("ConferenceAllowed");
                _ConferenceAllowed = StructuralObject.SetValidValue(value, "ConferenceAllowed");
                ReportPropertyChanged("ConferenceAllowed");
                OnConferenceAllowedChanged();
            }
        }
        private global::System.Boolean _ConferenceAllowed;
        partial void OnConferenceAllowedChanging(global::System.Boolean value);
        partial void OnConferenceAllowedChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean FreeFormAllowed
        {
            get
            {
                return _FreeFormAllowed;
            }
            set
            {
                OnFreeFormAllowedChanging(value);
                ReportPropertyChanging("FreeFormAllowed");
                _FreeFormAllowed = StructuralObject.SetValidValue(value, "FreeFormAllowed");
                ReportPropertyChanged("FreeFormAllowed");
                OnFreeFormAllowedChanged();
            }
        }
        private global::System.Boolean _FreeFormAllowed;
        partial void OnFreeFormAllowedChanging(global::System.Boolean value);
        partial void OnFreeFormAllowedChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IncludeInForwardBook
        {
            get
            {
                return _IncludeInForwardBook;
            }
            set
            {
                OnIncludeInForwardBookChanging(value);
                ReportPropertyChanging("IncludeInForwardBook");
                _IncludeInForwardBook = StructuralObject.SetValidValue(value, "IncludeInForwardBook");
                ReportPropertyChanged("IncludeInForwardBook");
                OnIncludeInForwardBookChanged();
            }
        }
        private global::System.Boolean _IncludeInForwardBook;
        partial void OnIncludeInForwardBookChanging(global::System.Boolean value);
        partial void OnIncludeInForwardBookChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowOnlineBooking
        {
            get
            {
                return _AllowOnlineBooking;
            }
            set
            {
                OnAllowOnlineBookingChanging(value);
                ReportPropertyChanging("AllowOnlineBooking");
                _AllowOnlineBooking = StructuralObject.SetValidValue(value, "AllowOnlineBooking");
                ReportPropertyChanged("AllowOnlineBooking");
                OnAllowOnlineBookingChanged();
            }
        }
        private global::System.Boolean _AllowOnlineBooking;
        partial void OnAllowOnlineBookingChanging(global::System.Boolean value);
        partial void OnAllowOnlineBookingChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean AdminAuthorisation
        {
            get
            {
                return _AdminAuthorisation;
            }
            set
            {
                OnAdminAuthorisationChanging(value);
                ReportPropertyChanging("AdminAuthorisation");
                _AdminAuthorisation = StructuralObject.SetValidValue(value, "AdminAuthorisation");
                ReportPropertyChanged("AdminAuthorisation");
                OnAdminAuthorisationChanged();
            }
        }
        private global::System.Boolean _AdminAuthorisation;
        partial void OnAdminAuthorisationChanging(global::System.Boolean value);
        partial void OnAdminAuthorisationChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value, "IsEnabled");
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private global::System.Boolean _IsEnabled;
        partial void OnIsEnabledChanging(global::System.Boolean value);
        partial void OnIsEnabledChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, false, "Color");
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, "StartTime");
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.TimeSpan _StartTime;
        partial void OnStartTimeChanging(global::System.TimeSpan value);
        partial void OnStartTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value, "EndTime");
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.TimeSpan _EndTime;
        partial void OnEndTimeChanging(global::System.TimeSpan value);
        partial void OnEndTimeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan TimeInterval
        {
            get
            {
                return _TimeInterval;
            }
            set
            {
                OnTimeIntervalChanging(value);
                ReportPropertyChanging("TimeInterval");
                _TimeInterval = StructuralObject.SetValidValue(value, "TimeInterval");
                ReportPropertyChanged("TimeInterval");
                OnTimeIntervalChanged();
            }
        }
        private global::System.TimeSpan _TimeInterval;
        partial void OnTimeIntervalChanging(global::System.TimeSpan value);
        partial void OnTimeIntervalChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventCaterings_Rooms", "EventCatering")]
        public EntityCollection<EventCatering> EventCaterings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventCatering>("EventManagementSystemModel.FK_EventCaterings_Rooms", "EventCatering");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventCatering>("EventManagementSystemModel.FK_EventCaterings_Rooms", "EventCatering", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventRooms_Rooms", "EventRoom")]
        public EntityCollection<EventRoom> EventRooms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventRoom>("EventManagementSystemModel.FK_EventRooms_Rooms", "EventRoom");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventRoom>("EventManagementSystemModel.FK_EventRooms_Rooms", "EventRoom", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_RoomFacilities_Rooms", "RoomFacility")]
        public EntityCollection<RoomFacility> RoomFacilities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoomFacility>("EventManagementSystemModel.FK_RoomFacilities_Rooms", "RoomFacility");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoomFacility>("EventManagementSystemModel.FK_RoomFacilities_Rooms", "RoomFacility", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "RoomFacility")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class RoomFacility : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new RoomFacility object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="facilityID">Initial value of the FacilityID property.</param>
        /// <param name="roomID">Initial value of the RoomID property.</param>
        public static RoomFacility CreateRoomFacility(global::System.Guid id, global::System.Guid facilityID, global::System.Guid roomID)
        {
            RoomFacility roomFacility = new RoomFacility();
            roomFacility.ID = id;
            roomFacility.FacilityID = facilityID;
            roomFacility.RoomID = roomID;
            return roomFacility;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid FacilityID
        {
            get
            {
                return _FacilityID;
            }
            set
            {
                OnFacilityIDChanging(value);
                ReportPropertyChanging("FacilityID");
                _FacilityID = StructuralObject.SetValidValue(value, "FacilityID");
                ReportPropertyChanged("FacilityID");
                OnFacilityIDChanged();
            }
        }
        private global::System.Guid _FacilityID;
        partial void OnFacilityIDChanging(global::System.Guid value);
        partial void OnFacilityIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value, "RoomID");
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private global::System.Guid _RoomID;
        partial void OnRoomIDChanging(global::System.Guid value);
        partial void OnRoomIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_RoomFacilities_Facilities", "Facility")]
        public Facility Facility
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facility>("EventManagementSystemModel.FK_RoomFacilities_Facilities", "Facility").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facility>("EventManagementSystemModel.FK_RoomFacilities_Facilities", "Facility").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Facility> FacilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Facility>("EventManagementSystemModel.FK_RoomFacilities_Facilities", "Facility");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Facility>("EventManagementSystemModel.FK_RoomFacilities_Facilities", "Facility", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_RoomFacilities_Rooms", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("EventManagementSystemModel.FK_RoomFacilities_Rooms", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("EventManagementSystemModel.FK_RoomFacilities_Rooms", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("EventManagementSystemModel.FK_RoomFacilities_Rooms", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("EventManagementSystemModel.FK_RoomFacilities_Rooms", "Room", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "SystemSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class SystemSetting : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new SystemSetting object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isGlobal">Initial value of the IsGlobal property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static SystemSetting CreateSystemSetting(global::System.Guid id, global::System.Boolean isGlobal, global::System.String name, global::System.String value)
        {
            SystemSetting systemSetting = new SystemSetting();
            systemSetting.ID = id;
            systemSetting.IsGlobal = isGlobal;
            systemSetting.Name = name;
            systemSetting.Value = value;
            return systemSetting;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnUserIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsGlobal
        {
            get
            {
                return _IsGlobal;
            }
            set
            {
                OnIsGlobalChanging(value);
                ReportPropertyChanging("IsGlobal");
                _IsGlobal = StructuralObject.SetValidValue(value, "IsGlobal");
                ReportPropertyChanged("IsGlobal");
                OnIsGlobalChanged();
            }
        }
        private global::System.Boolean _IsGlobal;
        partial void OnIsGlobalChanging(global::System.Boolean value);
        partial void OnIsGlobalChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK__SystemSet__UserI__41B8C09B", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK__SystemSet__UserI__41B8C09B", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK__SystemSet__UserI__41B8C09B", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK__SystemSet__UserI__41B8C09B", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK__SystemSet__UserI__41B8C09B", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "Till")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class Till : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new Till object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iPAddress">Initial value of the IPAddress property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="identifier">Initial value of the Identifier property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Till CreateTill(global::System.Guid id, global::System.String iPAddress, global::System.Boolean enabled, global::System.Int32 identifier, global::System.String name)
        {
            Till till = new Till();
            till.ID = id;
            till.IPAddress = iPAddress;
            till.Enabled = enabled;
            till.Identifier = identifier;
            till.Name = name;
            return till;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, false, "IPAddress");
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value, "Enabled");
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Identifier
        {
            get
            {
                return _Identifier;
            }
            set
            {
                OnIdentifierChanging(value);
                ReportPropertyChanging("Identifier");
                _Identifier = StructuralObject.SetValidValue(value, "Identifier");
                ReportPropertyChanged("Identifier");
                OnIdentifierChanged();
            }
        }
        private global::System.Int32 _Identifier;
        partial void OnIdentifierChanging(global::System.Int32 value);
        partial void OnIdentifierChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DivisionID
        {
            get
            {
                return _DivisionID;
            }
            set
            {
                OnDivisionIDChanging(value);
                ReportPropertyChanging("DivisionID");
                _DivisionID = StructuralObject.SetValidValue(value, "DivisionID");
                ReportPropertyChanged("DivisionID");
                OnDivisionIDChanged();
            }
        }
        private Nullable<global::System.Guid> _DivisionID;
        partial void OnDivisionIDChanging(Nullable<global::System.Guid> value);
        partial void OnDivisionIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Port
        {
            get
            {
                return _Port;
            }
            set
            {
                OnPortChanging(value);
                ReportPropertyChanging("Port");
                _Port = StructuralObject.SetValidValue(value, "Port");
                ReportPropertyChanged("Port");
                OnPortChanged();
            }
        }
        private Nullable<global::System.Int32> _Port;
        partial void OnPortChanging(Nullable<global::System.Int32> value);
        partial void OnPortChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_FinaliseKeys_Tills", "FinaliseKey")]
        public EntityCollection<FinaliseKey> FinaliseKeys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinaliseKey>("EventManagementSystemModel.FK_FinaliseKeys_Tills", "FinaliseKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinaliseKey>("EventManagementSystemModel.FK_FinaliseKeys_Tills", "FinaliseKey", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_ProductDepartments_Tills", "ProductDepartment")]
        public EntityCollection<ProductDepartment> ProductDepartments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductDepartment>("EventManagementSystemModel.FK_ProductDepartments_Tills", "ProductDepartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductDepartment>("EventManagementSystemModel.FK_ProductDepartments_Tills", "ProductDepartment", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_ProductGroups_Tills", "ProductGroup")]
        public EntityCollection<ProductGroup> ProductGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductGroup>("EventManagementSystemModel.FK_ProductGroups_Tills", "ProductGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductGroup>("EventManagementSystemModel.FK_ProductGroups_Tills", "ProductGroup", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillProducts_Tills", "TillProduct")]
        public EntityCollection<TillProduct> TillProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillProduct>("EventManagementSystemModel.FK_TillProducts_Tills", "TillProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillProduct>("EventManagementSystemModel.FK_TillProducts_Tills", "TillProduct", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillProductTills_Tills", "TillProductTill")]
        public EntityCollection<TillProductTill> TillProductTills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillProductTill>("EventManagementSystemModel.FK_TillProductTills_Tills", "TillProductTill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillProductTill>("EventManagementSystemModel.FK_TillProductTills_Tills", "TillProductTill", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTabTransactions_Tills", "TillTabTransaction")]
        public EntityCollection<TillTabTransaction> TillTabTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTabTransaction>("EventManagementSystemModel.FK_TillTabTransactions_Tills", "TillTabTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTabTransaction>("EventManagementSystemModel.FK_TillTabTransactions_Tills", "TillTabTransaction", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactions_Tills", "TillTransaction")]
        public EntityCollection<TillTransaction> TillTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTransaction>("EventManagementSystemModel.FK_TillTransactions_Tills", "TillTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTransaction>("EventManagementSystemModel.FK_TillTransactions_Tills", "TillTransaction", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillDivisions_Tills", "TillDivision")]
        public EntityCollection<TillDivision> TillDivisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillDivision>("EventManagementSystemModel.FK_TillDivisions_Tills", "TillDivision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillDivision>("EventManagementSystemModel.FK_TillDivisions_Tills", "TillDivision", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Tills_TillDivisions", "TillDivision")]
        public TillDivision TillDivision
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillDivision>("EventManagementSystemModel.FK_Tills_TillDivisions", "TillDivision").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillDivision>("EventManagementSystemModel.FK_Tills_TillDivisions", "TillDivision").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TillDivision> TillDivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillDivision>("EventManagementSystemModel.FK_Tills_TillDivisions", "TillDivision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TillDivision>("EventManagementSystemModel.FK_Tills_TillDivisions", "TillDivision", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "TillDivision")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class TillDivision : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new TillDivision object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TillDivision CreateTillDivision(global::System.Guid id, global::System.String name)
        {
            TillDivision tillDivision = new TillDivision();
            tillDivision.ID = id;
            tillDivision.Name = name;
            return tillDivision;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MasterTillID
        {
            get
            {
                return _MasterTillID;
            }
            set
            {
                OnMasterTillIDChanging(value);
                ReportPropertyChanging("MasterTillID");
                _MasterTillID = StructuralObject.SetValidValue(value, "MasterTillID");
                ReportPropertyChanged("MasterTillID");
                OnMasterTillIDChanged();
            }
        }
        private Nullable<global::System.Guid> _MasterTillID;
        partial void OnMasterTillIDChanging(Nullable<global::System.Guid> value);
        partial void OnMasterTillIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillDivisions_Tills", "Till")]
        public Till Till
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillDivisions_Tills", "Till").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillDivisions_Tills", "Till").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Till> TillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillDivisions_Tills", "Till");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Till>("EventManagementSystemModel.FK_TillDivisions_Tills", "Till", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Tills_TillDivisions", "Till")]
        public EntityCollection<Till> Tills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Till>("EventManagementSystemModel.FK_Tills_TillDivisions", "Till");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Till>("EventManagementSystemModel.FK_Tills_TillDivisions", "Till", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "TillProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class TillProduct : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new TillProduct object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="departmentID">Initial value of the DepartmentID property.</param>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="taxRateID">Initial value of the TaxRateID property.</param>
        /// <param name="record">Initial value of the Record property.</param>
        /// <param name="tillID">Initial value of the TillID property.</param>
        public static TillProduct CreateTillProduct(global::System.Guid id, global::System.String name, global::System.Guid departmentID, global::System.Guid groupID, global::System.Guid taxRateID, global::System.Int32 record, global::System.Guid tillID)
        {
            TillProduct tillProduct = new TillProduct();
            tillProduct.ID = id;
            tillProduct.Name = name;
            tillProduct.DepartmentID = departmentID;
            tillProduct.GroupID = groupID;
            tillProduct.TaxRateID = taxRateID;
            tillProduct.Record = record;
            tillProduct.TillID = tillID;
            return tillProduct;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value, "DepartmentID");
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private global::System.Guid _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Guid value);
        partial void OnDepartmentIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value, "GroupID");
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
        private global::System.Guid _GroupID;
        partial void OnGroupIDChanging(global::System.Guid value);
        partial void OnGroupIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TaxRateID
        {
            get
            {
                return _TaxRateID;
            }
            set
            {
                OnTaxRateIDChanging(value);
                ReportPropertyChanging("TaxRateID");
                _TaxRateID = StructuralObject.SetValidValue(value, "TaxRateID");
                ReportPropertyChanged("TaxRateID");
                OnTaxRateIDChanged();
            }
        }
        private global::System.Guid _TaxRateID;
        partial void OnTaxRateIDChanging(global::System.Guid value);
        partial void OnTaxRateIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Record
        {
            get
            {
                return _Record;
            }
            set
            {
                OnRecordChanging(value);
                ReportPropertyChanging("Record");
                _Record = StructuralObject.SetValidValue(value, "Record");
                ReportPropertyChanged("Record");
                OnRecordChanged();
            }
        }
        private global::System.Int32 _Record;
        partial void OnRecordChanging(global::System.Int32 value);
        partial void OnRecordChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Quantity1
        {
            get
            {
                return _Quantity1;
            }
            set
            {
                OnQuantity1Changing(value);
                ReportPropertyChanging("Quantity1");
                _Quantity1 = StructuralObject.SetValidValue(value, "Quantity1");
                ReportPropertyChanged("Quantity1");
                OnQuantity1Changed();
            }
        }
        private Nullable<global::System.Double> _Quantity1;
        partial void OnQuantity1Changing(Nullable<global::System.Double> value);
        partial void OnQuantity1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Quantity2
        {
            get
            {
                return _Quantity2;
            }
            set
            {
                OnQuantity2Changing(value);
                ReportPropertyChanging("Quantity2");
                _Quantity2 = StructuralObject.SetValidValue(value, "Quantity2");
                ReportPropertyChanged("Quantity2");
                OnQuantity2Changed();
            }
        }
        private Nullable<global::System.Double> _Quantity2;
        partial void OnQuantity2Changing(Nullable<global::System.Double> value);
        partial void OnQuantity2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Quantity3
        {
            get
            {
                return _Quantity3;
            }
            set
            {
                OnQuantity3Changing(value);
                ReportPropertyChanging("Quantity3");
                _Quantity3 = StructuralObject.SetValidValue(value, "Quantity3");
                ReportPropertyChanged("Quantity3");
                OnQuantity3Changed();
            }
        }
        private Nullable<global::System.Double> _Quantity3;
        partial void OnQuantity3Changing(Nullable<global::System.Double> value);
        partial void OnQuantity3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price1L1
        {
            get
            {
                return _Price1L1;
            }
            set
            {
                OnPrice1L1Changing(value);
                ReportPropertyChanging("Price1L1");
                _Price1L1 = StructuralObject.SetValidValue(value, "Price1L1");
                ReportPropertyChanged("Price1L1");
                OnPrice1L1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Price1L1;
        partial void OnPrice1L1Changing(Nullable<global::System.Decimal> value);
        partial void OnPrice1L1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price1L2
        {
            get
            {
                return _Price1L2;
            }
            set
            {
                OnPrice1L2Changing(value);
                ReportPropertyChanging("Price1L2");
                _Price1L2 = StructuralObject.SetValidValue(value, "Price1L2");
                ReportPropertyChanged("Price1L2");
                OnPrice1L2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Price1L2;
        partial void OnPrice1L2Changing(Nullable<global::System.Decimal> value);
        partial void OnPrice1L2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price1L3
        {
            get
            {
                return _Price1L3;
            }
            set
            {
                OnPrice1L3Changing(value);
                ReportPropertyChanging("Price1L3");
                _Price1L3 = StructuralObject.SetValidValue(value, "Price1L3");
                ReportPropertyChanged("Price1L3");
                OnPrice1L3Changed();
            }
        }
        private Nullable<global::System.Decimal> _Price1L3;
        partial void OnPrice1L3Changing(Nullable<global::System.Decimal> value);
        partial void OnPrice1L3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price1L4
        {
            get
            {
                return _Price1L4;
            }
            set
            {
                OnPrice1L4Changing(value);
                ReportPropertyChanging("Price1L4");
                _Price1L4 = StructuralObject.SetValidValue(value, "Price1L4");
                ReportPropertyChanged("Price1L4");
                OnPrice1L4Changed();
            }
        }
        private Nullable<global::System.Decimal> _Price1L4;
        partial void OnPrice1L4Changing(Nullable<global::System.Decimal> value);
        partial void OnPrice1L4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price2L1
        {
            get
            {
                return _Price2L1;
            }
            set
            {
                OnPrice2L1Changing(value);
                ReportPropertyChanging("Price2L1");
                _Price2L1 = StructuralObject.SetValidValue(value, "Price2L1");
                ReportPropertyChanged("Price2L1");
                OnPrice2L1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Price2L1;
        partial void OnPrice2L1Changing(Nullable<global::System.Decimal> value);
        partial void OnPrice2L1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price2L2
        {
            get
            {
                return _Price2L2;
            }
            set
            {
                OnPrice2L2Changing(value);
                ReportPropertyChanging("Price2L2");
                _Price2L2 = StructuralObject.SetValidValue(value, "Price2L2");
                ReportPropertyChanged("Price2L2");
                OnPrice2L2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Price2L2;
        partial void OnPrice2L2Changing(Nullable<global::System.Decimal> value);
        partial void OnPrice2L2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price2L3
        {
            get
            {
                return _Price2L3;
            }
            set
            {
                OnPrice2L3Changing(value);
                ReportPropertyChanging("Price2L3");
                _Price2L3 = StructuralObject.SetValidValue(value, "Price2L3");
                ReportPropertyChanged("Price2L3");
                OnPrice2L3Changed();
            }
        }
        private Nullable<global::System.Decimal> _Price2L3;
        partial void OnPrice2L3Changing(Nullable<global::System.Decimal> value);
        partial void OnPrice2L3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price2L4
        {
            get
            {
                return _Price2L4;
            }
            set
            {
                OnPrice2L4Changing(value);
                ReportPropertyChanging("Price2L4");
                _Price2L4 = StructuralObject.SetValidValue(value, "Price2L4");
                ReportPropertyChanged("Price2L4");
                OnPrice2L4Changed();
            }
        }
        private Nullable<global::System.Decimal> _Price2L4;
        partial void OnPrice2L4Changing(Nullable<global::System.Decimal> value);
        partial void OnPrice2L4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price3L1
        {
            get
            {
                return _Price3L1;
            }
            set
            {
                OnPrice3L1Changing(value);
                ReportPropertyChanging("Price3L1");
                _Price3L1 = StructuralObject.SetValidValue(value, "Price3L1");
                ReportPropertyChanged("Price3L1");
                OnPrice3L1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Price3L1;
        partial void OnPrice3L1Changing(Nullable<global::System.Decimal> value);
        partial void OnPrice3L1Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price3L2
        {
            get
            {
                return _Price3L2;
            }
            set
            {
                OnPrice3L2Changing(value);
                ReportPropertyChanging("Price3L2");
                _Price3L2 = StructuralObject.SetValidValue(value, "Price3L2");
                ReportPropertyChanged("Price3L2");
                OnPrice3L2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Price3L2;
        partial void OnPrice3L2Changing(Nullable<global::System.Decimal> value);
        partial void OnPrice3L2Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price3L3
        {
            get
            {
                return _Price3L3;
            }
            set
            {
                OnPrice3L3Changing(value);
                ReportPropertyChanging("Price3L3");
                _Price3L3 = StructuralObject.SetValidValue(value, "Price3L3");
                ReportPropertyChanged("Price3L3");
                OnPrice3L3Changed();
            }
        }
        private Nullable<global::System.Decimal> _Price3L3;
        partial void OnPrice3L3Changing(Nullable<global::System.Decimal> value);
        partial void OnPrice3L3Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price3L4
        {
            get
            {
                return _Price3L4;
            }
            set
            {
                OnPrice3L4Changing(value);
                ReportPropertyChanging("Price3L4");
                _Price3L4 = StructuralObject.SetValidValue(value, "Price3L4");
                ReportPropertyChanged("Price3L4");
                OnPrice3L4Changed();
            }
        }
        private Nullable<global::System.Decimal> _Price3L4;
        partial void OnPrice3L4Changing(Nullable<global::System.Decimal> value);
        partial void OnPrice3L4Changed();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TillID
        {
            get
            {
                return _TillID;
            }
            set
            {
                OnTillIDChanging(value);
                ReportPropertyChanging("TillID");
                _TillID = StructuralObject.SetValidValue(value, "TillID");
                ReportPropertyChanged("TillID");
                OnTillIDChanged();
            }
        }
        private global::System.Guid _TillID;
        partial void OnTillIDChanging(global::System.Guid value);
        partial void OnTillIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillProducts_ProductDepartments", "ProductDepartment")]
        public ProductDepartment ProductDepartment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductDepartment>("EventManagementSystemModel.FK_TillProducts_ProductDepartments", "ProductDepartment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductDepartment>("EventManagementSystemModel.FK_TillProducts_ProductDepartments", "ProductDepartment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductDepartment> ProductDepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductDepartment>("EventManagementSystemModel.FK_TillProducts_ProductDepartments", "ProductDepartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductDepartment>("EventManagementSystemModel.FK_TillProducts_ProductDepartments", "ProductDepartment", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillProducts_ProductGroups", "ProductGroup")]
        public ProductGroup ProductGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductGroup>("EventManagementSystemModel.FK_TillProducts_ProductGroups", "ProductGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductGroup>("EventManagementSystemModel.FK_TillProducts_ProductGroups", "ProductGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductGroup> ProductGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductGroup>("EventManagementSystemModel.FK_TillProducts_ProductGroups", "ProductGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductGroup>("EventManagementSystemModel.FK_TillProducts_ProductGroups", "ProductGroup", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillProducts_ProductVATRates", "ProductVATRate")]
        public ProductVATRate ProductVATRate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductVATRate>("EventManagementSystemModel.FK_TillProducts_ProductVATRates", "ProductVATRate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductVATRate>("EventManagementSystemModel.FK_TillProducts_ProductVATRates", "ProductVATRate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductVATRate> ProductVATRateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductVATRate>("EventManagementSystemModel.FK_TillProducts_ProductVATRates", "ProductVATRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductVATRate>("EventManagementSystemModel.FK_TillProducts_ProductVATRates", "ProductVATRate", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillProducts_Tills", "Till")]
        public Till Till
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillProducts_Tills", "Till").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillProducts_Tills", "Till").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Till> TillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillProducts_Tills", "Till");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Till>("EventManagementSystemModel.FK_TillProducts_Tills", "Till", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillProductTills_TillProducts", "TillProductTill")]
        public EntityCollection<TillProductTill> TillProductTills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillProductTill>("EventManagementSystemModel.FK_TillProductTills_TillProducts", "TillProductTill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillProductTill>("EventManagementSystemModel.FK_TillProductTills_TillProducts", "TillProductTill", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactinProducts_TillProducts", "TillTransactionProduct")]
        public EntityCollection<TillTransactionProduct> TillTransactionProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTransactionProduct>("EventManagementSystemModel.FK_TillTransactinProducts_TillProducts", "TillTransactionProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTransactionProduct>("EventManagementSystemModel.FK_TillTransactinProducts_TillProducts", "TillTransactionProduct", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "TillProductTill")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class TillProductTill : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new TillProductTill object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="tillID">Initial value of the TillID property.</param>
        /// <param name="tillProductID">Initial value of the TillProductID property.</param>
        public static TillProductTill CreateTillProductTill(global::System.Guid id, global::System.Guid tillID, global::System.Guid tillProductID)
        {
            TillProductTill tillProductTill = new TillProductTill();
            tillProductTill.ID = id;
            tillProductTill.TillID = tillID;
            tillProductTill.TillProductID = tillProductID;
            return tillProductTill;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TillID
        {
            get
            {
                return _TillID;
            }
            set
            {
                OnTillIDChanging(value);
                ReportPropertyChanging("TillID");
                _TillID = StructuralObject.SetValidValue(value, "TillID");
                ReportPropertyChanged("TillID");
                OnTillIDChanged();
            }
        }
        private global::System.Guid _TillID;
        partial void OnTillIDChanging(global::System.Guid value);
        partial void OnTillIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TillProductID
        {
            get
            {
                return _TillProductID;
            }
            set
            {
                OnTillProductIDChanging(value);
                ReportPropertyChanging("TillProductID");
                _TillProductID = StructuralObject.SetValidValue(value, "TillProductID");
                ReportPropertyChanged("TillProductID");
                OnTillProductIDChanged();
            }
        }
        private global::System.Guid _TillProductID;
        partial void OnTillProductIDChanging(global::System.Guid value);
        partial void OnTillProductIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillProductTills_TillProducts", "TillProduct")]
        public TillProduct TillProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillProduct>("EventManagementSystemModel.FK_TillProductTills_TillProducts", "TillProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillProduct>("EventManagementSystemModel.FK_TillProductTills_TillProducts", "TillProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TillProduct> TillProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillProduct>("EventManagementSystemModel.FK_TillProductTills_TillProducts", "TillProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TillProduct>("EventManagementSystemModel.FK_TillProductTills_TillProducts", "TillProduct", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillProductTills_Tills", "Till")]
        public Till Till
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillProductTills_Tills", "Till").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillProductTills_Tills", "Till").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Till> TillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillProductTills_Tills", "Till");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Till>("EventManagementSystemModel.FK_TillProductTills_Tills", "Till", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "TillTabTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class TillTabTransaction : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new TillTabTransaction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="saleID">Initial value of the SaleID property.</param>
        /// <param name="clerkID">Initial value of the ClerkID property.</param>
        /// <param name="mode">Initial value of the Mode property.</param>
        /// <param name="consecNumber">Initial value of the ConsecNumber property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="saleDescriptor">Initial value of the SaleDescriptor property.</param>
        /// <param name="tillID">Initial value of the TillID property.</param>
        public static TillTabTransaction CreateTillTabTransaction(global::System.Guid id, global::System.DateTime date, global::System.String saleID, global::System.Guid clerkID, global::System.Int32 mode, global::System.Int32 consecNumber, global::System.Int32 status, global::System.String saleDescriptor, global::System.Guid tillID)
        {
            TillTabTransaction tillTabTransaction = new TillTabTransaction();
            tillTabTransaction.ID = id;
            tillTabTransaction.Date = date;
            tillTabTransaction.SaleID = saleID;
            tillTabTransaction.ClerkID = clerkID;
            tillTabTransaction.Mode = mode;
            tillTabTransaction.ConsecNumber = consecNumber;
            tillTabTransaction.Status = status;
            tillTabTransaction.SaleDescriptor = saleDescriptor;
            tillTabTransaction.TillID = tillID;
            return tillTabTransaction;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String SaleID
        {
            get
            {
                return _SaleID;
            }
            set
            {
                OnSaleIDChanging(value);
                ReportPropertyChanging("SaleID");
                _SaleID = StructuralObject.SetValidValue(value, false, "SaleID");
                ReportPropertyChanged("SaleID");
                OnSaleIDChanged();
            }
        }
        private global::System.String _SaleID;
        partial void OnSaleIDChanging(global::System.String value);
        partial void OnSaleIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ClerkID
        {
            get
            {
                return _ClerkID;
            }
            set
            {
                OnClerkIDChanging(value);
                ReportPropertyChanging("ClerkID");
                _ClerkID = StructuralObject.SetValidValue(value, "ClerkID");
                ReportPropertyChanged("ClerkID");
                OnClerkIDChanged();
            }
        }
        private global::System.Guid _ClerkID;
        partial void OnClerkIDChanging(global::System.Guid value);
        partial void OnClerkIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Mode
        {
            get
            {
                return _Mode;
            }
            set
            {
                OnModeChanging(value);
                ReportPropertyChanging("Mode");
                _Mode = StructuralObject.SetValidValue(value, "Mode");
                ReportPropertyChanged("Mode");
                OnModeChanged();
            }
        }
        private global::System.Int32 _Mode;
        partial void OnModeChanging(global::System.Int32 value);
        partial void OnModeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConsecNumber
        {
            get
            {
                return _ConsecNumber;
            }
            set
            {
                OnConsecNumberChanging(value);
                ReportPropertyChanging("ConsecNumber");
                _ConsecNumber = StructuralObject.SetValidValue(value, "ConsecNumber");
                ReportPropertyChanged("ConsecNumber");
                OnConsecNumberChanged();
            }
        }
        private global::System.Int32 _ConsecNumber;
        partial void OnConsecNumberChanging(global::System.Int32 value);
        partial void OnConsecNumberChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemCount
        {
            get
            {
                return _ItemCount;
            }
            set
            {
                OnItemCountChanging(value);
                ReportPropertyChanging("ItemCount");
                _ItemCount = StructuralObject.SetValidValue(value, "ItemCount");
                ReportPropertyChanged("ItemCount");
                OnItemCountChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemCount;
        partial void OnItemCountChanging(Nullable<global::System.Int32> value);
        partial void OnItemCountChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SaleTotal
        {
            get
            {
                return _SaleTotal;
            }
            set
            {
                OnSaleTotalChanging(value);
                ReportPropertyChanging("SaleTotal");
                _SaleTotal = StructuralObject.SetValidValue(value, "SaleTotal");
                ReportPropertyChanged("SaleTotal");
                OnSaleTotalChanged();
            }
        }
        private Nullable<global::System.Single> _SaleTotal;
        partial void OnSaleTotalChanging(Nullable<global::System.Single> value);
        partial void OnSaleTotalChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> TaxableAmount
        {
            get
            {
                return _TaxableAmount;
            }
            set
            {
                OnTaxableAmountChanging(value);
                ReportPropertyChanging("TaxableAmount");
                _TaxableAmount = StructuralObject.SetValidValue(value, "TaxableAmount");
                ReportPropertyChanged("TaxableAmount");
                OnTaxableAmountChanged();
            }
        }
        private Nullable<global::System.Single> _TaxableAmount;
        partial void OnTaxableAmountChanging(Nullable<global::System.Single> value);
        partial void OnTaxableAmountChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SaleTaxableAmount
        {
            get
            {
                return _SaleTaxableAmount;
            }
            set
            {
                OnSaleTaxableAmountChanging(value);
                ReportPropertyChanging("SaleTaxableAmount");
                _SaleTaxableAmount = StructuralObject.SetValidValue(value, "SaleTaxableAmount");
                ReportPropertyChanged("SaleTaxableAmount");
                OnSaleTaxableAmountChanged();
            }
        }
        private Nullable<global::System.Single> _SaleTaxableAmount;
        partial void OnSaleTaxableAmountChanging(Nullable<global::System.Single> value);
        partial void OnSaleTaxableAmountChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> NetTotal
        {
            get
            {
                return _NetTotal;
            }
            set
            {
                OnNetTotalChanging(value);
                ReportPropertyChanging("NetTotal");
                _NetTotal = StructuralObject.SetValidValue(value, "NetTotal");
                ReportPropertyChanged("NetTotal");
                OnNetTotalChanged();
            }
        }
        private Nullable<global::System.Single> _NetTotal;
        partial void OnNetTotalChanging(Nullable<global::System.Single> value);
        partial void OnNetTotalChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value, "OrderNumber");
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderNumber;
        partial void OnOrderNumberChanging(Nullable<global::System.Int32> value);
        partial void OnOrderNumberChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Check
        {
            get
            {
                return _Check;
            }
            set
            {
                OnCheckChanging(value);
                ReportPropertyChanging("Check");
                _Check = StructuralObject.SetValidValue(value, true, "Check");
                ReportPropertyChanged("Check");
                OnCheckChanged();
            }
        }
        private global::System.String _Check;
        partial void OnCheckChanging(global::System.String value);
        partial void OnCheckChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String SaleDescriptor
        {
            get
            {
                return _SaleDescriptor;
            }
            set
            {
                OnSaleDescriptorChanging(value);
                ReportPropertyChanging("SaleDescriptor");
                _SaleDescriptor = StructuralObject.SetValidValue(value, false, "SaleDescriptor");
                ReportPropertyChanged("SaleDescriptor");
                OnSaleDescriptorChanged();
            }
        }
        private global::System.String _SaleDescriptor;
        partial void OnSaleDescriptorChanging(global::System.String value);
        partial void OnSaleDescriptorChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TillID
        {
            get
            {
                return _TillID;
            }
            set
            {
                OnTillIDChanging(value);
                ReportPropertyChanging("TillID");
                _TillID = StructuralObject.SetValidValue(value, "TillID");
                ReportPropertyChanged("TillID");
                OnTillIDChanged();
            }
        }
        private global::System.Guid _TillID;
        partial void OnTillIDChanging(global::System.Guid value);
        partial void OnTillIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTabTransactions_Clerks", "Clerk")]
        public Clerk Clerk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clerk>("EventManagementSystemModel.FK_TillTabTransactions_Clerks", "Clerk").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clerk>("EventManagementSystemModel.FK_TillTabTransactions_Clerks", "Clerk").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Clerk> ClerkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clerk>("EventManagementSystemModel.FK_TillTabTransactions_Clerks", "Clerk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Clerk>("EventManagementSystemModel.FK_TillTabTransactions_Clerks", "Clerk", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTabTransactions_Tills", "Till")]
        public Till Till
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillTabTransactions_Tills", "Till").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillTabTransactions_Tills", "Till").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Till> TillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillTabTransactions_Tills", "Till");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Till>("EventManagementSystemModel.FK_TillTabTransactions_Tills", "Till", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionDetails_TillTabTransactions", "TillTransactionDetail")]
        public EntityCollection<TillTransactionDetail> TillTransactionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTransactionDetail>("EventManagementSystemModel.FK_TillTransactionDetails_TillTabTransactions", "TillTransactionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTransactionDetail>("EventManagementSystemModel.FK_TillTransactionDetails_TillTabTransactions", "TillTransactionDetail", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "TillTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class TillTransaction : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new TillTransaction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="saleID">Initial value of the SaleID property.</param>
        /// <param name="clerkID">Initial value of the ClerkID property.</param>
        /// <param name="mode">Initial value of the Mode property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="saleDescriptor">Initial value of the SaleDescriptor property.</param>
        /// <param name="tillID">Initial value of the TillID property.</param>
        public static TillTransaction CreateTillTransaction(global::System.Guid id, global::System.DateTime date, global::System.String saleID, global::System.Guid clerkID, global::System.Int32 mode, global::System.Int32 status, global::System.String saleDescriptor, global::System.Guid tillID)
        {
            TillTransaction tillTransaction = new TillTransaction();
            tillTransaction.ID = id;
            tillTransaction.Date = date;
            tillTransaction.SaleID = saleID;
            tillTransaction.ClerkID = clerkID;
            tillTransaction.Mode = mode;
            tillTransaction.Status = status;
            tillTransaction.SaleDescriptor = saleDescriptor;
            tillTransaction.TillID = tillID;
            return tillTransaction;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String SaleID
        {
            get
            {
                return _SaleID;
            }
            set
            {
                OnSaleIDChanging(value);
                ReportPropertyChanging("SaleID");
                _SaleID = StructuralObject.SetValidValue(value, false, "SaleID");
                ReportPropertyChanged("SaleID");
                OnSaleIDChanged();
            }
        }
        private global::System.String _SaleID;
        partial void OnSaleIDChanging(global::System.String value);
        partial void OnSaleIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ClerkID
        {
            get
            {
                return _ClerkID;
            }
            set
            {
                OnClerkIDChanging(value);
                ReportPropertyChanging("ClerkID");
                _ClerkID = StructuralObject.SetValidValue(value, "ClerkID");
                ReportPropertyChanged("ClerkID");
                OnClerkIDChanged();
            }
        }
        private global::System.Guid _ClerkID;
        partial void OnClerkIDChanging(global::System.Guid value);
        partial void OnClerkIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Mode
        {
            get
            {
                return _Mode;
            }
            set
            {
                OnModeChanging(value);
                ReportPropertyChanging("Mode");
                _Mode = StructuralObject.SetValidValue(value, "Mode");
                ReportPropertyChanged("Mode");
                OnModeChanged();
            }
        }
        private global::System.Int32 _Mode;
        partial void OnModeChanging(global::System.Int32 value);
        partial void OnModeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemCount
        {
            get
            {
                return _ItemCount;
            }
            set
            {
                OnItemCountChanging(value);
                ReportPropertyChanging("ItemCount");
                _ItemCount = StructuralObject.SetValidValue(value, "ItemCount");
                ReportPropertyChanged("ItemCount");
                OnItemCountChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemCount;
        partial void OnItemCountChanging(Nullable<global::System.Int32> value);
        partial void OnItemCountChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SaleTotal
        {
            get
            {
                return _SaleTotal;
            }
            set
            {
                OnSaleTotalChanging(value);
                ReportPropertyChanging("SaleTotal");
                _SaleTotal = StructuralObject.SetValidValue(value, "SaleTotal");
                ReportPropertyChanged("SaleTotal");
                OnSaleTotalChanged();
            }
        }
        private Nullable<global::System.Single> _SaleTotal;
        partial void OnSaleTotalChanging(Nullable<global::System.Single> value);
        partial void OnSaleTotalChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> TaxableAmount
        {
            get
            {
                return _TaxableAmount;
            }
            set
            {
                OnTaxableAmountChanging(value);
                ReportPropertyChanging("TaxableAmount");
                _TaxableAmount = StructuralObject.SetValidValue(value, "TaxableAmount");
                ReportPropertyChanged("TaxableAmount");
                OnTaxableAmountChanged();
            }
        }
        private Nullable<global::System.Single> _TaxableAmount;
        partial void OnTaxableAmountChanging(Nullable<global::System.Single> value);
        partial void OnTaxableAmountChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SaleTaxableAmount
        {
            get
            {
                return _SaleTaxableAmount;
            }
            set
            {
                OnSaleTaxableAmountChanging(value);
                ReportPropertyChanging("SaleTaxableAmount");
                _SaleTaxableAmount = StructuralObject.SetValidValue(value, "SaleTaxableAmount");
                ReportPropertyChanged("SaleTaxableAmount");
                OnSaleTaxableAmountChanged();
            }
        }
        private Nullable<global::System.Single> _SaleTaxableAmount;
        partial void OnSaleTaxableAmountChanging(Nullable<global::System.Single> value);
        partial void OnSaleTaxableAmountChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> NetTotal
        {
            get
            {
                return _NetTotal;
            }
            set
            {
                OnNetTotalChanging(value);
                ReportPropertyChanging("NetTotal");
                _NetTotal = StructuralObject.SetValidValue(value, "NetTotal");
                ReportPropertyChanged("NetTotal");
                OnNetTotalChanged();
            }
        }
        private Nullable<global::System.Single> _NetTotal;
        partial void OnNetTotalChanging(Nullable<global::System.Single> value);
        partial void OnNetTotalChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderNumber
        {
            get
            {
                return _OrderNumber;
            }
            set
            {
                OnOrderNumberChanging(value);
                ReportPropertyChanging("OrderNumber");
                _OrderNumber = StructuralObject.SetValidValue(value, "OrderNumber");
                ReportPropertyChanged("OrderNumber");
                OnOrderNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderNumber;
        partial void OnOrderNumberChanging(Nullable<global::System.Int32> value);
        partial void OnOrderNumberChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Check
        {
            get
            {
                return _Check;
            }
            set
            {
                OnCheckChanging(value);
                ReportPropertyChanging("Check");
                _Check = StructuralObject.SetValidValue(value, true, "Check");
                ReportPropertyChanged("Check");
                OnCheckChanged();
            }
        }
        private global::System.String _Check;
        partial void OnCheckChanging(global::System.String value);
        partial void OnCheckChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String SaleDescriptor
        {
            get
            {
                return _SaleDescriptor;
            }
            set
            {
                OnSaleDescriptorChanging(value);
                ReportPropertyChanging("SaleDescriptor");
                _SaleDescriptor = StructuralObject.SetValidValue(value, false, "SaleDescriptor");
                ReportPropertyChanged("SaleDescriptor");
                OnSaleDescriptorChanged();
            }
        }
        private global::System.String _SaleDescriptor;
        partial void OnSaleDescriptorChanging(global::System.String value);
        partial void OnSaleDescriptorChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TillID
        {
            get
            {
                return _TillID;
            }
            set
            {
                OnTillIDChanging(value);
                ReportPropertyChanging("TillID");
                _TillID = StructuralObject.SetValidValue(value, "TillID");
                ReportPropertyChanged("TillID");
                OnTillIDChanged();
            }
        }
        private global::System.Guid _TillID;
        partial void OnTillIDChanging(global::System.Guid value);
        partial void OnTillIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactions_Clerks", "Clerk")]
        public Clerk Clerk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clerk>("EventManagementSystemModel.FK_TillTransactions_Clerks", "Clerk").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clerk>("EventManagementSystemModel.FK_TillTransactions_Clerks", "Clerk").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Clerk> ClerkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clerk>("EventManagementSystemModel.FK_TillTransactions_Clerks", "Clerk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Clerk>("EventManagementSystemModel.FK_TillTransactions_Clerks", "Clerk", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactions_Tills", "Till")]
        public Till Till
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillTransactions_Tills", "Till").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillTransactions_Tills", "Till").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Till> TillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Till>("EventManagementSystemModel.FK_TillTransactions_Tills", "Till");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Till>("EventManagementSystemModel.FK_TillTransactions_Tills", "Till", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionDepartments_TillTransactions", "TillTransactionDepartment")]
        public EntityCollection<TillTransactionDepartment> TillTransactionDepartments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTransactionDepartment>("EventManagementSystemModel.FK_TillTransactionDepartments_TillTransactions", "TillTransactionDepartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTransactionDepartment>("EventManagementSystemModel.FK_TillTransactionDepartments_TillTransactions", "TillTransactionDepartment", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionDetails_TillTransactions", "TillTransactionDetail")]
        public EntityCollection<TillTransactionDetail> TillTransactionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTransactionDetail>("EventManagementSystemModel.FK_TillTransactionDetails_TillTransactions", "TillTransactionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTransactionDetail>("EventManagementSystemModel.FK_TillTransactionDetails_TillTransactions", "TillTransactionDetail", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionFinaliseKeys_TillTransactions", "TillTransactionFinaliseKey")]
        public EntityCollection<TillTransactionFinaliseKey> TillTransactionFinaliseKeys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTransactionFinaliseKey>("EventManagementSystemModel.FK_TillTransactionFinaliseKeys_TillTransactions", "TillTransactionFinaliseKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTransactionFinaliseKey>("EventManagementSystemModel.FK_TillTransactionFinaliseKeys_TillTransactions", "TillTransactionFinaliseKey", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionGroups_TillTransactions", "TillTransactionGroup")]
        public EntityCollection<TillTransactionGroup> TillTransactionGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTransactionGroup>("EventManagementSystemModel.FK_TillTransactionGroups_TillTransactions", "TillTransactionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTransactionGroup>("EventManagementSystemModel.FK_TillTransactionGroups_TillTransactions", "TillTransactionGroup", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactinProducts_TillTransactions", "TillTransactionProduct")]
        public EntityCollection<TillTransactionProduct> TillTransactionProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TillTransactionProduct>("EventManagementSystemModel.FK_TillTransactinProducts_TillTransactions", "TillTransactionProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TillTransactionProduct>("EventManagementSystemModel.FK_TillTransactinProducts_TillTransactions", "TillTransactionProduct", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "TillTransactionDepartment")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class TillTransactionDepartment : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new TillTransactionDepartment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="departmentID">Initial value of the DepartmentID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static TillTransactionDepartment CreateTillTransactionDepartment(global::System.Guid id, global::System.Guid transactionID, global::System.Guid departmentID, global::System.Decimal value, global::System.Double quantity)
        {
            TillTransactionDepartment tillTransactionDepartment = new TillTransactionDepartment();
            tillTransactionDepartment.ID = id;
            tillTransactionDepartment.TransactionID = transactionID;
            tillTransactionDepartment.DepartmentID = departmentID;
            tillTransactionDepartment.Value = value;
            tillTransactionDepartment.Quantity = quantity;
            return tillTransactionDepartment;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                OnTransactionIDChanging(value);
                ReportPropertyChanging("TransactionID");
                _TransactionID = StructuralObject.SetValidValue(value, "TransactionID");
                ReportPropertyChanged("TransactionID");
                OnTransactionIDChanged();
            }
        }
        private global::System.Guid _TransactionID;
        partial void OnTransactionIDChanging(global::System.Guid value);
        partial void OnTransactionIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value, "DepartmentID");
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private global::System.Guid _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Guid value);
        partial void OnDepartmentIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionDepartments_ProductDepartments", "ProductDepartment")]
        public ProductDepartment ProductDepartment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductDepartment>("EventManagementSystemModel.FK_TillTransactionDepartments_ProductDepartments", "ProductDepartment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductDepartment>("EventManagementSystemModel.FK_TillTransactionDepartments_ProductDepartments", "ProductDepartment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductDepartment> ProductDepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductDepartment>("EventManagementSystemModel.FK_TillTransactionDepartments_ProductDepartments", "ProductDepartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductDepartment>("EventManagementSystemModel.FK_TillTransactionDepartments_ProductDepartments", "ProductDepartment", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionDepartments_TillTransactions", "TillTransaction")]
        public TillTransaction TillTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionDepartments_TillTransactions", "TillTransaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionDepartments_TillTransactions", "TillTransaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TillTransaction> TillTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionDepartments_TillTransactions", "TillTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionDepartments_TillTransactions", "TillTransaction", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "TillTransactionDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class TillTransactionDetail : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new TillTransactionDetail object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="saleID">Initial value of the SaleID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="priceLevel">Initial value of the PriceLevel property.</param>
        public static TillTransactionDetail CreateTillTransactionDetail(global::System.Guid id, global::System.Guid transactionID, global::System.String saleID, global::System.Double quantity, global::System.Int32 priceLevel)
        {
            TillTransactionDetail tillTransactionDetail = new TillTransactionDetail();
            tillTransactionDetail.ID = id;
            tillTransactionDetail.TransactionID = transactionID;
            tillTransactionDetail.SaleID = saleID;
            tillTransactionDetail.Quantity = quantity;
            tillTransactionDetail.PriceLevel = priceLevel;
            return tillTransactionDetail;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                OnTransactionIDChanging(value);
                ReportPropertyChanging("TransactionID");
                _TransactionID = StructuralObject.SetValidValue(value, "TransactionID");
                ReportPropertyChanged("TransactionID");
                OnTransactionIDChanged();
            }
        }
        private global::System.Guid _TransactionID;
        partial void OnTransactionIDChanging(global::System.Guid value);
        partial void OnTransactionIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String SaleID
        {
            get
            {
                return _SaleID;
            }
            set
            {
                OnSaleIDChanging(value);
                ReportPropertyChanging("SaleID");
                _SaleID = StructuralObject.SetValidValue(value, false, "SaleID");
                ReportPropertyChanged("SaleID");
                OnSaleIDChanged();
            }
        }
        private global::System.String _SaleID;
        partial void OnSaleIDChanging(global::System.String value);
        partial void OnSaleIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _Value;
        partial void OnValueChanging(Nullable<global::System.Decimal> value);
        partial void OnValueChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriceLevel
        {
            get
            {
                return _PriceLevel;
            }
            set
            {
                OnPriceLevelChanging(value);
                ReportPropertyChanging("PriceLevel");
                _PriceLevel = StructuralObject.SetValidValue(value, "PriceLevel");
                ReportPropertyChanged("PriceLevel");
                OnPriceLevelChanged();
            }
        }
        private global::System.Int32 _PriceLevel;
        partial void OnPriceLevelChanging(global::System.Int32 value);
        partial void OnPriceLevelChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> File
        {
            get
            {
                return _File;
            }
            set
            {
                OnFileChanging(value);
                ReportPropertyChanging("File");
                _File = StructuralObject.SetValidValue(value, "File");
                ReportPropertyChanged("File");
                OnFileChanged();
            }
        }
        private Nullable<global::System.Int32> _File;
        partial void OnFileChanging(Nullable<global::System.Int32> value);
        partial void OnFileChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemRecord
        {
            get
            {
                return _ItemRecord;
            }
            set
            {
                OnItemRecordChanging(value);
                ReportPropertyChanging("ItemRecord");
                _ItemRecord = StructuralObject.SetValidValue(value, "ItemRecord");
                ReportPropertyChanged("ItemRecord");
                OnItemRecordChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemRecord;
        partial void OnItemRecordChanging(Nullable<global::System.Int32> value);
        partial void OnItemRecordChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TabTransactionID
        {
            get
            {
                return _TabTransactionID;
            }
            set
            {
                OnTabTransactionIDChanging(value);
                ReportPropertyChanging("TabTransactionID");
                _TabTransactionID = StructuralObject.SetValidValue(value, "TabTransactionID");
                ReportPropertyChanged("TabTransactionID");
                OnTabTransactionIDChanged();
            }
        }
        private Nullable<global::System.Guid> _TabTransactionID;
        partial void OnTabTransactionIDChanging(Nullable<global::System.Guid> value);
        partial void OnTabTransactionIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionDetails_TillTabTransactions", "TillTabTransaction")]
        public TillTabTransaction TillTabTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTabTransaction>("EventManagementSystemModel.FK_TillTransactionDetails_TillTabTransactions", "TillTabTransaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTabTransaction>("EventManagementSystemModel.FK_TillTransactionDetails_TillTabTransactions", "TillTabTransaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TillTabTransaction> TillTabTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTabTransaction>("EventManagementSystemModel.FK_TillTransactionDetails_TillTabTransactions", "TillTabTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TillTabTransaction>("EventManagementSystemModel.FK_TillTransactionDetails_TillTabTransactions", "TillTabTransaction", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionDetails_TillTransactions", "TillTransaction")]
        public TillTransaction TillTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionDetails_TillTransactions", "TillTransaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionDetails_TillTransactions", "TillTransaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TillTransaction> TillTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionDetails_TillTransactions", "TillTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionDetails_TillTransactions", "TillTransaction", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "TillTransactionFinaliseKey")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class TillTransactionFinaliseKey : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new TillTransactionFinaliseKey object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="finaliseKeyID">Initial value of the FinaliseKeyID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="priceLevel">Initial value of the PriceLevel property.</param>
        public static TillTransactionFinaliseKey CreateTillTransactionFinaliseKey(global::System.Guid id, global::System.Guid transactionID, global::System.Guid finaliseKeyID, global::System.Decimal value, global::System.Double quantity, global::System.Int32 priceLevel)
        {
            TillTransactionFinaliseKey tillTransactionFinaliseKey = new TillTransactionFinaliseKey();
            tillTransactionFinaliseKey.ID = id;
            tillTransactionFinaliseKey.TransactionID = transactionID;
            tillTransactionFinaliseKey.FinaliseKeyID = finaliseKeyID;
            tillTransactionFinaliseKey.Value = value;
            tillTransactionFinaliseKey.Quantity = quantity;
            tillTransactionFinaliseKey.PriceLevel = priceLevel;
            return tillTransactionFinaliseKey;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                OnTransactionIDChanging(value);
                ReportPropertyChanging("TransactionID");
                _TransactionID = StructuralObject.SetValidValue(value, "TransactionID");
                ReportPropertyChanged("TransactionID");
                OnTransactionIDChanged();
            }
        }
        private global::System.Guid _TransactionID;
        partial void OnTransactionIDChanging(global::System.Guid value);
        partial void OnTransactionIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid FinaliseKeyID
        {
            get
            {
                return _FinaliseKeyID;
            }
            set
            {
                OnFinaliseKeyIDChanging(value);
                ReportPropertyChanging("FinaliseKeyID");
                _FinaliseKeyID = StructuralObject.SetValidValue(value, "FinaliseKeyID");
                ReportPropertyChanged("FinaliseKeyID");
                OnFinaliseKeyIDChanged();
            }
        }
        private global::System.Guid _FinaliseKeyID;
        partial void OnFinaliseKeyIDChanging(global::System.Guid value);
        partial void OnFinaliseKeyIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriceLevel
        {
            get
            {
                return _PriceLevel;
            }
            set
            {
                OnPriceLevelChanging(value);
                ReportPropertyChanging("PriceLevel");
                _PriceLevel = StructuralObject.SetValidValue(value, "PriceLevel");
                ReportPropertyChanged("PriceLevel");
                OnPriceLevelChanged();
            }
        }
        private global::System.Int32 _PriceLevel;
        partial void OnPriceLevelChanging(global::System.Int32 value);
        partial void OnPriceLevelChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionFinaliseKeys_FinaliseKeys", "FinaliseKey")]
        public FinaliseKey FinaliseKey
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinaliseKey>("EventManagementSystemModel.FK_TillTransactionFinaliseKeys_FinaliseKeys", "FinaliseKey").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinaliseKey>("EventManagementSystemModel.FK_TillTransactionFinaliseKeys_FinaliseKeys", "FinaliseKey").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinaliseKey> FinaliseKeyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinaliseKey>("EventManagementSystemModel.FK_TillTransactionFinaliseKeys_FinaliseKeys", "FinaliseKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinaliseKey>("EventManagementSystemModel.FK_TillTransactionFinaliseKeys_FinaliseKeys", "FinaliseKey", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionFinaliseKeys_TillTransactions", "TillTransaction")]
        public TillTransaction TillTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionFinaliseKeys_TillTransactions", "TillTransaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionFinaliseKeys_TillTransactions", "TillTransaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TillTransaction> TillTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionFinaliseKeys_TillTransactions", "TillTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionFinaliseKeys_TillTransactions", "TillTransaction", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "TillTransactionGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class TillTransactionGroup : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new TillTransactionGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="priceLevel">Initial value of the PriceLevel property.</param>
        public static TillTransactionGroup CreateTillTransactionGroup(global::System.Guid id, global::System.Guid transactionID, global::System.Guid groupID, global::System.Decimal value, global::System.Double quantity, global::System.Int32 priceLevel)
        {
            TillTransactionGroup tillTransactionGroup = new TillTransactionGroup();
            tillTransactionGroup.ID = id;
            tillTransactionGroup.TransactionID = transactionID;
            tillTransactionGroup.GroupID = groupID;
            tillTransactionGroup.Value = value;
            tillTransactionGroup.Quantity = quantity;
            tillTransactionGroup.PriceLevel = priceLevel;
            return tillTransactionGroup;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                OnTransactionIDChanging(value);
                ReportPropertyChanging("TransactionID");
                _TransactionID = StructuralObject.SetValidValue(value, "TransactionID");
                ReportPropertyChanged("TransactionID");
                OnTransactionIDChanged();
            }
        }
        private global::System.Guid _TransactionID;
        partial void OnTransactionIDChanging(global::System.Guid value);
        partial void OnTransactionIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value, "GroupID");
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
        private global::System.Guid _GroupID;
        partial void OnGroupIDChanging(global::System.Guid value);
        partial void OnGroupIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriceLevel
        {
            get
            {
                return _PriceLevel;
            }
            set
            {
                OnPriceLevelChanging(value);
                ReportPropertyChanging("PriceLevel");
                _PriceLevel = StructuralObject.SetValidValue(value, "PriceLevel");
                ReportPropertyChanged("PriceLevel");
                OnPriceLevelChanged();
            }
        }
        private global::System.Int32 _PriceLevel;
        partial void OnPriceLevelChanging(global::System.Int32 value);
        partial void OnPriceLevelChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionGroups_ProductGroups", "ProductGroup")]
        public ProductGroup ProductGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductGroup>("EventManagementSystemModel.FK_TillTransactionGroups_ProductGroups", "ProductGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductGroup>("EventManagementSystemModel.FK_TillTransactionGroups_ProductGroups", "ProductGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductGroup> ProductGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductGroup>("EventManagementSystemModel.FK_TillTransactionGroups_ProductGroups", "ProductGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductGroup>("EventManagementSystemModel.FK_TillTransactionGroups_ProductGroups", "ProductGroup", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactionGroups_TillTransactions", "TillTransaction")]
        public TillTransaction TillTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionGroups_TillTransactions", "TillTransaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionGroups_TillTransactions", "TillTransaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TillTransaction> TillTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionGroups_TillTransactions", "TillTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactionGroups_TillTransactions", "TillTransaction", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "TillTransactionProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class TillTransactionProduct : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new TillTransactionProduct object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="tillProductID">Initial value of the TillProductID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="priceLevel">Initial value of the PriceLevel property.</param>
        public static TillTransactionProduct CreateTillTransactionProduct(global::System.Guid id, global::System.Guid transactionID, global::System.Guid tillProductID, global::System.Decimal value, global::System.Double quantity, global::System.Int32 priceLevel)
        {
            TillTransactionProduct tillTransactionProduct = new TillTransactionProduct();
            tillTransactionProduct.ID = id;
            tillTransactionProduct.TransactionID = transactionID;
            tillTransactionProduct.TillProductID = tillProductID;
            tillTransactionProduct.Value = value;
            tillTransactionProduct.Quantity = quantity;
            tillTransactionProduct.PriceLevel = priceLevel;
            return tillTransactionProduct;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                OnTransactionIDChanging(value);
                ReportPropertyChanging("TransactionID");
                _TransactionID = StructuralObject.SetValidValue(value, "TransactionID");
                ReportPropertyChanged("TransactionID");
                OnTransactionIDChanged();
            }
        }
        private global::System.Guid _TransactionID;
        partial void OnTransactionIDChanging(global::System.Guid value);
        partial void OnTransactionIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid TillProductID
        {
            get
            {
                return _TillProductID;
            }
            set
            {
                OnTillProductIDChanging(value);
                ReportPropertyChanging("TillProductID");
                _TillProductID = StructuralObject.SetValidValue(value, "TillProductID");
                ReportPropertyChanged("TillProductID");
                OnTillProductIDChanged();
            }
        }
        private global::System.Guid _TillProductID;
        partial void OnTillProductIDChanging(global::System.Guid value);
        partial void OnTillProductIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriceLevel
        {
            get
            {
                return _PriceLevel;
            }
            set
            {
                OnPriceLevelChanging(value);
                ReportPropertyChanging("PriceLevel");
                _PriceLevel = StructuralObject.SetValidValue(value, "PriceLevel");
                ReportPropertyChanged("PriceLevel");
                OnPriceLevelChanged();
            }
        }
        private global::System.Int32 _PriceLevel;
        partial void OnPriceLevelChanging(global::System.Int32 value);
        partial void OnPriceLevelChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SalePrice
        {
            get
            {
                return _SalePrice;
            }
            set
            {
                OnSalePriceChanging(value);
                ReportPropertyChanging("SalePrice");
                _SalePrice = StructuralObject.SetValidValue(value, "SalePrice");
                ReportPropertyChanged("SalePrice");
                OnSalePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _SalePrice;
        partial void OnSalePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnSalePriceChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value, "Discount");
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnDiscountChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Cash
        {
            get
            {
                return _Cash;
            }
            set
            {
                OnCashChanging(value);
                ReportPropertyChanging("Cash");
                _Cash = StructuralObject.SetValidValue(value, "Cash");
                ReportPropertyChanged("Cash");
                OnCashChanged();
            }
        }
        private Nullable<global::System.Decimal> _Cash;
        partial void OnCashChanging(Nullable<global::System.Decimal> value);
        partial void OnCashChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CreditCard
        {
            get
            {
                return _CreditCard;
            }
            set
            {
                OnCreditCardChanging(value);
                ReportPropertyChanging("CreditCard");
                _CreditCard = StructuralObject.SetValidValue(value, "CreditCard");
                ReportPropertyChanged("CreditCard");
                OnCreditCardChanged();
            }
        }
        private Nullable<global::System.Decimal> _CreditCard;
        partial void OnCreditCardChanging(Nullable<global::System.Decimal> value);
        partial void OnCreditCardChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Cheque
        {
            get
            {
                return _Cheque;
            }
            set
            {
                OnChequeChanging(value);
                ReportPropertyChanging("Cheque");
                _Cheque = StructuralObject.SetValidValue(value, "Cheque");
                ReportPropertyChanged("Cheque");
                OnChequeChanged();
            }
        }
        private Nullable<global::System.Decimal> _Cheque;
        partial void OnChequeChanging(Nullable<global::System.Decimal> value);
        partial void OnChequeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Voucher
        {
            get
            {
                return _Voucher;
            }
            set
            {
                OnVoucherChanging(value);
                ReportPropertyChanging("Voucher");
                _Voucher = StructuralObject.SetValidValue(value, "Voucher");
                ReportPropertyChanged("Voucher");
                OnVoucherChanged();
            }
        }
        private Nullable<global::System.Decimal> _Voucher;
        partial void OnVoucherChanging(Nullable<global::System.Decimal> value);
        partial void OnVoucherChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ClubCard
        {
            get
            {
                return _ClubCard;
            }
            set
            {
                OnClubCardChanging(value);
                ReportPropertyChanging("ClubCard");
                _ClubCard = StructuralObject.SetValidValue(value, "ClubCard");
                ReportPropertyChanged("ClubCard");
                OnClubCardChanged();
            }
        }
        private Nullable<global::System.Decimal> _ClubCard;
        partial void OnClubCardChanging(Nullable<global::System.Decimal> value);
        partial void OnClubCardChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Events
        {
            get
            {
                return _Events;
            }
            set
            {
                OnEventsChanging(value);
                ReportPropertyChanging("Events");
                _Events = StructuralObject.SetValidValue(value, "Events");
                ReportPropertyChanged("Events");
                OnEventsChanged();
            }
        }
        private Nullable<global::System.Decimal> _Events;
        partial void OnEventsChanging(Nullable<global::System.Decimal> value);
        partial void OnEventsChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Other
        {
            get
            {
                return _Other;
            }
            set
            {
                OnOtherChanging(value);
                ReportPropertyChanging("Other");
                _Other = StructuralObject.SetValidValue(value, "Other");
                ReportPropertyChanged("Other");
                OnOtherChanged();
            }
        }
        private Nullable<global::System.Decimal> _Other;
        partial void OnOtherChanging(Nullable<global::System.Decimal> value);
        partial void OnOtherChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactinProducts_TillProducts", "TillProduct")]
        public TillProduct TillProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillProduct>("EventManagementSystemModel.FK_TillTransactinProducts_TillProducts", "TillProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillProduct>("EventManagementSystemModel.FK_TillTransactinProducts_TillProducts", "TillProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TillProduct> TillProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillProduct>("EventManagementSystemModel.FK_TillTransactinProducts_TillProducts", "TillProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TillProduct>("EventManagementSystemModel.FK_TillTransactinProducts_TillProducts", "TillProduct", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_TillTransactinProducts_TillTransactions", "TillTransaction")]
        public TillTransaction TillTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactinProducts_TillTransactions", "TillTransaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactinProducts_TillTransactions", "TillTransaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TillTransaction> TillTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactinProducts_TillTransactions", "TillTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TillTransaction>("EventManagementSystemModel.FK_TillTransactinProducts_TillTransactions", "TillTransaction", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "TransactionKey")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class TransactionKey : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new TransactionKey object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="record">Initial value of the Record property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TransactionKey CreateTransactionKey(global::System.Guid id, global::System.Int32 record, global::System.String name)
        {
            TransactionKey transactionKey = new TransactionKey();
            transactionKey.ID = id;
            transactionKey.Record = record;
            transactionKey.Name = name;
            return transactionKey;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Int32 Record
        {
            get
            {
                return _Record;
            }
            set
            {
                OnRecordChanging(value);
                ReportPropertyChanging("Record");
                _Record = StructuralObject.SetValidValue(value, "Record");
                ReportPropertyChanged("Record");
                OnRecordChanged();
            }
        }
        private global::System.Int32 _Record;
        partial void OnRecordChanging(global::System.Int32 value);
        partial void OnRecordChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "User")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class User : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="passwordHash">Initial value of the PasswordHash property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="isEnabled">Initial value of the IsEnabled property.</param>
        /// <param name="shortCode">Initial value of the ShortCode property.</param>
        /// <param name="userGroupID">Initial value of the UserGroupID property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="idNumber">Initial value of the IdNumber property.</param>
        /// <param name="colour">Initial value of the Colour property.</param>
        /// <param name="departmentID">Initial value of the DepartmentID property.</param>
        /// <param name="jobTypeID">Initial value of the JobTypeID property.</param>
        /// <param name="internalName">Initial value of the InternalName property.</param>
        public static User CreateUser(global::System.Guid id, global::System.String firstName, global::System.String lastName, global::System.String userName, global::System.String passwordHash, global::System.String passwordSalt, global::System.Boolean isEnabled, global::System.String shortCode, global::System.Guid userGroupID, global::System.String emailAddress, global::System.String idNumber, global::System.String colour, global::System.Guid departmentID, global::System.Guid jobTypeID, global::System.String internalName)
        {
            User user = new User();
            user.ID = id;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.UserName = userName;
            user.PasswordHash = passwordHash;
            user.PasswordSalt = passwordSalt;
            user.IsEnabled = isEnabled;
            user.ShortCode = shortCode;
            user.UserGroupID = userGroupID;
            user.EmailAddress = emailAddress;
            user.IdNumber = idNumber;
            user.Colour = colour;
            user.DepartmentID = departmentID;
            user.JobTypeID = jobTypeID;
            user.InternalName = internalName;
            return user;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, false, "PasswordHash");
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false, "PasswordSalt");
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnabled
        {
            get
            {
                return _IsEnabled;
            }
            set
            {
                OnIsEnabledChanging(value);
                ReportPropertyChanging("IsEnabled");
                _IsEnabled = StructuralObject.SetValidValue(value, "IsEnabled");
                ReportPropertyChanged("IsEnabled");
                OnIsEnabledChanged();
            }
        }
        private global::System.Boolean _IsEnabled;
        partial void OnIsEnabledChanging(global::System.Boolean value);
        partial void OnIsEnabledChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String ShortCode
        {
            get
            {
                return _ShortCode;
            }
            set
            {
                OnShortCodeChanging(value);
                ReportPropertyChanging("ShortCode");
                _ShortCode = StructuralObject.SetValidValue(value, false, "ShortCode");
                ReportPropertyChanged("ShortCode");
                OnShortCodeChanged();
            }
        }
        private global::System.String _ShortCode;
        partial void OnShortCodeChanging(global::System.String value);
        partial void OnShortCodeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid UserGroupID
        {
            get
            {
                return _UserGroupID;
            }
            set
            {
                OnUserGroupIDChanging(value);
                ReportPropertyChanging("UserGroupID");
                _UserGroupID = StructuralObject.SetValidValue(value, "UserGroupID");
                ReportPropertyChanged("UserGroupID");
                OnUserGroupIDChanged();
            }
        }
        private global::System.Guid _UserGroupID;
        partial void OnUserGroupIDChanging(global::System.Guid value);
        partial void OnUserGroupIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false, "EmailAddress");
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String IdNumber
        {
            get
            {
                return _IdNumber;
            }
            set
            {
                OnIdNumberChanging(value);
                ReportPropertyChanging("IdNumber");
                _IdNumber = StructuralObject.SetValidValue(value, false, "IdNumber");
                ReportPropertyChanged("IdNumber");
                OnIdNumberChanged();
            }
        }
        private global::System.String _IdNumber;
        partial void OnIdNumberChanging(global::System.String value);
        partial void OnIdNumberChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String AuthCode
        {
            get
            {
                return _AuthCode;
            }
            set
            {
                OnAuthCodeChanging(value);
                ReportPropertyChanging("AuthCode");
                _AuthCode = StructuralObject.SetValidValue(value, true, "AuthCode");
                ReportPropertyChanged("AuthCode");
                OnAuthCodeChanged();
            }
        }
        private global::System.String _AuthCode;
        partial void OnAuthCodeChanging(global::System.String value);
        partial void OnAuthCodeChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Colour
        {
            get
            {
                return _Colour;
            }
            set
            {
                OnColourChanging(value);
                ReportPropertyChanging("Colour");
                _Colour = StructuralObject.SetValidValue(value, false, "Colour");
                ReportPropertyChanged("Colour");
                OnColourChanged();
            }
        }
        private global::System.String _Colour;
        partial void OnColourChanging(global::System.String value);
        partial void OnColourChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value, "DepartmentID");
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private global::System.Guid _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Guid value);
        partial void OnDepartmentIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid JobTypeID
        {
            get
            {
                return _JobTypeID;
            }
            set
            {
                OnJobTypeIDChanging(value);
                ReportPropertyChanging("JobTypeID");
                _JobTypeID = StructuralObject.SetValidValue(value, "JobTypeID");
                ReportPropertyChanged("JobTypeID");
                OnJobTypeIDChanged();
            }
        }
        private global::System.Guid _JobTypeID;
        partial void OnJobTypeIDChanging(global::System.Guid value);
        partial void OnJobTypeIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String InternalName
        {
            get
            {
                return _InternalName;
            }
            set
            {
                OnInternalNameChanging(value);
                ReportPropertyChanging("InternalName");
                _InternalName = StructuralObject.SetValidValue(value, false, "InternalName");
                ReportPropertyChanged("InternalName");
                OnInternalNameChanged();
            }
        }
        private global::System.String _InternalName;
        partial void OnInternalNameChanging(global::System.String value);
        partial void OnInternalNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String EmailSignature
        {
            get
            {
                return _EmailSignature;
            }
            set
            {
                OnEmailSignatureChanging(value);
                ReportPropertyChanging("EmailSignature");
                _EmailSignature = StructuralObject.SetValidValue(value, true, "EmailSignature");
                ReportPropertyChanged("EmailSignature");
                OnEmailSignatureChanged();
            }
        }
        private global::System.String _EmailSignature;
        partial void OnEmailSignatureChanging(global::System.String value);
        partial void OnEmailSignatureChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Activities_Users", "Activity")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("EventManagementSystemModel.FK_Activities_Users", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("EventManagementSystemModel.FK_Activities_Users", "Activity", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Corresponcences_Users", "Corresponcence")]
        public EntityCollection<Corresponcence> Corresponcences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Corresponcence>("EventManagementSystemModel.FK_Corresponcences_Users", "Corresponcence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Corresponcence>("EventManagementSystemModel.FK_Corresponcences_Users", "Corresponcence", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Users_DefaultSettingsForEnquiries", "DefaultSettingsForEnquiry")]
        public EntityCollection<DefaultSettingsForEnquiry> DefaultSettingsForEnquiries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DefaultSettingsForEnquiry>("EventManagementSystemModel.FK_Users_DefaultSettingsForEnquiries", "DefaultSettingsForEnquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DefaultSettingsForEnquiry>("EventManagementSystemModel.FK_Users_DefaultSettingsForEnquiries", "DefaultSettingsForEnquiry", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_Users", "Enquiry")]
        public EntityCollection<Enquiry> Enquiries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_Users", "Enquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_Users", "Enquiry", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Enquiries_Users1", "Enquiry")]
        public EntityCollection<Enquiry> Enquiries1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_Users1", "Enquiry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Enquiry>("EventManagementSystemModel.FK_Enquiries_Users1", "Enquiry", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EnquiryNotes_Users", "EnquiryNote")]
        public EntityCollection<EnquiryNote> EnquiryNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EnquiryNote>("EventManagementSystemModel.FK_EnquiryNotes_Users", "EnquiryNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EnquiryNote>("EventManagementSystemModel.FK_EnquiryNotes_Users", "EnquiryNote", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EnquiryUpdates_Users", "EnquiryUpdate")]
        public EntityCollection<EnquiryUpdate> EnquiryUpdates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EnquiryUpdate>("EventManagementSystemModel.FK_EnquiryUpdates_Users", "EnquiryUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EnquiryUpdate>("EventManagementSystemModel.FK_EnquiryUpdates_Users", "EnquiryUpdate", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventNotes_Users", "EventNote")]
        public EntityCollection<EventNote> EventNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventNote>("EventManagementSystemModel.FK_EventNotes_Users", "EventNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventNote>("EventManagementSystemModel.FK_EventNotes_Users", "EventNote", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventPayments_Users", "EventPayment")]
        public EntityCollection<EventPayment> EventPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventPayment>("EventManagementSystemModel.FK_EventPayments_Users", "EventPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventPayment>("EventManagementSystemModel.FK_EventPayments_Users", "EventPayment", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventTypes_Users", "EventType")]
        public EntityCollection<EventType> EventTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventType>("EventManagementSystemModel.FK_EventTypes_Users", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventType>("EventManagementSystemModel.FK_EventTypes_Users", "EventType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventUpdates_Users", "EventUpdate")]
        public EntityCollection<EventUpdate> EventUpdates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventUpdate>("EventManagementSystemModel.FK_EventUpdates_Users", "EventUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventUpdate>("EventManagementSystemModel.FK_EventUpdates_Users", "EventUpdate", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_FollowUps_Users", "FollowUp")]
        public EntityCollection<FollowUp> FollowUps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FollowUp>("EventManagementSystemModel.FK_FollowUps_Users", "FollowUp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FollowUp>("EventManagementSystemModel.FK_FollowUps_Users", "FollowUp", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_FollowUps_Users1", "FollowUp")]
        public EntityCollection<FollowUp> FollowUps1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FollowUp>("EventManagementSystemModel.FK_FollowUps_Users1", "FollowUp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FollowUp>("EventManagementSystemModel.FK_FollowUps_Users1", "FollowUp", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MailTemplates_Users", "MailTemplate")]
        public EntityCollection<MailTemplate> MailTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MailTemplate>("EventManagementSystemModel.FK_MailTemplates_Users", "MailTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MailTemplate>("EventManagementSystemModel.FK_MailTemplates_Users", "MailTemplate", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Users_Users", "UserDepartment")]
        public UserDepartment UserDepartment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDepartment>("EventManagementSystemModel.FK_Users_Users", "UserDepartment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDepartment>("EventManagementSystemModel.FK_Users_Users", "UserDepartment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserDepartment> UserDepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserDepartment>("EventManagementSystemModel.FK_Users_Users", "UserDepartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserDepartment>("EventManagementSystemModel.FK_Users_Users", "UserDepartment", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Users_UserGroups", "UserGroup")]
        public UserGroup UserGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("EventManagementSystemModel.FK_Users_UserGroups", "UserGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("EventManagementSystemModel.FK_Users_UserGroups", "UserGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserGroup> UserGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("EventManagementSystemModel.FK_Users_UserGroups", "UserGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserGroup>("EventManagementSystemModel.FK_Users_UserGroups", "UserGroup", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Users_UserJobTypes", "UserJobType")]
        public UserJobType UserJobType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserJobType>("EventManagementSystemModel.FK_Users_UserJobTypes", "UserJobType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserJobType>("EventManagementSystemModel.FK_Users_UserJobTypes", "UserJobType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserJobType> UserJobTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserJobType>("EventManagementSystemModel.FK_Users_UserJobTypes", "UserJobType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserJobType>("EventManagementSystemModel.FK_Users_UserJobTypes", "UserJobType", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_UserPermissions_Users", "UserPermission")]
        public EntityCollection<UserPermission> UserPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPermission>("EventManagementSystemModel.FK_UserPermissions_Users", "UserPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPermission>("EventManagementSystemModel.FK_UserPermissions_Users", "UserPermission", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK__SystemSet__UserI__41B8C09B", "SystemSetting")]
        public EntityCollection<SystemSetting> SystemSettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SystemSetting>("EventManagementSystemModel.FK__SystemSet__UserI__41B8C09B", "SystemSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SystemSetting>("EventManagementSystemModel.FK__SystemSet__UserI__41B8C09B", "SystemSetting", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventTypeTODOs_AddedByUser", "EventTypeTODO")]
        public EntityCollection<EventTypeTODO> EventTypeTODOs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventTypeTODO>("EventManagementSystemModel.FK_EventTypeTODOs_AddedByUser", "EventTypeTODO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventTypeTODO>("EventManagementSystemModel.FK_EventTypeTODOs_AddedByUser", "EventTypeTODO", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventTypeTODOs_AssignedToUser", "EventTypeTODO")]
        public EntityCollection<EventTypeTODO> EventTypeTODOs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventTypeTODO>("EventManagementSystemModel.FK_EventTypeTODOs_AssignedToUser", "EventTypeTODO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventTypeTODO>("EventManagementSystemModel.FK_EventTypeTODOs_AssignedToUser", "EventTypeTODO", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventReminders_AssignedToUsers", "EventReminder")]
        public EntityCollection<EventReminder> EventReminders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventReminder>("EventManagementSystemModel.FK_EventReminders_AssignedToUsers", "EventReminder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventReminder>("EventManagementSystemModel.FK_EventReminders_AssignedToUsers", "EventReminder", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_EventReminders_CreatedByUsers", "EventReminder")]
        public EntityCollection<EventReminder> EventReminders1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventReminder>("EventManagementSystemModel.FK_EventReminders_CreatedByUsers", "EventReminder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventReminder>("EventManagementSystemModel.FK_EventReminders_CreatedByUsers", "EventReminder", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MemberNotes_Users", "MemberNote")]
        public EntityCollection<MemberNote> MemberNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MemberNote>("EventManagementSystemModel.FK_MemberNotes_Users", "MemberNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MemberNote>("EventManagementSystemModel.FK_MemberNotes_Users", "MemberNote", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MemberNotes_Users1", "MemberNote")]
        public EntityCollection<MemberNote> MemberNotes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MemberNote>("EventManagementSystemModel.FK_MemberNotes_Users1", "MemberNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MemberNote>("EventManagementSystemModel.FK_MemberNotes_Users1", "MemberNote", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_MembershipUpdates_Users", "MembershipUpdate")]
        public EntityCollection<MembershipUpdate> MembershipUpdates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MembershipUpdate>("EventManagementSystemModel.FK_MembershipUpdates_Users", "MembershipUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MembershipUpdate>("EventManagementSystemModel.FK_MembershipUpdates_Users", "MembershipUpdate", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "UserDepartment")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class UserDepartment : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new UserDepartment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="department">Initial value of the Department property.</param>
        public static UserDepartment CreateUserDepartment(global::System.Guid id, global::System.String department)
        {
            UserDepartment userDepartment = new UserDepartment();
            userDepartment.ID = id;
            userDepartment.Department = department;
            return userDepartment;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Department
        {
            get
            {
                return _Department;
            }
            set
            {
                OnDepartmentChanging(value);
                ReportPropertyChanging("Department");
                _Department = StructuralObject.SetValidValue(value, false, "Department");
                ReportPropertyChanged("Department");
                OnDepartmentChanged();
            }
        }
        private global::System.String _Department;
        partial void OnDepartmentChanging(global::System.String value);
        partial void OnDepartmentChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Users_Users", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("EventManagementSystemModel.FK_Users_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("EventManagementSystemModel.FK_Users_Users", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "UserGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class UserGroup : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new UserGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isAdmin">Initial value of the IsAdmin property.</param>
        /// <param name="colour">Initial value of the Colour property.</param>
        /// <param name="authCode">Initial value of the AuthCode property.</param>
        public static UserGroup CreateUserGroup(global::System.Guid id, global::System.String name, global::System.Boolean isAdmin, global::System.String colour, global::System.String authCode)
        {
            UserGroup userGroup = new UserGroup();
            userGroup.ID = id;
            userGroup.Name = name;
            userGroup.IsAdmin = isAdmin;
            userGroup.Colour = colour;
            userGroup.AuthCode = authCode;
            return userGroup;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value, "IsAdmin");
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private global::System.Boolean _IsAdmin;
        partial void OnIsAdminChanging(global::System.Boolean value);
        partial void OnIsAdminChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Colour
        {
            get
            {
                return _Colour;
            }
            set
            {
                OnColourChanging(value);
                ReportPropertyChanging("Colour");
                _Colour = StructuralObject.SetValidValue(value, false, "Colour");
                ReportPropertyChanged("Colour");
                OnColourChanged();
            }
        }
        private global::System.String _Colour;
        partial void OnColourChanging(global::System.String value);
        partial void OnColourChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String AuthCode
        {
            get
            {
                return _AuthCode;
            }
            set
            {
                OnAuthCodeChanging(value);
                ReportPropertyChanging("AuthCode");
                _AuthCode = StructuralObject.SetValidValue(value, false, "AuthCode");
                ReportPropertyChanged("AuthCode");
                OnAuthCodeChanged();
            }
        }
        private global::System.String _AuthCode;
        partial void OnAuthCodeChanging(global::System.String value);
        partial void OnAuthCodeChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_UserGroupPermissions_UserGroups", "UserGroupPermission")]
        public EntityCollection<UserGroupPermission> UserGroupPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserGroupPermission>("EventManagementSystemModel.FK_UserGroupPermissions_UserGroups", "UserGroupPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserGroupPermission>("EventManagementSystemModel.FK_UserGroupPermissions_UserGroups", "UserGroupPermission", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Users_UserGroups", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("EventManagementSystemModel.FK_Users_UserGroups", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("EventManagementSystemModel.FK_Users_UserGroups", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "UserGroupPermission")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class UserGroupPermission : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new UserGroupPermission object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="permissionID">Initial value of the PermissionID property.</param>
        public static UserGroupPermission CreateUserGroupPermission(global::System.Guid id, global::System.Guid groupID, global::System.Guid permissionID)
        {
            UserGroupPermission userGroupPermission = new UserGroupPermission();
            userGroupPermission.ID = id;
            userGroupPermission.GroupID = groupID;
            userGroupPermission.PermissionID = permissionID;
            return userGroupPermission;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value, "GroupID");
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
        private global::System.Guid _GroupID;
        partial void OnGroupIDChanging(global::System.Guid value);
        partial void OnGroupIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid PermissionID
        {
            get
            {
                return _PermissionID;
            }
            set
            {
                OnPermissionIDChanging(value);
                ReportPropertyChanging("PermissionID");
                _PermissionID = StructuralObject.SetValidValue(value, "PermissionID");
                ReportPropertyChanged("PermissionID");
                OnPermissionIDChanged();
            }
        }
        private global::System.Guid _PermissionID;
        partial void OnPermissionIDChanging(global::System.Guid value);
        partial void OnPermissionIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_UserGroupPermissions_Permissions", "Permission")]
        public Permission Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("EventManagementSystemModel.FK_UserGroupPermissions_Permissions", "Permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("EventManagementSystemModel.FK_UserGroupPermissions_Permissions", "Permission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Permission> PermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("EventManagementSystemModel.FK_UserGroupPermissions_Permissions", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Permission>("EventManagementSystemModel.FK_UserGroupPermissions_Permissions", "Permission", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_UserGroupPermissions_UserGroups", "UserGroup")]
        public UserGroup UserGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("EventManagementSystemModel.FK_UserGroupPermissions_UserGroups", "UserGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("EventManagementSystemModel.FK_UserGroupPermissions_UserGroups", "UserGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserGroup> UserGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("EventManagementSystemModel.FK_UserGroupPermissions_UserGroups", "UserGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserGroup>("EventManagementSystemModel.FK_UserGroupPermissions_UserGroups", "UserGroup", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "UserJobType")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class UserJobType : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new UserJobType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static UserJobType CreateUserJobType(global::System.Guid id, global::System.String type)
        {
            UserJobType userJobType = new UserJobType();
            userJobType.ID = id;
            userJobType.Type = type;
            return userJobType;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_Users_UserJobTypes", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("EventManagementSystemModel.FK_Users_UserJobTypes", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("EventManagementSystemModel.FK_Users_UserJobTypes", "User", value);
                }
            }
        }

        #endregion

    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "UserPermission")]
    [Serializable()]
    [DataContractAttribute(IsReference = true)]
    public partial class UserPermission : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new UserPermission object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="permissionID">Initial value of the PermissionID property.</param>
        public static UserPermission CreateUserPermission(global::System.Guid id, global::System.Guid userID, global::System.Guid permissionID)
        {
            UserPermission userPermission = new UserPermission();
            userPermission.ID = id;
            userPermission.UserID = userID;
            userPermission.PermissionID = permissionID;
            return userPermission;
        }

        #endregion

        #region Simple Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = true, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty = false, IsNullable = false)]
        [DataMemberAttribute()]
        public global::System.Guid PermissionID
        {
            get
            {
                return _PermissionID;
            }
            set
            {
                OnPermissionIDChanging(value);
                ReportPropertyChanging("PermissionID");
                _PermissionID = StructuralObject.SetValidValue(value, "PermissionID");
                ReportPropertyChanged("PermissionID");
                OnPermissionIDChanged();
            }
        }
        private global::System.Guid _PermissionID;
        partial void OnPermissionIDChanging(global::System.Guid value);
        partial void OnPermissionIDChanged();

        #endregion

        #region Navigation Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_UserPermissions_Permissions", "Permission")]
        public Permission Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("EventManagementSystemModel.FK_UserPermissions_Permissions", "Permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("EventManagementSystemModel.FK_UserPermissions_Permissions", "Permission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Permission> PermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("EventManagementSystemModel.FK_UserPermissions_Permissions", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Permission>("EventManagementSystemModel.FK_UserPermissions_Permissions", "Permission", value);
                }
            }
        }

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EventManagementSystemModel", "FK_UserPermissions_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_UserPermissions_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_UserPermissions_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EventManagementSystemModel.FK_UserPermissions_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EventManagementSystemModel.FK_UserPermissions_Users", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region Enums

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEnumTypeAttribute(NamespaceName = "EventManagementSystemModel", Name = "UpdateAction")]
    [DataContractAttribute()]
    public enum UpdateAction : int
    {
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EnumMemberAttribute()]
        Added = 0,

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EnumMemberAttribute()]
        Edited = 1,

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EnumMemberAttribute()]
        Removed = 2
    }

    #endregion

}
